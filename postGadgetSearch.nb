(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    677000,      12752]
NotebookOptionsPosition[    674047,      12659]
NotebookOutlinePosition[    674405,      12675]
CellTagsIndexPosition[    674362,      12672]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[{
 RowBox[{"Clear", "[", 
  RowBox[{
  "H", ",", "A", ",", "B", ",", "x1", ",", "x0", ",", "psi", ",", "out", ",", 
   "Dmat", ",", "d1", ",", "d2", ",", "d3", ",", "d4", ",", "psi0", ",", "U", 
   ",", "Re0", ",", "Re1", ",", "Im1", ",", "Im0"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{
   "sigX", ",", "sigZ", ",", "sigY", ",", "theta1", ",", "theta2", ",", 
    "theta3", ",", "alpha"}], "]"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Section", " ", "used", " ", "for", " ", "universal", " ", "objects", " ", 
    
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"pauli", "'"}], "s"}], ",", " ", "H", ",", " ", 
      RowBox[{"etc", "."}]}], ")"}], " ", "and", " ", 
    RowBox[{"functions", ".", " ", "If"}], " ", "new", " ", "functions", " ", 
    "need", " ", "to", " ", "be", " ", 
    RowBox[{"written", "/", "tested"}], " ", "use", " ", "a", " ", "new", " ",
     "cell", " ", "beneath", " ", "and", " ", "then", " ", 
    RowBox[{"merge", "."}]}], " ", "\[IndentingNewLine]", "*)"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sigX", " ", "=", " ", 
   RowBox[{"PauliMatrix", "[", "1", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sigY", " ", "=", " ", 
   RowBox[{"PauliMatrix", "[", "2", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sigZ", " ", "=", " ", 
   RowBox[{"PauliMatrix", "[", "3", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"H", " ", "=", " ", 
    RowBox[{
     RowBox[{"1", "/", 
      RowBox[{"(", 
       RowBox[{"Sqrt", "[", "2", "]"}], ")"}]}], "*", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", 
         RowBox[{"-", "1"}]}], "}"}]}], "}"}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"rz", "[", "thetaZ_", "]"}], " ", ":=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"Cos", "[", 
      RowBox[{"thetaZ", "/", "2"}], "]"}], "*", 
     RowBox[{"IdentityMatrix", "[", "2", "]"}]}], " ", "-", " ", 
    RowBox[{"I", "*", 
     RowBox[{"Sin", "[", 
      RowBox[{"thetaZ", "/", "2"}], "]"}], "*", "sigZ"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"rx", "[", "thetaX_", "]"}], " ", ":=", 
    RowBox[{
     RowBox[{
      RowBox[{"Cos", "[", 
       RowBox[{"thetaX", "/", "2"}], "]"}], "*", 
      RowBox[{"IdentityMatrix", "[", "2", "]"}]}], " ", "-", " ", 
     RowBox[{"I", "*", 
      RowBox[{"Sin", "[", 
       RowBox[{"thetaX", "/", "2"}], "]"}], "*", "sigX"}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"prod", "[", 
     RowBox[{"psi_", ",", "phi_"}], "]"}], ":=", 
    RowBox[{
     RowBox[{"(", " ", 
      RowBox[{"psi", ".", 
       RowBox[{"Conjugate", "[", "phi", "]"}]}], ")"}], "*", 
     RowBox[{"(", 
      RowBox[{"phi", ".", 
       RowBox[{"Conjugate", "[", "psi", "]"}]}], ")"}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"buildU", "[", 
    RowBox[{"alpha_", ",", "theta1_", ",", "theta2_", ",", "theta3_"}], "]"}],
    ":=", " ", 
   RowBox[{
    RowBox[{"Exp", "[", 
     RowBox[{"I", "*", "alpha"}], "]"}], "*", 
    RowBox[{
     RowBox[{"rz", "[", "theta1", "]"}], ".", 
     RowBox[{"rx", "[", "theta2", "]"}], ".", 
     RowBox[{"rz", "[", "theta3", "]"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"getArgMins", "[", 
    RowBox[{"psi_", ",", "phi_", ",", "params"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"Im0", ",", "Im1", ",", "Re0", ",", "Re1"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Re0", " ", "=", " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Re", "[", 
           RowBox[{"phi", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "]"}], " ", "-", " ", 
          RowBox[{"Re", "[", 
           RowBox[{"psi", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "]"}]}], ")"}], "^", "2"}]}], ";",
       "\[IndentingNewLine]", 
      RowBox[{"Re1", " ", "=", " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Re", "[", 
           RowBox[{"phi", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "]"}], " ", "-", " ", 
          RowBox[{"Re", "[", 
           RowBox[{"psi", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "]"}]}], ")"}], "^", "2"}]}], ";",
       "\[IndentingNewLine]", 
      RowBox[{"Im0", " ", "=", " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Im", "[", 
           RowBox[{"phi", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "]"}], " ", "-", " ", 
          RowBox[{"Im", "[", 
           RowBox[{"psi", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "]"}]}], ")"}], "^", "2"}]}], ";",
       "\[IndentingNewLine]", 
      RowBox[{"Im1", " ", "=", " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Im", "[", 
           RowBox[{"phi", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "]"}], " ", "-", " ", 
          RowBox[{"Im", "[", 
           RowBox[{"psi", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "]"}]}], ")"}], "^", "2"}]}], ";",
       "\[IndentingNewLine]", 
      RowBox[{"Return", "[", 
       RowBox[{"NArgMin", "[", 
        RowBox[{
         RowBox[{"Re0", "+", "Re1", "+", "Im0", "+", "Im1"}], ",", "params"}],
         "]"}], "]"}], ";"}]}], "\[IndentingNewLine]", "]"}]}], 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"getOptDmat", "[", 
     RowBox[{"U_", ",", "n_"}], "]"}], " ", ":=", " ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "A", ",", "B", ",", "psi", ",", "psi0", ",", "t", ",", "AtU", ",", 
        "UtB", ",", "Dmat", ",", "d1", ",", "d2", " ", ",", "d3", ",", "d4", 
        ",", "finalMat", ",", "phi", ",", "temp", ",", "tot"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"t", " ", "=", " ", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"i", "=", "0"}], ",", 
         RowBox[{"i", "<", "n"}], ",", 
         RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"Print", "[", 
            RowBox[{"StringForm", "[", 
             RowBox[{"\"\<First For Loop: ``\>\"", " ", ",", "i"}], "]"}], 
            "]"}], ";"}], "*)"}], "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"A", " ", "=", " ", 
           RowBox[{"DiagonalMatrix", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Exp", "[", 
               RowBox[{"I", "*", 
                RowBox[{"RandomReal", "[", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"-", "Pi"}], "/", "2"}], ",", 
                   RowBox[{"Pi", "/", "2"}]}], "}"}], "]"}]}], "]"}], ",", 
              RowBox[{"Exp", "[", 
               RowBox[{"I", "*", 
                RowBox[{"RandomReal", "[", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"-", "Pi"}], "/", "2"}], ",", 
                   RowBox[{"Pi", "/", "2"}]}], "}"}], "]"}]}], "]"}]}], "}"}],
             "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"B", " ", "=", " ", 
           RowBox[{"DiagonalMatrix", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Exp", "[", 
               RowBox[{"I", "*", 
                RowBox[{"RandomReal", "[", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"-", "Pi"}], "/", "2"}], ",", 
                   RowBox[{"Pi", "/", "2"}]}], "}"}], "]"}]}], "]"}], ",", 
              RowBox[{"Exp", "[", 
               RowBox[{"I", "*", 
                RowBox[{"RandomReal", "[", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"-", "Pi"}], "/", "2"}], ",", 
                   RowBox[{"Pi", "/", "2"}]}], "}"}], "]"}]}], "]"}]}], "}"}],
             "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"psi0", " ", "=", " ", 
           RowBox[{"Normalize", "[", 
            RowBox[{"RandomComplex", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "1"}], "-", "I"}], ",", 
                RowBox[{"1", "+", "I"}]}], "}"}], ",", "2"}], "]"}], "]"}]}], 
          ";", "\[IndentingNewLine]", 
          RowBox[{"psi", " ", "=", " ", 
           RowBox[{"B", ".", "H", ".", "A", ".", "psi0"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"psi0", " ", "=", " ", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"psi0", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", "0", ",", 
             RowBox[{"psi0", "[", 
              RowBox[{"[", "2", "]"}], "]"}], ",", "0"}], "}"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"AtU", "=", " ", 
           RowBox[{"ArrayFlatten", "[", 
            RowBox[{"TensorProduct", "[", 
             RowBox[{"A", ",", "U"}], "]"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"UtB", " ", "=", " ", 
           RowBox[{"ArrayFlatten", "[", 
            RowBox[{"TensorProduct", "[", 
             RowBox[{
              RowBox[{"ConjugateTranspose", "[", "U", "]"}], ",", "B"}], 
             "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{"Dmat", " ", "=", " ", 
           RowBox[{"DiagonalMatrix", "[", 
            RowBox[{"{", 
             RowBox[{"d1", ",", "d2", ",", "d3", ",", "d4"}], "}"}], "]"}]}], 
          ";", "\[IndentingNewLine]", 
          RowBox[{"finalMat", " ", "=", " ", 
           RowBox[{"UtB", ".", "Dmat", ".", "AtU"}]}], ";", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"phi", " ", "=", " ", 
           RowBox[{"finalMat", ".", "psi0"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"phi", " ", "=", " ", 
           RowBox[{
            RowBox[{
             RowBox[{"phi", "[", 
              RowBox[{"[", 
               RowBox[{"1", ";;", "2"}], "]"}], "]"}], "//", "Normalize"}], "//",
             "Simplify"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"temp", " ", "=", " ", 
           RowBox[{"getArgMins", "[", 
            RowBox[{"psi", ",", "phi", ",", 
             RowBox[{"{", 
              RowBox[{"d1", ",", "d2", ",", "d3", ",", "d4"}], "}"}]}], 
            "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"t", " ", "=", " ", 
           RowBox[{"t", " ", "+", "temp"}]}], "  ", ";"}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
        "Line", " ", "below", " ", "converts", " ", "a", " ", "random", " ", 
         "t", " ", "to", " ", "unitary", " ", 
         RowBox[{"t", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"t", " ", "=", " ", 
        RowBox[{"t", "/", 
         RowBox[{"Mean", "[", 
          RowBox[{"Abs", "[", "t", "]"}], "]"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Dmat", " ", "=", " ", 
        RowBox[{"DiagonalMatrix", "[", "t", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Return", "[", "Dmat", "]"}]}]}], "\[IndentingNewLine]", 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"testOptMat", "[", 
    RowBox[{"Dmat_", ",", "U_", ",", "n_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "A", ",", "B", ",", "psi", ",", "psi0", ",", "AtU", ",", "UtB", ",", 
       "finalMat", ",", "phi", ",", "results"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"results", " ", "=", " ", 
       RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"i", "=", "0"}], ",", 
        RowBox[{"i", "<", "n"}], ",", 
        RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"A", " ", "=", " ", 
          RowBox[{"DiagonalMatrix", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Exp", "[", 
              RowBox[{"I", "*", 
               RowBox[{"RandomReal", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "Pi"}], "/", "2"}], ",", 
                  RowBox[{"Pi", "/", "2"}]}], "}"}], "]"}]}], "]"}], ",", 
             RowBox[{"Exp", "[", 
              RowBox[{"I", "*", 
               RowBox[{"RandomReal", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "Pi"}], "/", "2"}], ",", 
                  RowBox[{"Pi", "/", "2"}]}], "}"}], "]"}]}], "]"}]}], "}"}], 
           "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"B", " ", "=", " ", 
          RowBox[{"DiagonalMatrix", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Exp", "[", 
              RowBox[{"I", "*", 
               RowBox[{"RandomReal", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "Pi"}], "/", "2"}], ",", 
                  RowBox[{"Pi", "/", "2"}]}], "}"}], "]"}]}], "]"}], ",", 
             RowBox[{"Exp", "[", 
              RowBox[{"I", "*", 
               RowBox[{"RandomReal", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "Pi"}], "/", "2"}], ",", 
                  RowBox[{"Pi", "/", "2"}]}], "}"}], "]"}]}], "]"}]}], "}"}], 
           "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"psi0", " ", "=", " ", 
          RowBox[{"Normalize", "[", 
           RowBox[{"RandomComplex", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "1"}], "-", "I"}], ",", 
               RowBox[{"1", "+", "I"}]}], "}"}], ",", "2"}], "]"}], "]"}]}], 
         ";", "\[IndentingNewLine]", 
         RowBox[{"psi", " ", "=", " ", 
          RowBox[{"B", ".", "H", ".", "A", ".", "psi0"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"psi0", " ", "=", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"psi0", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", "0", ",", 
            RowBox[{"psi0", "[", 
             RowBox[{"[", "2", "]"}], "]"}], ",", "0"}], "}"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"AtU", "=", " ", 
          RowBox[{"ArrayFlatten", "[", 
           RowBox[{"TensorProduct", "[", 
            RowBox[{"A", ",", "U"}], "]"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"UtB", " ", "=", " ", 
          RowBox[{"ArrayFlatten", "[", 
           RowBox[{"TensorProduct", "[", 
            RowBox[{
             RowBox[{"ConjugateTranspose", "[", "U", "]"}], ",", "B"}], "]"}],
            "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"finalMat", " ", "=", " ", 
          RowBox[{"UtB", ".", "Dmat", ".", "AtU"}]}], ";", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"phi", " ", "=", " ", 
          RowBox[{"finalMat", ".", "psi0"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"phi", " ", "=", " ", 
          RowBox[{
           RowBox[{
            RowBox[{"phi", "[", 
             RowBox[{"[", 
              RowBox[{"1", ";;", "2"}], "]"}], "]"}], "//", "Normalize"}], "//",
            "Simplify"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"results", ",", 
           RowBox[{"prod", "[", 
            RowBox[{"phi", ",", "psi"}], "]"}]}], "]"}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "results", "]"}]}]}], "\[IndentingNewLine]", 
    "]"}]}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"getAverageOverlap", "[", 
    RowBox[{
    "alpha_", ",", "theta1_", ",", "theta2_", ",", "theta3_", ",", "n_"}], 
    "]"}], ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"U", ",", "Dmat", ",", "results"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"U", " ", "=", " ", 
       RowBox[{"buildU", "[", 
        RowBox[{"alpha", ",", "theta1", ",", "theta2", ",", "theta3"}], 
        "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"Dmat", " ", "=", " ", 
       RowBox[{"getOptDmat", "[", 
        RowBox[{"U", ",", "n"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"results", " ", "=", " ", 
       RowBox[{"testOptMat", "[", 
        RowBox[{"Dmat", ",", "U", ",", "n"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Return", "[", 
       RowBox[{"Mean", "[", "results", "]"}], "]"}], ";"}]}], 
    "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"getAvgOverlapList", "[", 
    RowBox[{"list_", ",", "n_"}], "]"}], ":=", 
   RowBox[{"getAverageOverlap", "[", 
    RowBox[{
     RowBox[{"list", "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{"list", "[", 
      RowBox[{"[", "2", "]"}], "]"}], ",", 
     RowBox[{"list", "[", 
      RowBox[{"[", "3", "]"}], "]"}], ",", 
     RowBox[{"list", "[", 
      RowBox[{"[", "4", "]"}], "]"}], ",", "n"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"h", "[", "a_", "]"}], " ", ":=", " ", 
    RowBox[{"getAverageOverlap", "[", 
     RowBox[{
      RowBox[{"Pi", "/", "2"}], ",", 
      RowBox[{"a", "[", 
       RowBox[{"[", "1", "]"}], "]"}], ",", 
      RowBox[{"a", "[", 
       RowBox[{"[", "2", "]"}], "]"}], ",", 
      RowBox[{"Pi", "/", "2"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"getStdOverlapList", "[", 
   RowBox[{"list_", ",", "n_"}], "]"}], ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"U", ",", "Dmat", ",", "results"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"U", " ", "=", " ", 
      RowBox[{"buildU", "[", 
       RowBox[{
        RowBox[{"list", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", 
        RowBox[{"list", "[", 
         RowBox[{"[", "2", "]"}], "]"}], ",", 
        RowBox[{"list", "[", 
         RowBox[{"[", "3", "]"}], "]"}], ",", 
        RowBox[{"list", "[", 
         RowBox[{"[", "4", "]"}], "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"Dmat", " ", "=", " ", 
      RowBox[{"getOptDmat", "[", 
       RowBox[{"U", ",", "n"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"results", " ", "=", " ", 
      RowBox[{"testOptMat", "[", 
       RowBox[{"Dmat", ",", "U", ",", "n"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Return", "[", 
      RowBox[{"StandardDeviation", "[", "results", "]"}], "]"}], ";"}]}], 
   "\[IndentingNewLine]", "]"}]}]}], "Input",
 CellChangeTimes->{{3.724677807123334*^9, 3.724677911248261*^9}, {
   3.724678058731577*^9, 3.7246780822412663`*^9}, {3.724678131952627*^9, 
   3.7246783414466257`*^9}, {3.7246784450428867`*^9, 3.724678473577265*^9}, {
   3.724678788877812*^9, 3.724678819402508*^9}, {3.724678877352991*^9, 
   3.724678988868335*^9}, {3.724679396699709*^9, 3.7246794599611807`*^9}, {
   3.724679508529323*^9, 3.724679552357501*^9}, {3.724679723546233*^9, 
   3.724679747041151*^9}, {3.7246797810707397`*^9, 3.724679883337345*^9}, {
   3.724679940976717*^9, 3.724679961548766*^9}, {3.7246799948209047`*^9, 
   3.724679999250454*^9}, {3.724680725999668*^9, 3.724680834680336*^9}, {
   3.724680985774116*^9, 3.724681114803865*^9}, {3.7246811949737463`*^9, 
   3.7246812042594223`*^9}, {3.724681403167575*^9, 3.724681405251067*^9}, {
   3.72468144136499*^9, 3.72468145321662*^9}, {3.724682014164468*^9, 
   3.724682014530559*^9}, {3.724687684087722*^9, 3.72468769211091*^9}, {
   3.724687738750205*^9, 3.724687752276499*^9}, {3.724687785925482*^9, 
   3.724687788082694*^9}, {3.724687882987075*^9, 3.724687901360815*^9}, {
   3.7246901362941523`*^9, 3.7246901521857443`*^9}, {3.724690611238801*^9, 
   3.724690734850486*^9}, {3.7246908751291037`*^9, 3.724691028078026*^9}, {
   3.724691418351529*^9, 3.724691428751128*^9}, {3.724691474744199*^9, 
   3.72469153808176*^9}, {3.724691582116469*^9, 3.7246916000250683`*^9}, {
   3.72469311565947*^9, 3.7246931817692957`*^9}, {3.724693306658093*^9, 
   3.7246933260824966`*^9}, {3.724693357741358*^9, 3.7246933697120657`*^9}, {
   3.7246938646091833`*^9, 3.72469386746029*^9}, {3.724694091684144*^9, 
   3.724694104003003*^9}, {3.724694168157745*^9, 3.7246941716890783`*^9}, {
   3.724761483250066*^9, 3.724761550851118*^9}, {3.72476194030868*^9, 
   3.724761943886585*^9}, {3.724762683564847*^9, 3.7247627454238234`*^9}, {
   3.724762791201057*^9, 3.724762798850952*^9}, {3.724762875699142*^9, 
   3.724762881654537*^9}, {3.724762912171467*^9, 3.724762920985641*^9}, {
   3.724763099905347*^9, 3.724763103261868*^9}, 3.724765111671763*^9, {
   3.724765144357916*^9, 3.724765150091426*^9}, {3.724766576756672*^9, 
   3.724766622422347*^9}, {3.7247669293183613`*^9, 3.724766931514283*^9}, {
   3.724767023680771*^9, 3.72476709645172*^9}, {3.724767249975278*^9, 
   3.724767316075178*^9}, {3.724767364525057*^9, 3.724767426095072*^9}, {
   3.724767516444376*^9, 3.7247676057373238`*^9}, {3.7247676861817303`*^9, 
   3.7247677025413647`*^9}, {3.724770216511392*^9, 3.7247702417654877`*^9}, {
   3.7247705472763987`*^9, 3.724770551565538*^9}, {3.724770592167404*^9, 
   3.724770595033245*^9}, {3.7247795914006166`*^9, 3.7247798352088833`*^9}, {
   3.724779872602169*^9, 3.724779875835765*^9}, {3.724779916667672*^9, 
   3.7247799996158447`*^9}, {3.724780108889696*^9, 3.7247801695315*^9}, {
   3.7247802089868917`*^9, 3.724780215512972*^9}, {3.724780363929331*^9, 
   3.724780370926784*^9}, {3.724780889933899*^9, 3.7247808940280027`*^9}, {
   3.724781542051704*^9, 3.724781643604807*^9}, {3.7247816997477617`*^9, 
   3.7247817383217173`*^9}, {3.72478194114679*^9, 3.724781955752726*^9}, {
   3.724781996416542*^9, 3.724782049125108*^9}, {3.724783038626317*^9, 
   3.7247830458650513`*^9}, {3.7247830847958717`*^9, 3.724783104070424*^9}, {
   3.724783156111112*^9, 3.724783162244433*^9}, 3.7250241954948473`*^9, {
   3.725024272422811*^9, 3.725024279179153*^9}, {3.725024345895461*^9, 
   3.725024348836947*^9}, 3.725024463063002*^9, {3.7250246828224573`*^9, 
   3.725024773047419*^9}, {3.725025308905654*^9, 3.725025476478236*^9}, {
   3.7250256026155987`*^9, 3.7250256724352016`*^9}, {3.7250258963409777`*^9, 
   3.7250259629654922`*^9}, {3.725026136437231*^9, 3.725026166327952*^9}, {
   3.72502681718507*^9, 3.725026818313182*^9}, {3.7250275837546062`*^9, 
   3.725027653815381*^9}, {3.7250278978620872`*^9, 3.7250279553910637`*^9}, {
   3.72502803911198*^9, 3.725028060244698*^9}, {3.7250285689619207`*^9, 
   3.725028658908461*^9}, {3.7250287024783983`*^9, 3.725028765063002*^9}, {
   3.725028821879346*^9, 3.725028917104774*^9}, 3.725028989185006*^9, {
   3.725029078885518*^9, 3.725029081014434*^9}, {3.725029128181951*^9, 
   3.7250291521145678`*^9}, {3.725029214855606*^9, 3.725029223871036*^9}, {
   3.72502925725427*^9, 3.7250292579498367`*^9}, {3.725029626933881*^9, 
   3.725029701611557*^9}, {3.725029867501198*^9, 3.7250299131625338`*^9}, 
   3.7250302187839823`*^9, {3.725030534291771*^9, 3.7250306193205137`*^9}, {
   3.725030708398196*^9, 3.725030731819819*^9}, 3.7250307677557783`*^9, {
   3.725030907221355*^9, 3.725030917353395*^9}, {3.725031032712599*^9, 
   3.725031077435644*^9}, {3.725031132922257*^9, 3.72503117081002*^9}, {
   3.7250312268557177`*^9, 3.725031234206655*^9}, 3.7250313371890287`*^9, {
   3.725031587850459*^9, 3.7250316340293913`*^9}, 3.725368930351781*^9, {
   3.7257162758050632`*^9, 3.725716307920877*^9}, 3.7257163741923227`*^9, {
   3.725716540297413*^9, 3.725716543233047*^9}, {3.725716693012138*^9, 
   3.725716776349431*^9}, {3.725716818477152*^9, 3.725716824782689*^9}, {
   3.7257169035398912`*^9, 3.725716909059238*^9}, {3.725718139100257*^9, 
   3.7257181447715273`*^9}, {3.725718252841385*^9, 3.725718355465069*^9}, 
   3.725718415071877*^9, {3.7257185127960777`*^9, 3.725718531105296*^9}, {
   3.725719052206338*^9, 3.725719078827066*^9}, {3.725719120132543*^9, 
   3.725719154935296*^9}, {3.7257192870993357`*^9, 3.725719287975708*^9}, {
   3.7257209297864637`*^9, 3.725720936880425*^9}, 3.725720986953834*^9, {
   3.7257213868237534`*^9, 3.7257214407978067`*^9}, {3.7257219047627563`*^9, 
   3.7257219061566753`*^9}, {3.725721956802864*^9, 3.725721972554483*^9}, {
   3.725722192550403*^9, 3.725722220390238*^9}, {3.725722297571289*^9, 
   3.725722300130767*^9}, {3.7258056875997667`*^9, 3.7258056879498243`*^9}, 
   3.725806172091584*^9, 3.725806295206975*^9, 3.727134801130706*^9, {
   3.727134844069913*^9, 3.727135008652454*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "NEW", " ", "SECTION", " ", "FOR", " ", "TESTING", " ", "OVER", " ", 
    "UNITARY", " ", "MATRICES", " ", "D"}], "\[IndentingNewLine]", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"getOptDmatUnit", "[", 
     RowBox[{"U_", ",", "n_"}], "]"}], " ", ":=", " ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "A", ",", "B", ",", "psi", ",", "psi0", ",", "t", ",", "AtU", ",", 
        "UtB", ",", "Dmat", ",", "d1", ",", "d2", " ", ",", "d3", ",", "d4", 
        ",", "finalMat", ",", "phi", ",", "temp", ",", "tot"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"t", " ", "=", " ", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"i", "=", "0"}], ",", 
         RowBox[{"i", "<", "n"}], ",", 
         RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"A", " ", "=", " ", 
           RowBox[{"DiagonalMatrix", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Exp", "[", 
               RowBox[{"I", "*", 
                RowBox[{"RandomReal", "[", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"-", "Pi"}], "/", "2"}], ",", 
                   RowBox[{"Pi", "/", "2"}]}], "}"}], "]"}]}], "]"}], ",", 
              RowBox[{"Exp", "[", 
               RowBox[{"I", "*", 
                RowBox[{"RandomReal", "[", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"-", "Pi"}], "/", "2"}], ",", 
                   RowBox[{"Pi", "/", "2"}]}], "}"}], "]"}]}], "]"}]}], "}"}],
             "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"B", " ", "=", " ", 
           RowBox[{"DiagonalMatrix", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Exp", "[", 
               RowBox[{"I", "*", 
                RowBox[{"RandomReal", "[", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"-", "Pi"}], "/", "2"}], ",", 
                   RowBox[{"Pi", "/", "2"}]}], "}"}], "]"}]}], "]"}], ",", 
              RowBox[{"Exp", "[", 
               RowBox[{"I", "*", 
                RowBox[{"RandomReal", "[", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"-", "Pi"}], "/", "2"}], ",", 
                   RowBox[{"Pi", "/", "2"}]}], "}"}], "]"}]}], "]"}]}], "}"}],
             "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"psi0", " ", "=", " ", 
           RowBox[{"Normalize", "[", 
            RowBox[{"RandomComplex", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "1"}], "-", "I"}], ",", 
                RowBox[{"1", "+", "I"}]}], "}"}], ",", "2"}], "]"}], "]"}]}], 
          ";", "\[IndentingNewLine]", 
          RowBox[{"psi", " ", "=", " ", 
           RowBox[{"B", ".", "H", ".", "A", ".", "psi0"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"psi0", " ", "=", " ", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"psi0", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", "0", ",", 
             RowBox[{"psi0", "[", 
              RowBox[{"[", "2", "]"}], "]"}], ",", "0"}], "}"}]}], ";", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"AtU", "=", " ", 
           RowBox[{"ArrayFlatten", "[", 
            RowBox[{"TensorProduct", "[", 
             RowBox[{"A", ",", "U"}], "]"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"UtB", " ", "=", " ", 
           RowBox[{"ArrayFlatten", "[", 
            RowBox[{"TensorProduct", "[", 
             RowBox[{
              RowBox[{"ConjugateTranspose", "[", "U", "]"}], ",", "B"}], 
             "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{"Dmat", " ", "=", " ", 
           RowBox[{"DiagonalMatrix", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Exp", "[", 
               RowBox[{"I", "*", "d1"}], "]"}], ",", 
              RowBox[{"Exp", "[", 
               RowBox[{"I", "*", "d2"}], "]"}], ",", 
              RowBox[{"Exp", "[", 
               RowBox[{"I", "*", "d3"}], "]"}], ",", 
              RowBox[{"Exp", "[", 
               RowBox[{"I", "*", "d4"}], "]"}]}], "}"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"finalMat", " ", "=", " ", 
           RowBox[{"UtB", ".", "Dmat", ".", "AtU"}]}], ";", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"phi", " ", "=", " ", 
           RowBox[{"finalMat", ".", "psi0"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"phi", " ", "=", " ", 
           RowBox[{
            RowBox[{
             RowBox[{"phi", "[", 
              RowBox[{"[", 
               RowBox[{"1", ";;", "2"}], "]"}], "]"}], "//", "Normalize"}], "//",
             "Simplify"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"Print", "[", 
           RowBox[{"StringForm", "[", 
            RowBox[{"\"\<phi: ``\>\"", ",", "phi"}], "]"}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"temp", " ", "=", " ", 
           RowBox[{"getArgMinsUnit", "[", 
            RowBox[{"psi", ",", "phi", ",", 
             RowBox[{"{", 
              RowBox[{"d1", ",", "d2", ",", "d3", ",", "d4"}], "}"}]}], 
            "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"t", " ", "=", " ", 
           RowBox[{"t", " ", "+", "temp"}]}], "  ", ";"}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Print", "[", 
        RowBox[{"StringForm", "[", 
         RowBox[{"\"\<Final t: ``\>\"", ",", 
          RowBox[{"t", "/", "n"}]}], "]"}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Return", "[", 
        RowBox[{"DiagonalMatrix", "[", 
         RowBox[{"Exp", "[", 
          RowBox[{"I", "*", 
           RowBox[{"t", "/", "n"}]}], "]"}], "]"}], "]"}], ";"}]}], 
     "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"getArgMinsUnit", "[", 
     RowBox[{"psi_", ",", "phi_", ",", "params_"}], "]"}], ":=", " ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "psiDense", ",", "phiDense", ",", "norm", ",", "mat", ",", "f"}], 
       "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"psiDense", "=", " ", 
        RowBox[{"Outer", "[", 
         RowBox[{"Times", ",", 
          RowBox[{"Conjugate", "[", "psi", "]"}], ",", "psi"}], "]"}]}], " ", 
       ";", "\[IndentingNewLine]", 
       RowBox[{"phiDense", "=", 
        RowBox[{"Outer", "[", 
         RowBox[{"Times", ",", 
          RowBox[{"Conjugate", "[", "phi", "]"}], ",", "phi"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"mat", " ", "=", " ", 
        RowBox[{"FullSimplify", "[", 
         RowBox[{
          RowBox[{"psiDense", "-", "phiDense"}], ",", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Element", "[", 
             RowBox[{
              RowBox[{"params", "[", 
               RowBox[{"[", "i", "]"}], "]"}], ",", "Reals"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", 
              RowBox[{"Length", "[", "params", "]"}]}], "}"}]}], "]"}]}], 
         "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"norm", " ", "=", " ", 
          RowBox[{"FullSimplify", "[", 
           RowBox[{",", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"Element", "[", 
               RowBox[{
                RowBox[{"params", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], ",", "Reals"}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", "1", ",", 
                RowBox[{"Length", "[", "params", "]"}]}], "}"}]}], "]"}]}], 
           "]"}]}], ";"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"f", "[", "x_", "]"}], ":=", 
        RowBox[{"N", "[", 
         RowBox[{
          RowBox[{"0.5", "*", 
           RowBox[{"Sqrt", "[", 
            RowBox[{"Trace", "[", 
             RowBox[{
              RowBox[{"ConjugateTranspose", "[", "mat", "]"}], ".", "mat"}], 
             "]"}], "]"}]}], "/.", 
          RowBox[{"params", "\[Rule]", "x"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Return", "[", 
        RowBox[{"NArgMin", "[", 
         RowBox[{"f", ",", 
          RowBox[{"params", "\[Element]", 
           RowBox[{"Cuboid", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"2", "Pi"}], ",", 
               RowBox[{"2", "Pi"}], ",", 
               RowBox[{"2", "Pi"}], ",", 
               RowBox[{"2", "Pi"}]}], "}"}]}], "]"}]}]}], " ", "]"}], "]"}], 
       ";"}]}], "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"getAverageOverlapUnit", "[", 
     RowBox[{
     "alpha_", ",", "theta1_", ",", "theta2_", ",", "theta3_", ",", "n_"}], 
     "]"}], ":=", " ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"U", ",", "Dmat", ",", "results"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"U", " ", "=", " ", 
        RowBox[{"buildU", "[", 
         RowBox[{"alpha", ",", "theta1", ",", "theta2", ",", "theta3"}], 
         "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"Print", "[", 
        RowBox[{"StringForm", "[", 
         RowBox[{"\"\<U: ``\>\"", ",", 
          RowBox[{"MatrixForm", "[", "U", "]"}]}], "]"}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Dmat", " ", "=", " ", 
        RowBox[{"getOptDmatUnit", "[", 
         RowBox[{"U", ",", "n"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"Print", "[", 
        RowBox[{"StringForm", "[", 
         RowBox[{"\"\<Dmat: ``\>\"", ",", 
          RowBox[{"MatrixForm", "[", "Dmat", "]"}]}], "]"}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"results", " ", "=", " ", 
        RowBox[{"testOptMat", "[", 
         RowBox[{"Dmat", ",", "U", ",", "n"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Return", "[", 
        RowBox[{"Mean", "[", "results", "]"}], "]"}], ";"}]}], 
     "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{"getOptDmatUnit", "[", 
       RowBox[{"H", ",", "1"}], "]"}], "//", "MatrixForm"}], ";"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"getAverageOverlapUnit", "[", 
     RowBox[{
      RowBox[{"Pi", "/", "2"}], ",", 
      RowBox[{"Pi", "/", "2"}], ",", 
      RowBox[{"Pi", "/", "2"}], ",", 
      RowBox[{"Pi", "/", "2"}], ",", "1"}], "]"}], "*)"}]}]}]], "Input",
 CellChangeTimes->{{3.7258044624266777`*^9, 3.725804494196602*^9}, {
   3.725804891336681*^9, 3.7258049158588667`*^9}, {3.725804948017006*^9, 
   3.725804969304492*^9}, {3.7258050117451878`*^9, 3.725805030900793*^9}, {
   3.725805062350801*^9, 3.725805094274379*^9}, {3.7258051729371777`*^9, 
   3.72580517515644*^9}, {3.7258052503987627`*^9, 3.7258052715886374`*^9}, {
   3.7258053805612793`*^9, 3.725805406645733*^9}, {3.725805448918664*^9, 
   3.7258055197654333`*^9}, 3.725805626304995*^9, {3.725805704067705*^9, 
   3.7258057047153263`*^9}, {3.725805744714479*^9, 3.725805773400964*^9}, {
   3.725806195936966*^9, 3.725806199593935*^9}, 3.7258063188691*^9, {
   3.7258063646822233`*^9, 3.725806373976143*^9}, {3.7258064916896353`*^9, 
   3.725806515465488*^9}, {3.725806565023045*^9, 3.725806806406185*^9}, {
   3.725807047285158*^9, 3.7258070771638308`*^9}, {3.7258071368667393`*^9, 
   3.725807159799526*^9}, {3.72580727213449*^9, 3.725807339602037*^9}, {
   3.72580740776202*^9, 3.72580740801472*^9}, {3.725807442987982*^9, 
   3.7258074449812727`*^9}, {3.725807491520915*^9, 3.725807508627331*^9}, {
   3.725807540990019*^9, 3.725807557816752*^9}, {3.725807661336402*^9, 
   3.725807715792823*^9}, {3.725807755238462*^9, 3.7258077589938*^9}, {
   3.725807863920011*^9, 3.72580793344039*^9}, {3.725807982307917*^9, 
   3.725808003806896*^9}, {3.725808133350213*^9, 3.72580817492871*^9}, {
   3.725808444537855*^9, 3.7258084606531878`*^9}, {3.725808519950329*^9, 
   3.7258085360509167`*^9}, {3.725808567500106*^9, 3.7258085739536858`*^9}, {
   3.725808634621567*^9, 3.7258086369723473`*^9}, {3.7258087589089727`*^9, 
   3.7258087599394617`*^9}, {3.725808847588468*^9, 3.7258088730347424`*^9}, {
   3.7258089707958193`*^9, 3.725808976762663*^9}, {3.725809085636045*^9, 
   3.725809091633144*^9}, 3.727445948073889*^9}],

Cell[BoxData["\"\<\>"], "Input",
 CellChangeTimes->{3.7258071401810303`*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"getOptDMat3Q", "[", 
   RowBox[{"U_", ",", "n_"}], "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "A", ",", "B", ",", "d1", ",", "d2", ",", "d3", ",", "d4", ",", "d5", 
      ",", "d6", ",", "d7", ",", "d8", ",", "t", ",", "psi", ",", "phi", ",", 
      "psi0", ",", "Dmat", ",", "temp", ",", "AtUtU", ",", "UtUtB", ",", 
      "finalMat"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"t", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{
       "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
        "0"}], "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"i", "=", "0"}], ",", 
       RowBox[{"i", "<", "n"}], ",", 
       RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"Print", "[", 
          RowBox[{"StringForm", "[", 
           RowBox[{"\"\<First For Loop: ``\>\"", " ", ",", "i"}], "]"}], 
          "]"}], ";"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"A", " ", "=", " ", 
         RowBox[{"DiagonalMatrix", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Exp", "[", 
             RowBox[{"I", "*", 
              RowBox[{"RandomReal", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", "Pi"}], "/", "2"}], ",", 
                 RowBox[{"Pi", "/", "2"}]}], "}"}], "]"}]}], "]"}], ",", 
            RowBox[{"Exp", "[", 
             RowBox[{"I", "*", 
              RowBox[{"RandomReal", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", "Pi"}], "/", "2"}], ",", 
                 RowBox[{"Pi", "/", "2"}]}], "}"}], "]"}]}], "]"}]}], "}"}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"B", " ", "=", " ", 
         RowBox[{"DiagonalMatrix", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Exp", "[", 
             RowBox[{"I", "*", 
              RowBox[{"RandomReal", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", "Pi"}], "/", "2"}], ",", 
                 RowBox[{"Pi", "/", "2"}]}], "}"}], "]"}]}], "]"}], ",", 
            RowBox[{"Exp", "[", 
             RowBox[{"I", "*", 
              RowBox[{"RandomReal", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", "Pi"}], "/", "2"}], ",", 
                 RowBox[{"Pi", "/", "2"}]}], "}"}], "]"}]}], "]"}]}], "}"}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"psi0", " ", "=", " ", 
         RowBox[{"Normalize", "[", 
          RowBox[{"RandomComplex", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "1"}], "-", "I"}], ",", 
              RowBox[{"1", "+", "I"}]}], "}"}], ",", "2"}], "]"}], "]"}]}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"psi", " ", "=", " ", 
         RowBox[{"B", ".", "H", ".", "A", ".", "psi0"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"psi0", " ", "=", " ", 
         RowBox[{
          RowBox[{"TensorProduct", "[", 
           RowBox[{"psi0", ",", 
            RowBox[{"{", 
             RowBox[{"1", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"1", ",", "0"}], "}"}]}], "]"}], "//", "Flatten"}]}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"AtUtU", "=", " ", 
         RowBox[{
          RowBox[{"TensorProduct", "[", 
           RowBox[{
            RowBox[{"ArrayFlatten", "[", 
             RowBox[{"TensorProduct", "[", 
              RowBox[{"A", ",", "U"}], "]"}], "]"}], ",", "U"}], "]"}], "//", 
          "ArrayFlatten"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"UtUtB", " ", "=", " ", 
         RowBox[{
          RowBox[{"TensorProduct", "[", 
           RowBox[{
            RowBox[{"ArrayFlatten", "[", 
             RowBox[{"TensorProduct", "[", 
              RowBox[{
               RowBox[{"ConjugateTranspose", "[", "U", "]"}], ",", 
               RowBox[{"ConjugateTranspose", "[", "U", "]"}]}], "]"}], "]"}], 
            ",", "B"}], "]"}], "//", "ArrayFlatten"}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"Dmat", " ", "=", " ", 
         RowBox[{"DiagonalMatrix", "[", 
          RowBox[{"{", 
           RowBox[{
           "d1", ",", "d2", ",", "d3", ",", "d4", ",", "d5", ",", "d6", ",", 
            "d7", ",", "d8"}], "}"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"finalMat", " ", "=", " ", 
         RowBox[{"UtUtB", ".", "Dmat", ".", "AtUtU"}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"phi", " ", "=", " ", 
         RowBox[{"finalMat", ".", "psi0"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"phi", " ", "=", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"phi", "[", 
            RowBox[{"[", 
             RowBox[{"1", ";;", "2"}], "]"}], "]"}], "//", "Normalize"}], "//",
           "Simplify"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"temp", " ", "=", " ", 
         RowBox[{"getArgMins", "[", 
          RowBox[{"psi", ",", "phi", ",", 
           RowBox[{"{", 
            RowBox[{
            "d1", ",", "d2", ",", "d3", ",", "d4", ",", "d5", ",", "d6", ",", 
             "d7", ",", "d8"}], "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
        
        RowBox[{"t", " ", "=", " ", 
         RowBox[{"t", " ", "+", "temp"}]}], "  ", ";"}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", 
      RowBox[{"DiagonalMatrix", "[", 
       RowBox[{"t", "/", "n"}], "]"}], "]"}], ";"}]}], "\[IndentingNewLine]", 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"testOptMat3Q", "[", 
   RowBox[{"Dmat_", ",", "U_", ",", "n_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "A", ",", "B", ",", "AtUtU", ",", "UtUtB", ",", "psi", ",", "psi0", ",", 
      "phi", ",", "results", ",", "finalMat"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"results", " ", "=", " ", 
      RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"i", "=", "0"}], ",", 
       RowBox[{"i", "<", "n"}], ",", 
       RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"A", " ", "=", " ", 
         RowBox[{"DiagonalMatrix", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Exp", "[", 
             RowBox[{"I", "*", 
              RowBox[{"RandomReal", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", "Pi"}], "/", "2"}], ",", 
                 RowBox[{"Pi", "/", "2"}]}], "}"}], "]"}]}], "]"}], ",", 
            RowBox[{"Exp", "[", 
             RowBox[{"I", "*", 
              RowBox[{"RandomReal", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", "Pi"}], "/", "2"}], ",", 
                 RowBox[{"Pi", "/", "2"}]}], "}"}], "]"}]}], "]"}]}], "}"}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"B", " ", "=", " ", 
         RowBox[{"DiagonalMatrix", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Exp", "[", 
             RowBox[{"I", "*", 
              RowBox[{"RandomReal", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", "Pi"}], "/", "2"}], ",", 
                 RowBox[{"Pi", "/", "2"}]}], "}"}], "]"}]}], "]"}], ",", 
            RowBox[{"Exp", "[", 
             RowBox[{"I", "*", 
              RowBox[{"RandomReal", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", "Pi"}], "/", "2"}], ",", 
                 RowBox[{"Pi", "/", "2"}]}], "}"}], "]"}]}], "]"}]}], "}"}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"psi0", " ", "=", " ", 
         RowBox[{"Normalize", "[", 
          RowBox[{"RandomComplex", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "1"}], "-", "I"}], ",", 
              RowBox[{"1", "+", "I"}]}], "}"}], ",", "2"}], "]"}], "]"}]}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"psi", " ", "=", " ", 
         RowBox[{"B", ".", "H", ".", "A", ".", "psi0"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"psi0", " ", "=", " ", 
         RowBox[{
          RowBox[{"TensorProduct", "[", 
           RowBox[{"psi0", ",", 
            RowBox[{"{", 
             RowBox[{"1", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"1", ",", "0"}], "}"}]}], "]"}], "//", "Flatten"}]}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"AtUtU", "=", " ", 
         RowBox[{
          RowBox[{"TensorProduct", "[", 
           RowBox[{
            RowBox[{"ArrayFlatten", "[", 
             RowBox[{"TensorProduct", "[", 
              RowBox[{"A", ",", "U"}], "]"}], "]"}], ",", "U"}], "]"}], "//", 
          "ArrayFlatten"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"UtUtB", " ", "=", " ", 
         RowBox[{
          RowBox[{"TensorProduct", "[", 
           RowBox[{
            RowBox[{"ArrayFlatten", "[", 
             RowBox[{"TensorProduct", "[", 
              RowBox[{
               RowBox[{"ConjugateTranspose", "[", "U", "]"}], ",", 
               RowBox[{"ConjugateTranspose", "[", "U", "]"}]}], "]"}], "]"}], 
            ",", "B"}], "]"}], "//", "ArrayFlatten"}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"finalMat", " ", "=", " ", 
         RowBox[{"UtUtB", ".", "Dmat", ".", "AtUtU"}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"phi", " ", "=", " ", 
         RowBox[{"finalMat", ".", "psi0"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"phi", " ", "=", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"phi", "[", 
            RowBox[{"[", 
             RowBox[{"1", ";;", "2"}], "]"}], "]"}], "//", "Normalize"}], "//",
           "Simplify"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"results", ",", 
          RowBox[{"prod", "[", 
           RowBox[{"phi", ",", "psi"}], "]"}]}], "]"}], ";"}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "results", "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"getAvgOverlap3Q", "[", 
   RowBox[{
   "alpha_", ",", "theta1_", ",", "theta2_", ",", "theta3_", ",", "n_"}], 
   "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"U", ",", "Dmat", ",", "results"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"U", " ", "=", " ", 
      RowBox[{"buildU", "[", 
       RowBox[{"alpha", ",", "theta1", ",", "theta2", ",", "theta3"}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Dmat", " ", "=", " ", 
      RowBox[{"getOptDMat3Q", "[", 
       RowBox[{"U", ",", "n"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"results", " ", "=", " ", 
      RowBox[{"testOptMat3Q", "[", 
       RowBox[{"Dmat", ",", "U", ",", "n"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Print", "[", 
      RowBox[{"StringForm", "[", 
       RowBox[{"\"\<Matrix: ``\>\"", ",", 
        RowBox[{"MatrixForm", "[", "Dmat", "]"}]}], "]"}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Return", "[", 
      RowBox[{"Mean", "[", "results", "]"}], "]"}]}]}], "\[IndentingNewLine]",
    "]"}]}]}], "Input",
 CellChangeTimes->{{3.7258030121428623`*^9, 3.725803164769471*^9}, {
  3.725803300860279*^9, 3.72580338314078*^9}, {3.7258035077667294`*^9, 
  3.7258036951172037`*^9}, {3.725803741733679*^9, 3.725803783547752*^9}, {
  3.725803866593378*^9, 3.725803870206334*^9}, {3.725803999603355*^9, 
  3.725804036458723*^9}, {3.7258040710501747`*^9, 3.725804165214205*^9}, {
  3.7258045632274523`*^9, 3.725804571050118*^9}, {3.7258046797418013`*^9, 
  3.725804704026368*^9}, {3.727133888790526*^9, 3.72713389281435*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"getOptDMat3Q", "[", 
   RowBox[{"H", ",", "2"}], "]"}], "//", 
  "MatrixForm"}], "\[IndentingNewLine]", 
 RowBox[{"getAvgOverlap3Q", "[", 
  RowBox[{
   RowBox[{"Pi", "/", "2"}], ",", 
   RowBox[{"Pi", "/", "2"}], ",", 
   RowBox[{"Pi", "/", "2"}], ",", 
   RowBox[{"Pi", "/", "2"}], ",", "5"}], "]"}]}], "Input",
 CellChangeTimes->{{3.7258037161226807`*^9, 3.72580375124953*^9}, {
  3.725803805136962*^9, 3.725803850135333*^9}, {3.725804221110639*^9, 
  3.7258042473005877`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"-", "0.18528778380576558`"}], "0.`", "0.`", "0.`", "0.`", 
      "0.`", "0.`", "0.`"},
     {"0.`", "2.227937704089925`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`"},
     {"0.`", "0.`", "2.952286105002889`", "0.`", "0.`", "0.`", "0.`", "0.`"},
     {"0.`", "0.`", "0.`", "0.5390606296282727`", "0.`", "0.`", "0.`", 
      "0.`"},
     {"0.`", "0.`", "0.`", "0.`", "0.341014659648724`", "0.`", "0.`", "0.`"},
     {"0.`", "0.`", "0.`", "0.`", "0.`", 
      RowBox[{"-", "2.9104688757433146`"}], "0.`", "0.`"},
     {"0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "2.425983654360516`", "0.`"},
     {"0.`", "0.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
      "0.14347053376567576`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.7258038439495296`*^9, 3.7258038734498453`*^9}, 
   3.7258042509176397`*^9, 3.725804577928767*^9, 3.72580470735986*^9, 
   3.727133846536672*^9, 3.727133900111855*^9}],

Cell[BoxData[
 InterpretationBox["\<\"Matrix: \\!\\(\\*TagBox[RowBox[{\\\"(\\\", \\\"\
\[NoBreak]\\\", GridBox[{{RowBox[{\\\"-\\\", \\\"0.6988934400538737`\\\"}], \
\\\"0.`\\\", \\\"0.`\\\", \\\"0.`\\\", \\\"0.`\\\", \\\"0.`\\\", \\\"0.`\\\", \
\\\"0.`\\\"}, {\\\"0.`\\\", \\\"2.0171531182544697`\\\", \\\"0.`\\\", \\\"0.`\
\\\", \\\"0.`\\\", \\\"0.`\\\", \\\"0.`\\\", \\\"0.`\\\"}, {\\\"0.`\\\", \
\\\"0.`\\\", \\\"3.373306040108622`\\\", \\\"0.`\\\", \\\"0.`\\\", \
\\\"0.`\\\", \\\"0.`\\\", \\\"0.`\\\"}, {\\\"0.`\\\", \\\"0.`\\\", \
\\\"0.`\\\", \\\"0.6572596657575817`\\\", \\\"0.`\\\", \\\"0.`\\\", \\\"0.`\\\
\", \\\"0.`\\\"}, {\\\"0.`\\\", \\\"0.`\\\", \\\"0.`\\\", \\\"0.`\\\", \
\\\"0.46538571226833875`\\\", \\\"0.`\\\", \\\"0.`\\\", \\\"0.`\\\"}, \
{\\\"0.`\\\", \\\"0.`\\\", \\\"0.`\\\", \\\"0.`\\\", \\\"0.`\\\", \
RowBox[{\\\"-\\\", \\\"1.6256699901918183`\\\"}], \\\"0.`\\\", \\\"0.`\\\"}, \
{\\\"0.`\\\", \\\"0.`\\\", \\\"0.`\\\", \\\"0.`\\\", \\\"0.`\\\", \
\\\"0.`\\\", \\\"2.2090270157491725`\\\", \\\"0.`\\\"}, {\\\"0.`\\\", \\\"0.`\
\\\", \\\"0.`\\\", \\\"0.`\\\", \\\"0.`\\\", \\\"0.`\\\", \\\"0.`\\\", \
RowBox[{\\\"-\\\", \\\"1.0487429937612067`\\\"}]}}, Rule[RowSpacings, 1], \
Rule[ColumnSpacings, 1], Rule[RowAlignments, Baseline], \
Rule[ColumnAlignments, Center]], \\\"\[NoBreak]\\\", \\\")\\\"}], \
Function[BoxForm`e$, MatrixForm[BoxForm`e$]]]\\)\"\>",
  StringForm["Matrix: ``", 
   MatrixForm[CompressedData["
1:eJxTTMoPSmViYGDggGLv4t5jobHP9jNQCByy+3UUlRkcKDWnN7j3QfsfLorN
kRbRzXHleGpPqTlrv/WqPzxxl2Jz0tPkO/cx/aI4nJ3+qESLrWF0oNScrxcO
7l52/MN+AJRuIIg=
    "]]],
  Editable->False]], "Print",
 CellChangeTimes->{3.7258047085721607`*^9, 3.727133846549498*^9, 
  3.727133901788306*^9}],

Cell[BoxData[
 RowBox[{"0.9999999999999984`", "\[VeryThinSpace]", "+", 
  RowBox[{"0.`", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{{3.7258038439495296`*^9, 3.7258038734498453`*^9}, 
   3.7258042509176397`*^9, 3.725804577928767*^9, 3.72580470735986*^9, 
   3.727133846536672*^9, 3.72713390179427*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"dx", " ", "=", " ", 
   RowBox[{"Pi", "/", "32"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"optMats", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Diagonal", "[", 
      RowBox[{"getOptDmat", "[", 
       RowBox[{
        RowBox[{"buildU", "[", 
         RowBox[{
          RowBox[{"Pi", "/", "2"}], ",", 
          RowBox[{"Pi", "/", "2"}], ",", "i", ",", 
          RowBox[{"Pi", "/", "2"}]}], "]"}], ",", "10"}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "0", ",", "Pi", ",", "dx"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"axis", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{"i", ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "0", ",", "Pi", ",", "dx"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"axis", "[", 
         RowBox[{"[", "j", "]"}], "]"}], ",", 
        RowBox[{
         RowBox[{"optMats", "[", 
          RowBox[{"[", "j", "]"}], "]"}], "[", 
         RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "1", ",", 
        RowBox[{"Length", "[", "optMats", "]"}]}], "}"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", "4"}], "}"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{"%", ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<d1\>\"", ",", "\"\<d2\>\"", ",", "\"\<d3\>\"", ",", "\"\<d4\>\""}], 
     "}"}]}], ",", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", 
   RowBox[{"InterpolationOrder", "\[Rule]", "0"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.7257314592736197`*^9, 3.725731460623261*^9}, {
  3.725731524927075*^9, 3.725731579579825*^9}, {3.725731613419304*^9, 
  3.725731652441041*^9}, {3.725731683609812*^9, 3.725731694751107*^9}, {
  3.7257317364546957`*^9, 3.725731737253109*^9}, {3.72573178584371*^9, 
  3.725731792386888*^9}, {3.725731822962311*^9, 3.725732181052162*^9}, {
  3.7257322251604643`*^9, 3.725732234586548*^9}, {3.725732367199325*^9, 
  3.72573236904531*^9}, {3.7258028343599777`*^9, 3.725802835318513*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.009166666666666668], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGBwBGIQDQMvRN6XsffcspfQdQn5rbjTHp3v/XZqef63Rij/
JAZ//ywp/j1lC+wvKRrX19y8hMHvnL2hXVNsI1T9TQz+qssb5t7V32MfZxGq
WZV1H4PvyKF93qL7CNS8Rxj82VrNa81XnrYvXb775e6/TzH4MkcEUl8fuwi1
7yUG/+HC5AbJb1ftd286s8/K7Q0GP8DmZc3vlFtQ97zH4PO5Tfs0mf++PeP9
dydj3D9i8FlfzFrI8ush1L2fMPhud3iC5Tuf2C9JKTeZk/0Fgz/bKKr2lelz
qH++YvBjWF/NPsH4yt791f95t/u/Y/AZ1jZlPXj3Burfnxj8a7NWvvj//739
q/wOTuktvzD4547slA6d8xEaHn8w+FHidw0n+3227/0qUBJ14y8GX976Y7ud
5FdoeP3H4HOwtLzt+f/NfsZen/c+dQwO6HxTyYJHv1h+QsOTEYPvrXXP+q3u
b/tMholLcgSYMPgFpyY96Kj/Cw1vTL6BS6MYMBs4WDtfjexZxIzBb8ytd0+J
ZnSAxAcLBt8ra+H6ymtMDjxtkvxrTFgx+F2181XOlLE4QOILk58qnZpr5szm
cO9E7JHTx9gw+L5LHIy9XTgcIPHJjsGv+5kue7uFy2ED96LK1xEcGPwiDcG3
e4R4HSDxzYnBP/nwR/Q82Rf7AdZN5yc=
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.009166666666666668], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGBwBGIQDQNnlfRXZYU83y+h6xLyW3GnPTpfQ6U+y+TWMXsI
/yQGf9rN4w9lnl6xv6RoXF9z8xIGv755GSfvmTtQ9Tcx+D2fuddP3vbQPs4i
VLMq6z4Gf2N63s5/DU+g5j3C4MeYaqXOO/PMvnT57pe7/z7F4EtLJzPUXH8B
te8lBj9Avq6hsumV/e5NZ/ZZub3B4N9Nkje0eP4a6p73GPy5dcfW6fK9tWe8
/+5kjPtHDP6d8ntXGf69hbr3Ewb/14+nN5/sfme/JKXcZE72Fwz+Zx8Xrf3e
76H++YrBn1MZUdKx4b29+6v/8273f8fgdz+cNd/qzXuof39i8G87NjEyMHyw
f5XfwSm95RcGn2n2n80g9ZDw+IPBZ1+8fwLIvt6vAiVRN/5i8J8IHdl3Buhe
SHj9x+C77z7X9RDo3xl7fd771DE4oPN3LjyfzPYPFp6MGHzFjTM2gsI7k2Hi
khwBJgy+EnOiLii+IOGNyZ+2buJzUHxbO1+N7FnEjMEP+ZBkWwtML5D4YMHg
T7r0Krz99jN7njZJ/jUmrBj8Pz/qaxgan0DjC5NvFfpXfxowvd87EXvk9DE2
DL6I114VPmB+gcQnOwZ/rrpevzowv23gXlT5OoIDg/+7RWh9Ajy/cmLwZ7XV
W84992Y/AFRmBy0=
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.009166666666666668], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGBwBGIQDQMRvo/mvptzy15C1yXkt+JOe3T+wdm7z+nfOgbl
n8TgZ8etTJB7esX+kqJxfc3NSxh8B+9/fLxn7kDV38Tg17b6Fk7e9tA+ziJU
syrrPgZ/amJwx/+GJ1DzHmHwTYs/W6+/+sy+dPnul7v/PsXgzwx49qX6+guo
fS8x+I4XuadWNr2y373pzD4rtzcYfMn/J40tnr+Guuc9Bt9JiH+hLt9be8b7
707GuH/E4Ps2HX3E8O8t1L2fMPhqEse1bu5+Z78kpdxkTvYXDL6sY7bcfu/3
UP98xeAX7V5d1LHhvb37q//zbvd/x+ALx+5cbPXmPdS/PzH4RTc///j//739
q/wOTuktvzD4Ex4qTAeph4THHwz+qth9VSD7er8KlETd+IvBD764qu440L2Q
8PqPwT+wwLj4LtC/M/b6vPepY3BA57/jcJv17y8sPBkx+Ge/3bwICu9MholL
cgSYMPiGfoccQfEFCW9MfsuEbXqg+LZ2vhrZs4gZg/++r2spKL1A4oMFg+9V
lajafvuZPU+bJP8aE1YM/tz4v8UMjU+g8YXJ55oQ+QGU3u+diD1y+hgbBl/t
V+5eUH6BxCc7Br/1XgSjOjC/beBeVPk6ggODf3cRR286PL9yYvB3Tv3txTzt
oT0AcIAMTw==
         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[0.009166666666666668], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGBwBGIQDQOs3LcmHWtlPiCh6xLyW3GnPTpfZN8Xn8NCvFD+
SQz+1LzS5XdbuA5cUjSur7l5CYPv/XBtgbcLB1T9TQy+ovQfL3NntgNxFqGa
VVn3Mfhad+c8OlPGAjXvEQbfOPmBzM07TAdKl+9+ufvvUwz+hB7uaSnRjFD7
XmLwF/JP5AIGw4Hdm87ss3J7g8F/9z/gXUf93/0Q97zH4PMty49+q/t7P+P9
dydj3D9i8F/2Pbj0h+Xnfoh7P2HwfTiVQyb+/7Z/SUq5yZzsLxj8lfK/53hL
ft0P8c9XDP6ZRx12k/0+73d/9X/e7f7vGHyTLhHN0Dkf90P8+xODz8SynpeB
4cP+V/kdnNJbfmHwz/3Mq33w7s1+SHj8weDPuXB8wgnGV/t7vwqURN34i8Hv
Wrpu0zvT59Dw+o/BfzH7q5p655P9M/b6vPepY3BA539W4rJl/fUQGp6MmHy2
RZxT+O/vz2SYuCRHgAmDP8s4b/7vlFvQ8MbkeyWkykt+u7rf2vlqZM8iZgx+
xlTNf6+PXYTGBwsG/6P6DgHtPaf387RJ8q8xYcXgcx8V+mLZfQQaX5j84Myl
AQ/19+y/dyL2yOljbBj8pal2/FpiG6HxyY7Bn5t/UvFI2YL9G7gXVb6O4MDg
v+ZX1e3/1giNb04M/ieGY/0P9v3ZDwD9UQZ9
         "]]}}}, {}, {}, {{}, {}}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 3.141592653589793}, {-3.634161568850468, 
       3.6341494103299334`}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 3.141592653589793}, {-3.634161568850468, 
       3.6341494103299334`}}, PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"d1\"", "\"d2\"", "\"d3\"", "\"d4\""}, "PointLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True", ",", "True"}], 
               "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.725731580887538*^9, 3.725731619593359*^9, {3.725731682277072*^9, 
   3.7257316980104017`*^9}, 3.72573174421129*^9, {3.725731923810808*^9, 
   3.725731929532042*^9}, {3.7257320223313227`*^9, 3.725732038056775*^9}, {
   3.725732071499264*^9, 3.725732105345985*^9}, {3.725732156610023*^9, 
   3.725732196989993*^9}, 3.7257322685475082`*^9, 3.725732437844297*^9, 
   3.7258028657749434`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Module", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"U", ",", "n", ",", "Dmat", ",", "results"}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"U", " ", "=", " ", 
     RowBox[{"buildU", "[", 
      RowBox[{
       RowBox[{"Pi", "/", "2"}], ",", 
       RowBox[{"Pi", "/", "2"}], ",", 
       RowBox[{"Pi", "/", "2"}], ",", 
       RowBox[{"Pi", "/", "2"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"n", " ", "=", " ", "100"}], ";", "\[IndentingNewLine]", 
    RowBox[{"Dmat", " ", "=", " ", 
     RowBox[{"getOptDmat", "[", 
      RowBox[{"U", ",", "n"}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"results", "=", 
     RowBox[{"testOptMat", "[", 
      RowBox[{"Dmat", ",", "U", ",", "n"}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"Print", "[", "Dmat", "]"}], ";", "\[IndentingNewLine]", 
    RowBox[{"Print", "[", "results", "]"}], ";"}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.72571744611838*^9, 3.725717490538286*^9}, {
  3.725717967606926*^9, 3.725717998325272*^9}, {3.72571806662039*^9, 
  3.725718131233534*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0.9999989270718198`", ",", "0.`", ",", "0.`", ",", "0.`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.9999979654401365`", ",", "0.`", ",", "0.`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "0.99999925110126`", ",", "0.`"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "0.`", ",", 
     RowBox[{"-", "1.0000038563867835`"}]}], "}"}]}], "}"}]], "Print",
 CellChangeTimes->{{3.725718079285865*^9, 3.725718103079864*^9}, {
   3.725718140652109*^9, 3.725718159073778*^9}, 3.725718431313738*^9, 
   3.725721924167974*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"0.9999999999990259`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.9999999999997076`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.9999999999998306`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.9999999999952685`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.9999999999902106`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.9999999999985327`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.9999999999914501`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.9999999999988602`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.9999999999997189`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.9999999999938723`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.9999999999974303`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.9999999999998592`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.999999999990038`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.9999999999978588`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.999999999997151`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.9999999999981193`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.999999999997834`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.9999999999999387`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.9999999999998246`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.9999999999978787`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.9999999999916099`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.9999999999927032`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.9999999999930688`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.9999999999959561`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.9999999999926544`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.9999999999991789`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.9999999999977583`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.9999999999995228`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.9999999999993804`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.9999999999964455`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.9999999999935122`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.9999999999984054`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.9999999999972273`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.999999999992654`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.9999999999965625`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.9999999999988621`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.9999999999996485`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.999999999999803`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.9999999999986501`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.9999999999997982`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.9999999999948989`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.9999999999948641`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.9999999999983366`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.9999999999951348`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.9999999999949916`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.9999999999955839`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.9999999999980719`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.9999999999998129`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.999999999994219`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.9999999999924166`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.9999999999973019`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.9999999999954786`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.9999999999991914`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.9999999999952626`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.9999999999994794`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.9999999999913067`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.99999999999621`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.9999999999945698`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.9999999999922458`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.9999999999990198`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.9999999999989445`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.9999999999944286`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.9999999999975893`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.9999999999965141`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.9999999999991374`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.9999999999929544`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.9999999999931696`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.9999999999920318`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.9999999999963172`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.9999999999911713`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.999999999996885`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.9999999999972845`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.9999999999999977`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.9999999999999156`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.9999999999987282`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.9999999999985172`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.9999999999927344`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.9999999999980815`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.9999999999987228`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.9999999999976729`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.9999999999992382`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.9999999999944925`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.9999999999996945`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.9999999999989992`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.9999999999925422`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.9999999999954392`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.9999999999997473`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.999999999998939`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.9999999999999976`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.9999999999956797`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.9999999999975802`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.9999999999979824`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.9999999999966085`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.9999999999938628`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.9999999999922567`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.999999999998197`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.9999999999997818`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.9999999999976188`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.9999999999995715`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.9999999999994968`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}]}], "}"}]], "Print",
 CellChangeTimes->{{3.725718079285865*^9, 3.725718103079864*^9}, {
   3.725718140652109*^9, 3.725718159073778*^9}, 3.725718431313738*^9, 
   3.725721924183913*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"2", "^", "7"}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.725722354711609*^9, 3.725722360061323*^9}}],

Cell[BoxData["128"], "Output",
 CellChangeTimes->{{3.725722357918263*^9, 3.7257223603259163`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{
   "dx", ",", "dy", ",", "ay", ",", "by", ",", "ax", ",", "bx", ",", "xAxis", 
    ",", "yAxis"}], "]"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Code", " ", "for", " ", "Horizontal", " ", "Section"}], ",", " ", 
    RowBox[{
    "getting", " ", "profile", " ", "of", " ", "peak", " ", "along", " ", 
     "significant", " ", 
     RowBox[{"axis", "."}]}]}], " ", "\[IndentingNewLine]", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dx", " ", "=", " ", 
   RowBox[{"Pi", "/", 
    RowBox[{"(", 
     RowBox[{"2", "^", "4"}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ax", " ", "=", " ", 
   RowBox[{
    RowBox[{"Pi", "/", "2"}], " ", "-", 
    RowBox[{"Pi", "/", 
     RowBox[{"(", 
      RowBox[{"2", "^", "4"}], ")"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"bx", "=", " ", 
    RowBox[{
     RowBox[{"Pi", "/", "2"}], " ", "+", " ", 
     RowBox[{"Pi", "/", 
      RowBox[{"(", 
       RowBox[{"2", "^", "4"}], ")"}]}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xAxis", " ", "=", " ", 
   RowBox[{"AbsoluteTiming", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"i", ",", 
        RowBox[{"getAvgOverlapList", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Pi", "/", "2"}], ",", "i", ",", 
            RowBox[{"Pi", "/", "2"}], ",", 
            RowBox[{"Pi", "/", "2"}]}], "}"}], ",", "10"}], "]"}]}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "ax", ",", "bx", ",", "dx"}], "}"}]}], "]"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xAxis2", " ", "=", " ", 
   RowBox[{"AbsoluteTiming", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"i", ",", 
        RowBox[{"getStdOverlapList", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Pi", "/", "2"}], ",", "i", ",", 
            RowBox[{"Pi", "/", "2"}], ",", 
            RowBox[{"Pi", "/", "2"}]}], "}"}], ",", "10"}], "]"}]}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "ax", ",", "bx", ",", "dx"}], "}"}]}], "]"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Print", "[", 
    RowBox[{"StringForm", "[", 
     RowBox[{"\"\<Time Elapsed 1: ``\>\"", ",", 
      RowBox[{
       RowBox[{"xAxis", "[", 
        RowBox[{"[", "1", "]"}], "]"}], " ", "+", " ", 
       RowBox[{"xAxis2", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}]}], "]"}], "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xAxis", " ", "=", " ", 
   RowBox[{"xAxis", "[", 
    RowBox[{"[", "2", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xAxis2", " ", "=", " ", 
   RowBox[{"xAxis2", "[", 
    RowBox[{"[", "2", "]"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7251075084611273`*^9, 3.725107553006712*^9}, {
   3.725107591415807*^9, 3.725107603379057*^9}, {3.725107668821046*^9, 
   3.725107711883263*^9}, {3.72510781763799*^9, 3.725108001119936*^9}, {
   3.725108263255555*^9, 3.725108295869124*^9}, {3.725108335435227*^9, 
   3.725108371906172*^9}, {3.7251085221153727`*^9, 3.725108594559353*^9}, {
   3.7251086246640463`*^9, 3.725108823932962*^9}, 3.725109091588632*^9, {
   3.725109129859366*^9, 3.725109141041203*^9}, {3.725109191832683*^9, 
   3.725109333738324*^9}, {3.725109370665452*^9, 3.725109417200094*^9}, {
   3.725110165250712*^9, 3.7251101816405773`*^9}, {3.725110277380679*^9, 
   3.72511029975382*^9}, {3.725110904607864*^9, 3.725110975889104*^9}, {
   3.725111071849992*^9, 3.725111117496565*^9}, {3.725111197948991*^9, 
   3.725111261166502*^9}, {3.7251112951627913`*^9, 3.725111327099977*^9}, {
   3.7251113902741117`*^9, 3.725111438182143*^9}, {3.7251114799834538`*^9, 
   3.725111505164775*^9}, {3.7251115398845987`*^9, 3.725111667959735*^9}, {
   3.725112595425846*^9, 3.725112642702421*^9}, {3.72511269914688*^9, 
   3.725112766428453*^9}, {3.725113095321822*^9, 3.725113235639595*^9}, {
   3.7251133190860977`*^9, 3.7251133591864147`*^9}, {3.725113395457459*^9, 
   3.725113412304002*^9}, {3.7251139850116177`*^9, 3.7251139930333138`*^9}, 
   3.725114071605606*^9, 3.7251142829052896`*^9, {3.725114489543189*^9, 
   3.725114501829764*^9}, 3.725115057711213*^9, {3.7251151458507566`*^9, 
   3.725115149859199*^9}, {3.7251151870016403`*^9, 3.725115236127915*^9}, {
   3.725115797861548*^9, 3.725115799345766*^9}, {3.725115844727994*^9, 
   3.725115884013624*^9}, {3.725115952166745*^9, 3.7251159660502367`*^9}, {
   3.725120606449071*^9, 3.7251206398215227`*^9}, {3.7251209964464684`*^9, 
   3.72512106513078*^9}, {3.7251211018425837`*^9, 3.7251211300238256`*^9}, {
   3.725121273597253*^9, 3.7251212756092453`*^9}, {3.725122848157337*^9, 
   3.725122918618531*^9}, {3.725123231321198*^9, 3.725123239622237*^9}, {
   3.725123322433408*^9, 3.7251233272002153`*^9}, {3.725124682234487*^9, 
   3.7251246898719273`*^9}, {3.725125131249887*^9, 3.7251251613591022`*^9}, {
   3.72512562948248*^9, 3.725125677867506*^9}, 3.725126041034536*^9, {
   3.7251260830094433`*^9, 3.725126118846994*^9}, {3.725126257107925*^9, 
   3.7251262581695147`*^9}, {3.725126498361383*^9, 3.725126504478945*^9}, {
   3.725126966199402*^9, 3.7251270410101013`*^9}, {3.72512708224986*^9, 
   3.7251270844974003`*^9}, {3.725127142575961*^9, 3.725127171734264*^9}, {
   3.72512736122119*^9, 3.725127365453218*^9}, {3.725127423531931*^9, 
   3.725127448738613*^9}, {3.7251274937603827`*^9, 3.725127497024044*^9}, {
   3.725127987175598*^9, 3.725128116423386*^9}, {3.725128167975211*^9, 
   3.725128219874096*^9}, {3.7251313597401247`*^9, 3.725131368426086*^9}, {
   3.725131596249102*^9, 3.725131598544393*^9}, {3.725133360619811*^9, 
   3.7251333771060753`*^9}, {3.725133476292591*^9, 3.7251334796438313`*^9}, {
   3.72513358704993*^9, 3.72513361716857*^9}, {3.725133658677333*^9, 
   3.7251336842120523`*^9}, {3.7251337371878653`*^9, 3.725133756761112*^9}, {
   3.725144757240327*^9, 3.725144785264431*^9}, {3.7251454347073936`*^9, 
   3.725145465487624*^9}, {3.7251460117301607`*^9, 3.725146033840663*^9}, {
   3.725146154109915*^9, 3.725146155038538*^9}, {3.72530489548701*^9, 
   3.725305110954219*^9}, {3.7253051557622643`*^9, 3.725305218890986*^9}, {
   3.7253052933102417`*^9, 3.725305349100638*^9}, {3.725306127053426*^9, 
   3.725306127482266*^9}, {3.7253074583516817`*^9, 3.725307459204481*^9}, {
   3.725309075476177*^9, 3.7253091695621643`*^9}, {3.725309464958066*^9, 
   3.725309557420751*^9}, {3.7253102134676437`*^9, 3.7253102234102697`*^9}, {
   3.7253108278813763`*^9, 3.725310828021638*^9}, {3.725311359821396*^9, 
   3.7253113642268057`*^9}, 3.7253125458623543`*^9, {3.72531384429607*^9, 
   3.725313872550194*^9}, {3.725314875527808*^9, 3.725314881517642*^9}, {
   3.72531543907693*^9, 3.725315439793921*^9}, {3.72531963381427*^9, 
   3.725319635188342*^9}, {3.72532023460653*^9, 3.72532031058718*^9}, {
   3.725320489866989*^9, 3.7253205068573313`*^9}, {3.725322988084403*^9, 
   3.725322988832765*^9}, {3.7253231033477497`*^9, 3.725323121724019*^9}, {
   3.725330182500442*^9, 3.725330255032571*^9}, {3.725713985047227*^9, 
   3.72571401332126*^9}, {3.725716782992145*^9, 3.72571687853625*^9}, {
   3.725716922266975*^9, 3.725716935849053*^9}, {3.725718546515036*^9, 
   3.725718562693681*^9}, {3.725718680316498*^9, 3.72571878258915*^9}, {
   3.7257188238622723`*^9, 3.72571882630721*^9}, {3.725719181542688*^9, 
   3.725719186239089*^9}, {3.72572131609102*^9, 3.725721363671495*^9}, {
   3.725721458445256*^9, 3.72572150828043*^9}, {3.72572187990322*^9, 
   3.72572188535299*^9}, {3.725721979736216*^9, 3.7257220380252533`*^9}, {
   3.725722078811843*^9, 3.7257221717258577`*^9}, {3.725722236908238*^9, 
   3.7257222418121033`*^9}, {3.725722347056801*^9, 3.725722366941506*^9}, {
   3.725722462764154*^9, 3.725722463138198*^9}, {3.725722508385664*^9, 
   3.7257225113284063`*^9}, 3.725722604468356*^9, {3.725725429550398*^9, 
   3.725725433604047*^9}, {3.725725574704754*^9, 3.725725587206319*^9}, {
   3.72572593251375*^9, 3.725725938184177*^9}, {3.7257262351429043`*^9, 
   3.72572623551657*^9}, {3.725728733079584*^9, 3.725728744556548*^9}, {
   3.725728782055665*^9, 3.725728813169767*^9}, {3.725729274625917*^9, 
   3.725729280999093*^9}, {3.725729798843992*^9, 3.725729800402831*^9}, {
   3.725731159967404*^9, 3.725731204330949*^9}, {3.725731312273452*^9, 
   3.7257313158147717`*^9}, {3.7257313824546432`*^9, 3.725731395155513*^9}, {
   3.727447118920796*^9, 3.727447148623466*^9}}],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.727447164464842*^9}],

Cell[BoxData["$Aborted"], "Print",
 CellChangeTimes->{
  3.725725491643311*^9, 3.725725896873659*^9, 3.725726093357092*^9, 
   3.725726412854967*^9, {3.725728766467491*^9, 3.725728796228104*^9}, 
   3.7257288711821613`*^9, 3.7257293348144703`*^9, 3.7257299208052*^9, 
   3.725731229874028*^9, 3.725731346047475*^9, 3.725731422000224*^9, {
   3.727447140292574*^9, 3.727447167614585*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"xAxis", ",", "xAxis2"}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Average\>\"", ",", "\"\<Standard Deviations\>\""}], "}"}]}],
    ",", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Rz Angle\>\"", ",", "\"\<Overlap\>\""}], "}"}]}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"ListLogPlot", "[", 
  RowBox[{"xAxis2", ",", 
   RowBox[{"PlotLegends", "\[Rule]", " ", 
    RowBox[{"{", "\"\<Standard Deviation\>\"", "}"}]}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Rz Angle\>\"", ",", 
      "\"\<Standard Deviation of Overlap 10 samples\>\""}], "}"}]}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.7251075084611273`*^9, 3.725107553006712*^9}, {
   3.725107591415807*^9, 3.725107603379057*^9}, {3.725107668821046*^9, 
   3.725107711883263*^9}, {3.72510781763799*^9, 3.725108001119936*^9}, {
   3.725108263255555*^9, 3.725108295869124*^9}, {3.725108335435227*^9, 
   3.725108371906172*^9}, {3.7251085221153727`*^9, 3.725108594559353*^9}, {
   3.7251086246640463`*^9, 3.725108823932962*^9}, 3.725109091588632*^9, {
   3.725109129859366*^9, 3.725109141041203*^9}, {3.725109191832683*^9, 
   3.725109333738324*^9}, {3.725109370665452*^9, 3.725109417200094*^9}, {
   3.725110165250712*^9, 3.7251101816405773`*^9}, {3.725110277380679*^9, 
   3.72511029975382*^9}, {3.725110904607864*^9, 3.725110975889104*^9}, {
   3.725111071849992*^9, 3.725111117496565*^9}, {3.725111197948991*^9, 
   3.725111261166502*^9}, {3.7251112951627913`*^9, 3.725111327099977*^9}, {
   3.7251113902741117`*^9, 3.725111438182143*^9}, {3.7251114799834538`*^9, 
   3.725111505164775*^9}, {3.7251115398845987`*^9, 3.725111667959735*^9}, {
   3.725112595425846*^9, 3.725112642702421*^9}, {3.72511269914688*^9, 
   3.725112766428453*^9}, {3.725113095321822*^9, 3.725113235639595*^9}, {
   3.7251133190860977`*^9, 3.7251133591864147`*^9}, {3.725113395457459*^9, 
   3.725113412304002*^9}, {3.7251139850116177`*^9, 3.7251139930333138`*^9}, 
   3.725114071605606*^9, 3.7251142829052896`*^9, {3.725114489543189*^9, 
   3.725114501829764*^9}, 3.725115057711213*^9, {3.7251151458507566`*^9, 
   3.725115149859199*^9}, {3.7251151870016403`*^9, 3.725115236127915*^9}, {
   3.725115797861548*^9, 3.725115799345766*^9}, {3.725115844727994*^9, 
   3.725115884013624*^9}, {3.725115952166745*^9, 3.7251159660502367`*^9}, {
   3.725120606449071*^9, 3.7251206398215227`*^9}, {3.7251209964464684`*^9, 
   3.72512106513078*^9}, {3.7251211018425837`*^9, 3.7251211300238256`*^9}, {
   3.725121273597253*^9, 3.7251212756092453`*^9}, {3.725122848157337*^9, 
   3.725122918618531*^9}, {3.725123231321198*^9, 3.725123239622237*^9}, {
   3.725123322433408*^9, 3.7251233272002153`*^9}, {3.725124682234487*^9, 
   3.7251246898719273`*^9}, {3.725125131249887*^9, 3.7251251613591022`*^9}, {
   3.72512562948248*^9, 3.725125677867506*^9}, 3.725126041034536*^9, {
   3.7251260830094433`*^9, 3.725126118846994*^9}, {3.725126257107925*^9, 
   3.7251262581695147`*^9}, {3.725126498361383*^9, 3.725126504478945*^9}, {
   3.725126966199402*^9, 3.7251270410101013`*^9}, {3.72512708224986*^9, 
   3.7251270844974003`*^9}, {3.725127142575961*^9, 3.725127171734264*^9}, {
   3.72512736122119*^9, 3.725127365453218*^9}, {3.725127423531931*^9, 
   3.725127448738613*^9}, {3.7251274937603827`*^9, 3.725127497024044*^9}, {
   3.725127987175598*^9, 3.725128116423386*^9}, {3.725128167975211*^9, 
   3.725128219874096*^9}, {3.7251313597401247`*^9, 3.725131368426086*^9}, {
   3.725131596249102*^9, 3.725131598544393*^9}, {3.725133360619811*^9, 
   3.7251333771060753`*^9}, {3.725133476292591*^9, 3.7251334796438313`*^9}, {
   3.72513358704993*^9, 3.72513361716857*^9}, {3.725133658677333*^9, 
   3.7251336842120523`*^9}, {3.7251337371878653`*^9, 3.725133756761112*^9}, {
   3.725144757240327*^9, 3.725144785264431*^9}, {3.7251454347073936`*^9, 
   3.725145465487624*^9}, {3.7251460117301607`*^9, 3.725146033840663*^9}, {
   3.725146154109915*^9, 3.725146155038538*^9}, {3.72530489548701*^9, 
   3.725305110954219*^9}, {3.7253051557622643`*^9, 3.725305218890986*^9}, {
   3.7253052933102417`*^9, 3.725305349100638*^9}, {3.725306127053426*^9, 
   3.725306127482266*^9}, {3.7253074583516817`*^9, 3.725307459204481*^9}, {
   3.725309075476177*^9, 3.7253091695621643`*^9}, {3.725309464958066*^9, 
   3.725309557420751*^9}, {3.7253102134676437`*^9, 3.7253102234102697`*^9}, {
   3.7253108278813763`*^9, 3.725310828021638*^9}, {3.725311359821396*^9, 
   3.7253113642268057`*^9}, 3.7253125458623543`*^9, {3.72531384429607*^9, 
   3.725313872550194*^9}, {3.725314875527808*^9, 3.725314881517642*^9}, {
   3.72531543907693*^9, 3.725315439793921*^9}, {3.72531963381427*^9, 
   3.725319635188342*^9}, {3.72532023460653*^9, 3.72532031058718*^9}, {
   3.725320489866989*^9, 3.7253205068573313`*^9}, {3.725322988084403*^9, 
   3.725322988832765*^9}, {3.7253231033477497`*^9, 3.725323121724019*^9}, {
   3.725330182500442*^9, 3.725330255032571*^9}, {3.725713985047227*^9, 
   3.72571401332126*^9}, {3.725716782992145*^9, 3.72571687853625*^9}, {
   3.725716922266975*^9, 3.725716935849053*^9}, {3.725718546515036*^9, 
   3.725718562693681*^9}, {3.725718680316498*^9, 3.72571878258915*^9}, {
   3.7257188238622723`*^9, 3.72571882630721*^9}, {3.725719181542688*^9, 
   3.725719186239089*^9}, {3.72572131609102*^9, 3.725721363671495*^9}, {
   3.725721458445256*^9, 3.72572150828043*^9}, {3.72572187990322*^9, 
   3.72572188535299*^9}, {3.725721979736216*^9, 3.7257220380252533`*^9}, {
   3.725722078811843*^9, 3.7257221717258577`*^9}, {3.725722236908238*^9, 
   3.7257222418121033`*^9}, {3.725722347056801*^9, 3.725722366941506*^9}, {
   3.725722462764154*^9, 3.725722463138198*^9}, {3.725722508385664*^9, 
   3.7257225113284063`*^9}, {3.725722604468356*^9, 3.7257226413631973`*^9}, {
   3.725726200407839*^9, 3.725726214229617*^9}, {3.725729062905773*^9, 
   3.72572907001516*^9}, {3.725729120829829*^9, 3.7257291277800493`*^9}, {
   3.725729205155776*^9, 3.725729236528688*^9}, {3.725729544222536*^9, 
   3.725729627823444*^9}, {3.725729740607399*^9, 3.72572984010439*^9}, {
   3.725731128120528*^9, 3.7257311408378468`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.012833333333333334`], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[{{1.3744467859455345`, 0.3954428427294347}, {
         1.3989904785517049`, 0.9913126132706473}, {1.423534171157875, 
         0.9566566618620674}, {1.4480778637640452`, 0.9156258554662319}, {
         1.4726215563702156`, 0.6900232792976213}, {1.4971652489763858`, 
         0.45363052694052275`}, {1.5217089415825562`, 0.9961549563012106}, {
         1.5462526341887264`, 0.996255948747417}, {1.5707963267948966`, 
         0.9999999999999993}, {1.595340019401067, 0.9970823885414225}, {
         1.6198837120072371`, 0.9978702059904956}, {1.6444274046134073`, 
         0.9935344058567427}, {1.6689710972195777`, 0.9903684367802104}, {
         1.6935147898257479`, 0.6200148502481835}, {1.7180584824319183`, 
         0.7932081261265387}, {1.7426021750380885`, 0.9783070202352778}, {
         1.7671458676442586`, 0.4078052632673752}}]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.012833333333333334`], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[{{1.3744467859455345`, 0.15774691249605416`}, {
         1.3989904785517049`, 0.016664569452465017`}, {1.423534171157875, 
         0.34809261135348507`}, {1.4480778637640452`, 0.03222135966321465}, {
         1.4726215563702156`, 0.0016777651165982787`}, {1.4971652489763858`, 
         0.0021413315252299695`}, {1.5217089415825562`, 
         0.22060550793929726`}, {1.5462526341887264`, 
         0.0016697990764991367`}, {1.5707963267948966`, 
         7.218821541692088*^-15}, {1.595340019401067, 0.002304382784252238}, {
         1.6198837120072371`, 0.016675820613108024`}, {1.6444274046134073`, 
         0.2681088299743358}, {1.6689710972195777`, 0.059718845678620805`}, {
         1.6935147898257479`, 0.0059200184796638815`}, {1.7180584824319183`, 
         0.35325942087330203`}, {1.7426021750380885`, 
         0.014617583339759101`}, {1.7671458676442586`, 
         0.013679601225162012`}}]}}}, {}, {}, {{}, {}}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {1.368310862793992, 0}, 
     PlotRange -> {{1.3744467859455345`, 1.7671458676442586`}, {
       0, 0.9999999999999993}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"Rz Angle\"", TraditionalForm], 
       FormBox["\"Overlap\"", TraditionalForm]}, 
     AxesOrigin -> {1.368310862793992, 0}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{1.3744467859455345`, 1.7671458676442586`}, {
       0, 0.9999999999999993}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Average\"", "\"Standard Deviations\""}, "PointLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.231], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.231], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.231], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.231], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.725721932537278*^9, {3.725721985948887*^9, 3.725722001017108*^9}, {
   3.7257220446450777`*^9, 3.725722053924594*^9}, {3.725722095732669*^9, 
   3.7257221085288477`*^9}, {3.725722141486516*^9, 3.725722180766243*^9}, 
   3.725722246852786*^9, 3.725722331649332*^9, 3.72572239515644*^9, 
   3.725722428103952*^9, 3.725722489280139*^9, 3.725722564714273*^9, 
   3.7257226421331863`*^9, 3.725725563576645*^9, 3.72572590388305*^9, 
   3.725726183187935*^9, 3.725726215385264*^9, 3.725726618558558*^9, 
   3.72572876996432*^9, {3.7257290489086237`*^9, 3.7257290706254683`*^9}, 
   3.7257291291808*^9, {3.725729206417903*^9, 3.725729237480639*^9}, 
   3.725729456171846*^9, {3.725729616913417*^9, 3.725729628843362*^9}, 
   3.725729973845414*^9, 3.725731141727161*^9, 3.725731274551876*^9, 
   3.725731371629125*^9, 3.725731427765854*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.012833333333333334`], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        PointBox[{{1.3744467859455345`, -1.84676334988513}, {
         1.3989904785517049`, -4.094470402991817}, {
         1.423534171157875, -1.0552867100335472`}, {
         1.4480778637640452`, -3.435125702768784}, {
         1.4726215563702156`, -6.390292658924329}, {
         1.4971652489763858`, -6.146327435388162}, {
         1.5217089415825562`, -1.5113792044812422`}, {
         1.5462526341887264`, -6.395051973265291}, {
         1.5707963267948966`, -32.562084676700294`}, {
         1.595340019401067, -6.07294241094968}, {
         1.6198837120072371`, -4.093795476210938}, {
         1.6444274046134073`, -1.3163622989064683`}, {
         1.6689710972195777`, -2.818107635389098}, {
         1.6935147898257479`, -5.12941570852625}, {
         1.7180584824319183`, -1.0405525886342561`}, {
         1.7426021750380885`, -4.225530136561856}, {
         1.7671458676442586`, -4.291849517420063}}]}, {}}}, {}, {}, {{}, \
{}}}, {DisplayFunction -> Identity, GridLines -> {None, None}, 
     DisplayFunction -> Identity, DisplayFunction -> Identity, 
     DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, 
     AxesOrigin -> {1.368310862793992, -34.849937812124445`}, 
     PlotRange -> {{1.3744467859455345`, 
      1.7671458676442586`}, {-34.31328090381508, -1.0405525886342561`}}, 
     PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {
       FormBox["\"Rz Angle\"", TraditionalForm], 
       FormBox[
       "\"Standard Deviation of Overlap 10 samples\"", TraditionalForm]}, 
     AxesOrigin -> {1.368310862793992, -34.849937812124445`}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameTicks -> {{
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Log, Exp}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Log, Exp}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Log, Exp}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Log, Exp}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{1.3744467859455345`, 
      1.7671458676442586`}, {-34.31328090381508, -1.0405525886342561`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, 
       Charting`ScaledTicks[{Log, Exp}]}}],FormBox[
    FormBox[
     TemplateBox[{"\"Standard Deviation\""}, "PointLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.462], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.462], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                 ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                   None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0.368417, 0.506779, 0.709798], Editable -> False, 
                  Selectable -> False], ",", 
                 RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
             "}"}], ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", "False", "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.725721932537278*^9, {3.725721985948887*^9, 3.725722001017108*^9}, {
   3.7257220446450777`*^9, 3.725722053924594*^9}, {3.725722095732669*^9, 
   3.7257221085288477`*^9}, {3.725722141486516*^9, 3.725722180766243*^9}, 
   3.725722246852786*^9, 3.725722331649332*^9, 3.72572239515644*^9, 
   3.725722428103952*^9, 3.725722489280139*^9, 3.725722564714273*^9, 
   3.7257226421331863`*^9, 3.725725563576645*^9, 3.72572590388305*^9, 
   3.725726183187935*^9, 3.725726215385264*^9, 3.725726618558558*^9, 
   3.72572876996432*^9, {3.7257290489086237`*^9, 3.7257290706254683`*^9}, 
   3.7257291291808*^9, {3.725729206417903*^9, 3.725729237480639*^9}, 
   3.725729456171846*^9, {3.725729616913417*^9, 3.725729628843362*^9}, 
   3.725729973845414*^9, 3.725731141727161*^9, 3.725731274551876*^9, 
   3.725731371629125*^9, 3.725731427900814*^9}]
}, Open  ]],

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{{3.725322994057667*^9, 3.725323000765951*^9}, 
   3.725323109942623*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", 
  RowBox[{"tab0", ",", "grid", ",", "time", ",", "newTab", ",", "plotter"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dx", " ", "=", " ", 
   RowBox[{"Pi", "/", "4"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dy", " ", "=", " ", 
   RowBox[{"Pi", "/", "4"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ax", " ", "=", 
   RowBox[{
    RowBox[{"Pi", "/", "2"}], " ", "-", 
    RowBox[{"1", "*", "dx"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bx", " ", "=", " ", 
   RowBox[{
    RowBox[{"Pi", "/", "2"}], " ", "+", " ", 
    RowBox[{"1", "*", "dx"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ay", " ", "=", " ", 
   RowBox[{
    RowBox[{"Pi", "/", "2"}], " ", "-", 
    RowBox[{"1", "*", "dy"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"by", " ", "=", " ", 
    RowBox[{
     RowBox[{"Pi", "/", "2"}], "+", 
     RowBox[{"1", "*", "dy"}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tab0", " ", "=", "  ", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Pi", "/", "2"}], ",", "i", ",", "j", ",", 
         RowBox[{"Pi", "/", "2"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "ax", ",", "bx", ",", "dx"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "ay", ",", "by", ",", "dy"}], "}"}]}], "]"}], ",", 
     "1"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"grid", " ", "=", "  ", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"i", ",", "j"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "ax", ",", "bx", ",", "dx"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "ay", ",", "by", ",", "dy"}], "}"}]}], "]"}], ",", 
     "1"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"time", " ", "=", " ", 
   RowBox[{"AbsoluteTiming", "[", 
    RowBox[{"Map", "[", 
     RowBox[{"getAvgOverlapList", ",", "tab0"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"StringForm", "[", 
    RowBox[{"\"\<Total Time elapsed: ``\>\"", ",", 
     RowBox[{"time", "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"newTab", " ", "=", " ", 
   RowBox[{"time", "[", 
    RowBox[{"[", "2", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"plotter", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Append", "[", 
      RowBox[{
       RowBox[{"grid", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", 
       RowBox[{"newTab", "[", 
        RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "grid", "]"}]}], "}"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.7251075084611273`*^9, 3.725107553006712*^9}, {
   3.725107591415807*^9, 3.725107603379057*^9}, {3.725107668821046*^9, 
   3.725107711883263*^9}, {3.72510781763799*^9, 3.725108001119936*^9}, {
   3.725108263255555*^9, 3.725108295869124*^9}, {3.725108335435227*^9, 
   3.725108371906172*^9}, {3.7251085221153727`*^9, 3.725108594559353*^9}, {
   3.7251086246640463`*^9, 3.725108823932962*^9}, 3.725109091588632*^9, {
   3.725109129859366*^9, 3.725109141041203*^9}, {3.725109191832683*^9, 
   3.725109333738324*^9}, {3.725109370665452*^9, 3.725109417200094*^9}, {
   3.725110165250712*^9, 3.7251101816405773`*^9}, {3.725110277380679*^9, 
   3.72511029975382*^9}, {3.725110904607864*^9, 3.725110975889104*^9}, {
   3.725111071849992*^9, 3.725111117496565*^9}, {3.725111197948991*^9, 
   3.725111261166502*^9}, {3.7251112951627913`*^9, 3.725111327099977*^9}, {
   3.7251113902741117`*^9, 3.725111438182143*^9}, {3.7251114799834538`*^9, 
   3.725111505164775*^9}, {3.7251115398845987`*^9, 3.725111667959735*^9}, {
   3.725112595425846*^9, 3.725112642702421*^9}, {3.72511269914688*^9, 
   3.725112766428453*^9}, {3.725113095321822*^9, 3.725113235639595*^9}, {
   3.7251133190860977`*^9, 3.7251133591864147`*^9}, {3.725113395457459*^9, 
   3.725113412304002*^9}, {3.7251139850116177`*^9, 3.7251139930333138`*^9}, 
   3.725114071605606*^9, 3.7251142829052896`*^9, {3.725114489543189*^9, 
   3.725114501829764*^9}, 3.725115057711213*^9, {3.7251151458507566`*^9, 
   3.725115149859199*^9}, {3.7251151870016403`*^9, 3.725115236127915*^9}, {
   3.725115797861548*^9, 3.725115799345766*^9}, {3.725115844727994*^9, 
   3.725115884013624*^9}, {3.725115952166745*^9, 3.7251159660502367`*^9}, {
   3.725120606449071*^9, 3.7251206398215227`*^9}, {3.7251209964464684`*^9, 
   3.72512106513078*^9}, {3.7251211018425837`*^9, 3.7251211300238256`*^9}, {
   3.725121273597253*^9, 3.7251212756092453`*^9}, {3.725122848157337*^9, 
   3.725122918618531*^9}, {3.725123231321198*^9, 3.725123239622237*^9}, {
   3.725123322433408*^9, 3.7251233272002153`*^9}, {3.725124682234487*^9, 
   3.7251246898719273`*^9}, {3.725125131249887*^9, 3.7251251613591022`*^9}, {
   3.72512562948248*^9, 3.725125677867506*^9}, 3.725126041034536*^9, {
   3.7251260830094433`*^9, 3.725126118846994*^9}, {3.725126257107925*^9, 
   3.7251262581695147`*^9}, {3.725126498361383*^9, 3.725126504478945*^9}, {
   3.725126966199402*^9, 3.7251270410101013`*^9}, {3.72512708224986*^9, 
   3.7251270844974003`*^9}, {3.725127142575961*^9, 3.725127171734264*^9}, {
   3.7251272559149218`*^9, 3.7251272698566732`*^9}, {3.725127334287694*^9, 
   3.725127351037366*^9}, {3.7251286298115807`*^9, 3.725128678081168*^9}, {
   3.725128784734434*^9, 3.7251287903886843`*^9}, {3.725133253286934*^9, 
   3.725133307748846*^9}, {3.725133562756011*^9, 3.725133566674033*^9}, {
   3.725133619503998*^9, 3.725133635853902*^9}, {3.725133689940922*^9, 
   3.725133719922349*^9}, {3.7251337624425583`*^9, 3.725133763017008*^9}, {
   3.7251339524923983`*^9, 3.72513395404939*^9}, {3.725134449103588*^9, 
   3.725134452109106*^9}, {3.725144749482963*^9, 3.725144753392963*^9}, 
   3.725144804056039*^9, {3.725145515039756*^9, 3.725145527317659*^9}, {
   3.725145956751505*^9, 3.7251459635564127`*^9}, {3.725145997947192*^9, 
   3.72514600725074*^9}, {3.725146099080274*^9, 3.7251461099825697`*^9}, {
   3.725146148801643*^9, 3.7251461531295967`*^9}, {3.725146237410747*^9, 
   3.725146272944129*^9}, {3.725297062326294*^9, 3.7252971463647423`*^9}, {
   3.725297253248541*^9, 3.725297253533486*^9}, {3.725297553953135*^9, 
   3.7252975775042257`*^9}, {3.725297738900011*^9, 3.7252978019522543`*^9}, {
   3.7252984546564407`*^9, 3.725298492071217*^9}, {3.725298953195959*^9, 
   3.7252989569071627`*^9}, {3.7252990242195807`*^9, 
   3.7252990264755697`*^9}, {3.725304804411468*^9, 3.725304839744749*^9}, {
   3.725714053516272*^9, 3.725714054090819*^9}, 3.725716898962994*^9, {
   3.7257188812503366`*^9, 3.725719026170042*^9}, {3.7257192315242*^9, 
   3.725719243722185*^9}, {3.725719413181479*^9, 3.725719482682248*^9}, {
   3.72571952159387*^9, 3.725719527005527*^9}, {3.725719635845693*^9, 
   3.725719638474498*^9}, {3.725719786724513*^9, 3.725719798301427*^9}, {
   3.725720542113673*^9, 3.725720547502569*^9}, {3.7257208232932253`*^9, 
   3.725720838315115*^9}, {3.725721142458118*^9, 3.72572114396693*^9}, {
   3.727447057532001*^9, 3.727447073522623*^9}}],

Cell[BoxData[
 InterpretationBox["\<\"Total Time elapsed: \
\\!\\(\\*RowBox[{\\\"8.`*^-6\\\"}]\\)\"\>",
  StringForm["Total Time elapsed: ``", 8.*^-6],
  Editable->False]], "Print",
 CellChangeTimes->{3.725719290819537*^9, 3.7257193241689177`*^9, 
  3.7257195070340652`*^9, 3.7257195863749247`*^9, 3.725719701084567*^9, 
  3.725719974149001*^9, 3.7257206747360888`*^9, 3.7257209359808407`*^9, 
  3.7257210915446453`*^9, 3.725721223254451*^9, 3.727447076735722*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ListDensityPlot", "[", 
   RowBox[{"plotter", ",", 
    RowBox[{"InterpolationOrder", "\[Rule]", "0"}], ",", 
    RowBox[{"ColorFunction", "\[Rule]", "\"\<TemperatureMap\>\""}], ",", 
    RowBox[{"FrameLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<Rx Angle\>\"", ",", "\"\<Rz Angle\>\""}], "}"}]}]}], "]"}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ListPlot3D", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"plotter", ",", 
      RowBox[{"Flatten", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"i", ",", "j", ",", "0.5"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "ax", ",", "bx", ",", "0.1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "ay", ",", "by", ",", "0.1"}], "}"}]}], "]"}], 
        ",", "1"}], "]"}]}], "}"}], ",", 
    RowBox[{"InterpolationOrder", "\[Rule]", "10"}]}], "]"}], ";"}]}], "Input",\

 CellChangeTimes->{{3.72513396557992*^9, 3.725133970242654*^9}, {
  3.725134031607183*^9, 3.7251341642481728`*^9}, {3.725134259391021*^9, 
  3.725134266156303*^9}, {3.725134312891906*^9, 3.725134321169873*^9}, {
  3.725188247214843*^9, 3.725188282083633*^9}, {3.7251884354477*^9, 
  3.725188460125909*^9}, {3.725189239169475*^9, 3.725189269516996*^9}, {
  3.725189318093814*^9, 3.725189318650736*^9}, {3.725297230797076*^9, 
  3.7252972323326597`*^9}, {3.725714065009841*^9, 3.725714066353801*^9}, {
  3.725720011821608*^9, 3.725720028469235*^9}, {3.7257201254090147`*^9, 
  3.725720180380705*^9}, {3.7257202556366177`*^9, 3.7257202882533693`*^9}, {
  3.7257203503818913`*^9, 3.7257204404586287`*^9}, {3.725720505875225*^9, 
  3.7257205195604057`*^9}, {3.7274470862343884`*^9, 3.727447087513818*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{
   "alpha", ",", "theta1", ",", "theta2", ",", "theta3", ",", "AtU", ",", 
    "UtB", ",", "Dmat", ",", "A", ",", "B", ",", "a1", ",", "a2", ",", "b1", 
    ",", "b2", ",", "psi", ",", "psi0", ",", "psi1", ",", "Dmat", ",", "d1", 
    ",", "d2", ",", "d3", ",", "d4", ",", "params"}], "]"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", "\[IndentingNewLine]", 
   RowBox[{"2", " ", "QUBIT", " ", "ANALYTIC", " ", 
    RowBox[{"SECTION", "."}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"testDmatUnitary", "[", 
     RowBox[{"params_", ",", "angles_"}], "]"}], " ", ":=", " ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "out", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"out", " ", "=", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Exp", "[", 
           RowBox[{"I", "*", "params"}], "]"}], "/.", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"theta1", "\[Rule]", " ", 
             RowBox[{"angles", "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], ",", 
            RowBox[{"theta2", "\[Rule]", 
             RowBox[{"angles", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}]}], ")"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Return", "[", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"N", "[", 
            RowBox[{"Abs", "[", "out", "]"}], "]"}], "\[Equal]", " ", 
           RowBox[{"Table", "[", 
            RowBox[{"1", ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "1", ",", 
               RowBox[{"Length", "[", "out", "]"}]}], "}"}]}], "]"}]}], ",", 
          "1", ",", "0"}], "]"}], "]"}], ";"}]}], "\[IndentingNewLine]", 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"psi", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{"psi0", ",", "0", ",", "psi1", ",", "0"}], "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"U", " ", "=", " ", 
   RowBox[{
    RowBox[{"buildU", "[", " ", 
     RowBox[{
      RowBox[{"Pi", "/", "2"}], ",", "theta1", ",", "theta2", ",", " ", 
      RowBox[{"Pi", "/", "2"}]}], "]"}], "//", "Simplify"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"A", " ", "=", " ", 
   RowBox[{"DiagonalMatrix", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Exp", "[", 
       RowBox[{"I", "*", 
        RowBox[{"RandomReal", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "Pi"}], "/", "2"}], ",", 
           RowBox[{"Pi", "/", "2"}]}], "}"}], "]"}]}], "]"}], ",", 
      RowBox[{"Exp", "[", 
       RowBox[{"I", "*", 
        RowBox[{"RandomReal", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "Pi"}], "/", "2"}], ",", 
           RowBox[{"Pi", "/", "2"}]}], "}"}], "]"}]}], "]"}]}], "}"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"B", " ", "=", " ", 
    RowBox[{"DiagonalMatrix", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Exp", "[", 
        RowBox[{"I", "*", 
         RowBox[{"RandomReal", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "Pi"}], "/", "2"}], ",", 
            RowBox[{"Pi", "/", "2"}]}], "}"}], "]"}]}], "]"}], ",", 
       RowBox[{"Exp", "[", 
        RowBox[{"I", "*", 
         RowBox[{"RandomReal", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "Pi"}], "/", "2"}], ",", 
            RowBox[{"Pi", "/", "2"}]}], "}"}], "]"}]}], "]"}]}], "}"}], 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AtU", "=", " ", 
   RowBox[{"ArrayFlatten", "[", 
    RowBox[{"TensorProduct", "[", 
     RowBox[{"A", ",", "U"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"UtB", " ", "=", 
    RowBox[{"ArrayFlatten", "[", 
     RowBox[{"TensorProduct", "[", 
      RowBox[{
       RowBox[{"ConjugateTranspose", "[", "U", "]"}], ",", "B"}], "]"}], 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Dmat", " ", "=", " ", 
   RowBox[{"DiagonalMatrix", "[", 
    RowBox[{"Exp", "[", 
     RowBox[{"I", "*", 
      RowBox[{"{", 
       RowBox[{"d1", ",", "d2", ",", "d3", ",", "d4"}], "}"}]}], "]"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"finalMat", " ", "=", " ", 
    RowBox[{
     RowBox[{"UtB", ".", "Dmat", ".", "AtU", ".", "psi"}], "//", 
     "Simplify"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Print", "[", "\"\<phi\>\"", "]"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"phi", " ", "=", " ", 
    RowBox[{"FullSimplify", "[", 
     RowBox[{
      RowBox[{"finalMat", "[", 
       RowBox[{"[", 
        RowBox[{"1", ";;", "2"}], "]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Element", "[", 
         RowBox[{"theta1", ",", "Reals"}], "]"}], ",", 
        RowBox[{"Element", "[", 
         RowBox[{"theta2", ",", "Reals"}], "]"}]}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Print", "[", "\"\<psi\>\"", "]"}], ";"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"psi", " ", "=", " ", 
    RowBox[{
     RowBox[{"B", ".", "H", ".", "A", ".", 
      RowBox[{"{", 
       RowBox[{"psi0", ",", "psi1"}], "}"}]}], "//", "Simplify"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", "\"\<Test eq1.\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eq1", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"phi", "[", 
        RowBox[{"[", "1", "]"}], "]"}], " ", "\[Equal]", " ", 
       RowBox[{
        RowBox[{"1", "/", 
         RowBox[{"Sqrt", "[", "2", "]"}]}], 
        RowBox[{"psi", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}]}], ")"}], "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"psi0", "\[Rule]", "0"}], ",", 
       RowBox[{"psi1", "\[Rule]", " ", "1"}]}], "}"}]}], "//", "Simplify"}]}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eq2", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"phi", "[", 
        RowBox[{"[", "1", "]"}], "]"}], " ", "==", " ", 
       RowBox[{
        RowBox[{"1", "/", 
         RowBox[{"Sqrt", "[", "2", "]"}]}], 
        RowBox[{"psi", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}]}], ")"}], "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"psi0", "\[Rule]", "1"}], ",", 
       RowBox[{"psi1", "\[Rule]", "0"}]}], "}"}]}], "//", "Simplify"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eq3", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"phi", "[", 
        RowBox[{"[", "2", "]"}], "]"}], " ", "\[Equal]", " ", 
       RowBox[{
        RowBox[{"1", "/", 
         RowBox[{"Sqrt", "[", "2", "]"}]}], 
        RowBox[{"psi", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}]}], ")"}], "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"psi0", "\[Rule]", "0"}], ",", 
       RowBox[{"psi1", "\[Rule]", " ", "1"}]}], "}"}]}], "//", "Simplify"}]}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"eq4", " ", "=", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"phi", "[", 
         RowBox[{"[", "2", "]"}], "]"}], " ", "==", " ", 
        RowBox[{
         RowBox[{"1", "/", 
          RowBox[{"Sqrt", "[", "2", "]"}]}], 
         RowBox[{"psi", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}]}], ")"}], "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"psi0", "\[Rule]", "1"}], ",", 
        RowBox[{"psi1", "\[Rule]", "0"}]}], "}"}]}], "//", "Simplify"}]}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"params", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"d1", ",", "d2", ",", "d3", ",", "d4"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"params", " ", "=", " ", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"params", "/.", 
      RowBox[{"Flatten", "[", 
       RowBox[{"Normal", "/@", 
        RowBox[{"Solve", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"eq1", ",", "eq2", ",", "eq3", ",", "eq4"}], "}"}], ",", 
          "params"}], "]"}]}], "]"}]}], ")"}], "//", "Simplify"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"d1", ",", "d2", ",", "d3", ",", "d4"}], "}"}], " ", "=", " ", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"d1", ",", "d2", ",", "d3", ",", "d4"}], "}"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"C", "[", "1", "]"}], "\[Rule]", "0"}], ",", 
      RowBox[{
       RowBox[{"C", "[", "2", "]"}], "\[Rule]", "0"}], ",", 
      RowBox[{
       RowBox[{"C", "[", "3", "]"}], "\[Rule]", "0"}], ",", 
      RowBox[{
       RowBox[{"C", "[", "4", "]"}], "\[Rule]", "0"}]}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.725625882784605*^9, 3.725625942172628*^9}, {
   3.725625984109769*^9, 3.7256261388922777`*^9}, {3.725626172350507*^9, 
   3.7256261904668922`*^9}, {3.725626577213655*^9, 3.725626606284933*^9}, {
   3.7256268896167803`*^9, 3.725626960981677*^9}, {3.725627031354685*^9, 
   3.725627043641485*^9}, {3.725627107248765*^9, 3.725627125597968*^9}, {
   3.7256271666435623`*^9, 3.725627168932238*^9}, {3.725627355045557*^9, 
   3.725627429306415*^9}, {3.72562750388104*^9, 3.7256275301567173`*^9}, {
   3.725627582524064*^9, 3.725627591858321*^9}, {3.725628117055604*^9, 
   3.725628155713834*^9}, 3.725628726403414*^9, {3.7256290032014303`*^9, 
   3.725629012149678*^9}, {3.7256294348647623`*^9, 3.7256294618299427`*^9}, {
   3.725629802777424*^9, 3.725629857177784*^9}, {3.72563042940199*^9, 
   3.7256304682447243`*^9}, 3.725636564644617*^9, {3.72563667971742*^9, 
   3.725636704634779*^9}, {3.725714089066896*^9, 3.725714091657012*^9}, {
   3.7257165831743526`*^9, 3.725716667658883*^9}, {3.725726808303396*^9, 
   3.725726842067945*^9}, 3.725726949796185*^9, {3.725727838245839*^9, 
   3.725727846878202*^9}, {3.725813225069106*^9, 3.725813304881946*^9}, 
   3.725813336967041*^9, {3.725813465980062*^9, 3.7258135363133698`*^9}, {
   3.7258137475231943`*^9, 3.725813832564885*^9}, {3.725813907445273*^9, 
   3.725813995757279*^9}, {3.7258140451767483`*^9, 3.725814075385297*^9}, {
   3.725814268617667*^9, 3.7258142944483967`*^9}, {3.725814419369712*^9, 
   3.725814421625351*^9}, {3.7258146032667217`*^9, 3.7258146348675127`*^9}, {
   3.725814671668685*^9, 3.7258148152458363`*^9}, {3.725814856048682*^9, 
   3.725814890931423*^9}, {3.725814935344006*^9, 3.7258149666321363`*^9}, {
   3.725815027475939*^9, 3.725815069412833*^9}, {3.7258152340947723`*^9, 
   3.7258152364245*^9}, {3.725815490822988*^9, 3.7258154926604967`*^9}, {
   3.725815534659911*^9, 3.725815546013689*^9}, {3.725815590818882*^9, 
   3.7258156287062273`*^9}, {3.725815703495365*^9, 3.725815796393519*^9}, {
   3.7258159925464563`*^9, 3.725816054690448*^9}, {3.7258162220929193`*^9, 
   3.7258162857925367`*^9}, {3.725816356670335*^9, 3.7258164235557957`*^9}, {
   3.7258164920959463`*^9, 3.72581649652686*^9}, {3.725816559598097*^9, 
   3.7258165853075953`*^9}, {3.7258166174910297`*^9, 3.725816683872139*^9}, {
   3.72581673148707*^9, 3.725816779115431*^9}, {3.72581689188912*^9, 
   3.725816920230124*^9}, {3.725817036755499*^9, 3.725817122194166*^9}, {
   3.7258172248697367`*^9, 3.7258172326262627`*^9}, {3.72581743900254*^9, 
   3.7258174648818207`*^9}, {3.725817519720149*^9, 3.7258175222633677`*^9}, {
   3.725817576452058*^9, 3.725817581564177*^9}, {3.72581763250683*^9, 
   3.7258176742175694`*^9}, {3.7258230455822277`*^9, 3.725823065009707*^9}, {
   3.725887727870634*^9, 3.725887733022695*^9}, {3.725887773845675*^9, 
   3.725887789138729*^9}, {3.725891402432295*^9, 3.725891404531643*^9}, {
   3.725891762250166*^9, 3.725891764549304*^9}, {3.7258926050493107`*^9, 
   3.725892612259886*^9}, 3.7258934996230173`*^9, {3.725900400239003*^9, 
   3.725900460257057*^9}, {3.7259004922893457`*^9, 3.725900509425888*^9}, {
   3.725900540519792*^9, 3.7259005870115232`*^9}, {3.725901213418971*^9, 
   3.725901214953808*^9}, {3.725901256740391*^9, 3.7259012761344357`*^9}, {
   3.725901337351655*^9, 3.725901354374261*^9}, 3.725901408451475*^9, {
   3.725901479392457*^9, 3.725901539586775*^9}, {3.726407613531481*^9, 
   3.72640762327461*^9}}],

Cell[BoxData["\<\"Test eq1.\"\>"], "Print",
 CellChangeTimes->{
  3.725887799019071*^9, 3.725891405848919*^9, 3.725891765620563*^9, 
   3.725892613191781*^9, 3.725893502774919*^9, 3.725900348975294*^9, {
   3.72590042373798*^9, 3.725900461235529*^9}, {3.72590049414756*^9, 
   3.7259005105140457`*^9}, {3.7259005425432663`*^9, 3.725900587997292*^9}, 
   3.72590121659234*^9, 3.7259012777527533`*^9, {3.7259013416274233`*^9, 
   3.7259013555012007`*^9}, 3.725901409531865*^9, {3.7259014818807087`*^9, 
   3.725901540933305*^9}, 3.726231842538002*^9, 3.726408011347023*^9, 
   3.7264183976363583`*^9, 3.727449730352868*^9}],

Cell[BoxData[
 TemplateBox[{
  "Solve","ifun",
   "\"Inverse functions are being used by \
\\!\\(\\*RowBox[{\\\"Solve\\\"}]\\), so some solutions may not be found; use \
Reduce for complete solution information.\"",2,42,1,26183951431903095525,
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.725892614617193*^9, 3.725893503380706*^9, 3.725900349658125*^9, {
   3.725900424261364*^9, 3.725900461383885*^9}, {3.725900494300229*^9, 
   3.725900510633142*^9}, {3.72590054268992*^9, 3.7259005881278887`*^9}, 
   3.725901216732327*^9, 3.7259012778678226`*^9, {3.725901341769898*^9, 
   3.72590135569692*^9}, 3.725901409674102*^9, {3.7259014820247803`*^9, 
   3.725901541059045*^9}, 3.726231842660882*^9, 3.726408011541154*^9, 
   3.72641839774179*^9, 3.727449730462001*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Exp", "[", 
   RowBox[{"I", "*", "params"}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"grid", " ", "=", 
   RowBox[{"Flatten", "[", " ", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"i", ",", "j"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "0", ",", 
         RowBox[{"2", "Pi"}], ",", 
         RowBox[{"Pi", "/", "64"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "0", ",", 
         RowBox[{"2", "Pi"}], ",", 
         RowBox[{"Pi", "/", "64"}]}], "}"}]}], "]"}], ",", "1"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"results", " ", "=", " ", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"testDmatUnitary", "[", 
       RowBox[{"params", ",", "#"}], "]"}], "&"}], ",", "grid"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"plotter", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Append", "[", 
      RowBox[{
       RowBox[{"grid", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", 
       RowBox[{"results", "[", 
        RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "results", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot3D", "[", 
  RowBox[{"plotter", ",", 
   RowBox[{"InterpolationOrder", "\[Rule]", "1"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Theta 1\>\"", ",", "\"\<Theta 2\>\"", ",", "\"\<Test\>\""}],
      "}"}]}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Plot3D", "[", 
    RowBox[{
     RowBox[{"testDmatUnitary", "[", 
      RowBox[{"a", "[", 
       RowBox[{"{", 
        RowBox[{"x", ",", "y"}], "}"}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", 
       RowBox[{"2", "Pi"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", "0", ",", 
       RowBox[{"2", "Pi"}]}], "}"}]}], "]"}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.725625882784605*^9, 3.725625942172628*^9}, {
   3.725625984109769*^9, 3.7256261388922777`*^9}, {3.725626172350507*^9, 
   3.7256261904668922`*^9}, {3.725626577213655*^9, 3.725626606284933*^9}, {
   3.7256268896167803`*^9, 3.725626960981677*^9}, {3.725627031354685*^9, 
   3.725627043641485*^9}, {3.725627107248765*^9, 3.725627125597968*^9}, {
   3.7256271666435623`*^9, 3.725627168932238*^9}, {3.725627355045557*^9, 
   3.725627429306415*^9}, {3.72562750388104*^9, 3.7256275301567173`*^9}, {
   3.725627582524064*^9, 3.725627591858321*^9}, {3.725628117055604*^9, 
   3.725628155713834*^9}, 3.725628726403414*^9, {3.7256290032014303`*^9, 
   3.725629012149678*^9}, {3.7256294348647623`*^9, 3.7256294618299427`*^9}, {
   3.725629802777424*^9, 3.725629857177784*^9}, {3.72563042940199*^9, 
   3.7256304682447243`*^9}, 3.725636564644617*^9, {3.72563667971742*^9, 
   3.725636704634779*^9}, {3.725714089066896*^9, 3.725714091657012*^9}, {
   3.7257165831743526`*^9, 3.725716667658883*^9}, {3.725726808303396*^9, 
   3.725726842067945*^9}, 3.725726949796185*^9, {3.725727838245839*^9, 
   3.725727846878202*^9}, {3.725813225069106*^9, 3.725813304881946*^9}, 
   3.725813336967041*^9, {3.725813465980062*^9, 3.7258135363133698`*^9}, {
   3.7258137475231943`*^9, 3.725813832564885*^9}, {3.725813907445273*^9, 
   3.725813995757279*^9}, {3.7258140451767483`*^9, 3.725814075385297*^9}, {
   3.725814268617667*^9, 3.7258142944483967`*^9}, {3.725814419369712*^9, 
   3.725814421625351*^9}, {3.7258146032667217`*^9, 3.7258146348675127`*^9}, {
   3.725814671668685*^9, 3.7258148152458363`*^9}, {3.725814856048682*^9, 
   3.725814890931423*^9}, {3.725814935344006*^9, 3.7258149666321363`*^9}, {
   3.725815027475939*^9, 3.725815069412833*^9}, {3.7258152340947723`*^9, 
   3.7258152364245*^9}, {3.725815490822988*^9, 3.7258154926604967`*^9}, {
   3.725815534659911*^9, 3.725815546013689*^9}, {3.725815590818882*^9, 
   3.7258156287062273`*^9}, {3.725815703495365*^9, 3.725815796393519*^9}, {
   3.7258159925464563`*^9, 3.725816054690448*^9}, {3.7258162220929193`*^9, 
   3.7258162857925367`*^9}, {3.725816356670335*^9, 3.7258164235557957`*^9}, {
   3.7258164920959463`*^9, 3.72581649652686*^9}, {3.725816559598097*^9, 
   3.7258165853075953`*^9}, {3.7258166174910297`*^9, 3.725816683872139*^9}, {
   3.72581673148707*^9, 3.725816779115431*^9}, {3.72581689188912*^9, 
   3.725816920230124*^9}, {3.725817036755499*^9, 3.725817122194166*^9}, {
   3.7258172248697367`*^9, 3.7258172326262627`*^9}, {3.72581743900254*^9, 
   3.7258174648818207`*^9}, {3.725817519720149*^9, 3.7258175222633677`*^9}, {
   3.725817576452058*^9, 3.725817581564177*^9}, {3.72581763250683*^9, 
   3.7258176742175694`*^9}, {3.7258230455822277`*^9, 3.725823065009707*^9}, {
   3.725887727870634*^9, 3.725887733022695*^9}, {3.725887773845675*^9, 
   3.725887934375195*^9}, {3.725887979798503*^9, 3.725887990837133*^9}, {
   3.725888137904603*^9, 3.725888254067033*^9}, {3.725888687003665*^9, 
   3.725888708002067*^9}, {3.725888772374689*^9, 3.725888845868705*^9}, {
   3.725888907025894*^9, 3.725888973192168*^9}, {3.725889681074854*^9, 
   3.72588968514147*^9}, {3.725889779118984*^9, 3.725889856814143*^9}, {
   3.7258899181920643`*^9, 3.725890099430799*^9}, {3.725891021108173*^9, 
   3.7258910239057627`*^9}, {3.725891882577324*^9, 3.7258919032304897`*^9}, {
   3.725893514936059*^9, 3.725893519302176*^9}, {3.725898200500785*^9, 
   3.7258982708730707`*^9}, {3.7258983065184793`*^9, 3.725898318589006*^9}, {
   3.725900770499547*^9, 3.7259007741038446`*^9}, {3.725901134814402*^9, 
   3.7259011421817513`*^9}, {3.725901203058155*^9, 3.725901209177289*^9}, {
   3.7264082353947163`*^9, 3.7264082958791637`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     FractionBox["1", 
      RowBox[{"1.`", "\[VeryThinSpace]", "+", 
       RowBox[{"1.`", " ", 
        RowBox[{"Cos", "[", "theta2", "]"}]}]}]], ")"}], 
    RowBox[{"1.`", "\[VeryThinSpace]", "+", 
     RowBox[{"0.`", " ", "\[ImaginaryI]"}]}]], ",", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"0.`", "\[VeryThinSpace]", "-", 
           RowBox[{"1.`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
         RowBox[{"Cos", "[", "theta1", "]"}]}], "+", 
        RowBox[{"1.`", " ", 
         RowBox[{"Sin", "[", "theta1", "]"}]}]}], ")"}], " ", 
      RowBox[{"Sin", "[", "theta2", "]"}]}], ")"}], 
    RowBox[{
     RowBox[{"-", "1.`"}], "+", 
     RowBox[{"0.`", " ", "\[ImaginaryI]"}]}]], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1.`", "\[VeryThinSpace]", "+", 
      RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      FractionBox[
       RowBox[{"Csc", "[", "theta2", "]"}], 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"0.`", "\[VeryThinSpace]", "+", 
           RowBox[{"1.`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
         RowBox[{"Cos", "[", "theta1", "]"}]}], "+", 
        RowBox[{"Sin", "[", "theta1", "]"}]}]], ")"}], 
     RowBox[{"1.`", "\[VeryThinSpace]", "+", 
      RowBox[{"0.`", " ", "\[ImaginaryI]"}]}]]}], ",", 
   SuperscriptBox[
    RowBox[{"(", 
     FractionBox["1", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", 
       RowBox[{"1.`", " ", 
        RowBox[{"Cos", "[", "theta2", "]"}]}]}]], ")"}], 
    RowBox[{"1.`", "\[VeryThinSpace]", "+", 
     RowBox[{"0.`", " ", "\[ImaginaryI]"}]}]]}], "}"}]], "Output",
 CellChangeTimes->{{3.72589014095398*^9, 3.725890215009488*^9}, 
   3.725890498577757*^9, {3.725890543351614*^9, 3.725890604048903*^9}, {
   3.725890792619174*^9, 3.725890851758326*^9}, 3.725890981780882*^9, 
   3.725891031883033*^9, 3.725891084378167*^9, 3.725891190945977*^9, {
   3.725891271819495*^9, 3.725891344715444*^9}, 3.725891416567266*^9, 
   3.7258914739438133`*^9, 3.7258915624898977`*^9, 3.7258919171393003`*^9, 
   3.7258919501426773`*^9, 3.725892621213643*^9, 3.725892661243884*^9, 
   3.725892890538969*^9, {3.725893454832999*^9, 3.725893480069188*^9}, 
   3.725893519857514*^9, {3.7258983200062513`*^9, 3.72589832564835*^9}, 
   3.7259006317737007`*^9, 3.7259007746068277`*^9, {3.725901128430512*^9, 
   3.725901146864896*^9}, 3.725901642616374*^9, 3.72623184665215*^9, 
   3.72640801473507*^9, {3.726408244993416*^9, 3.726408296178927*^9}, 
   3.726418400722756*^9, 3.727449733882763*^9}],

Cell[BoxData[
 TemplateBox[{
  "Power","infy",
   "\"Infinite expression \\!\\(\\*FractionBox[\\\"1\\\", \\\"0.`\\\"]\\) \
encountered.\"",2,46,2,26183951431903095525,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.727449734028576*^9}],

Cell[BoxData[
 TemplateBox[{
  "Power","infy",
   "\"Infinite expression \\!\\(\\*FractionBox[\\\"1\\\", \\\"0.`\\\"]\\) \
encountered.\"",2,46,3,26183951431903095525,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.727449734244508*^9}],

Cell[BoxData[
 TemplateBox[{
  "Power","infy",
   "\"Infinite expression \\!\\(\\*FractionBox[\\\"1\\\", \\\"0.`\\\"]\\) \
encountered.\"",2,46,4,26183951431903095525,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.727449734471781*^9}],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Power\\\", \\\"::\\\", \
\\\"infy\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"",2,46,5,26183951431903095525,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.727449734703019*^9}],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1:eJyEvXuMbF+cVzXd0NDN9HWaS8MdAkpICCqgJAIRlKcoKJkgiig+0PAQFIlM
BAKo+IIAUYyiIBKEyGTCSzSIEiwnII5oqCAPS4hUIBRUptSCwuJCQzM9De0f
15PKWqu/cf77rak5dWrv7/dze805e+/v/lN+9j/6z19/xVd8xe2P/oqv+FZf
8f//P1/9d/z9/9i3fPff+sPe56vwzXf/fv/mv779xuHz6/B/9gf+hL/9X/2Z
f2S4zib85/3mbzh+w1//48P1t+Hf8Dv/19/79/yoPzV87y78avf/rP+ZH/1n
h/vZh3/9T/v53/8/+5e+abjPQ/iP/nNvv+FP/gf/13D/x/A/97N/+d13+W//
3PC7TuH//l95+Ln/1J/4C8PvPYf/p7/na85f82/8xWEcPof/i1/xK7/+Zz38
pWF8yv/eH/nH/8lf8XV/eRi3p/D7X/qdv+q3f/+/Moxn+Z/+Az/p9//B/+Wv
DuP8HP47vvLrfuGf/4l/bRj/b/7/+GU8/u0f+3/+nV/55795mJeX8B//K7/X
N32vX/Qtw3y9hn+PP/Yv/9of81V/fZjH8r/6nf6bH/szf+PfGOb3Lfybfvu3
XP3P3/krfrj5l3kv/5o//Ov/1B/bl3+ph6vw33X+Yb/7m/6L8i91ch3+t3z7
/a98+rnlX+qn/Jf9Xb/kZ33rH/qtwr/UVfn5x3/PH/34bb91+Jd6K/+JP+8P
fPfv8UfLv9ThTfj/+J/8zNfv92vLv9Rn+ff67+7/jx/5U75N+Je6Lf+Ptv/V
f/3jv/e3Df9Sz+Xf8vLjfsVPfSr/Uue34T/tu/7ln/5zfk/5l/q/C/9DP+RX
/4hf/EvLv/RF+Q/45/7u7/of/8PfLvxLv5T/hn9r+1e/7qu/MvxLH5V/26/7
1/633/lny7/013341/5Pf/Nv/8bfVv6l7z6E/4lv+h9+6ebnlH/px/If8W1+
yk/e/+C/KfxLn5b/tr/1W//gv3TzVeFf+rf8O/xDv+k7Xf+R8i99/RD+Q3/A
1/+1268p/9Lv5X/pH/grh//wd5R/yYHy3/SP/6j//au/47cP/5IP5f/0z/g1
v+8//4XlX3Kj/Kt+wf/9X/5tf7r8S558DP/9v/wH/brf8feVf8mZ8l/wa//d
X/4Df3P5l/xZ+CX/v89v+5M/7/d95XfI57/kUvmf/e+/z0/9B7+2/Etelf/q
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
fZbbC1i35fYC1nO5vYB1fhtuL2D934XbC9gX5fYC9ku5vYB9VG4vYH/dh9sL
2Hcfwu0F7MdyewH7tNxewP4ttxewrx/C7QXs93J7AXOg3F7AfCi3FzA3yu0F
zJOP4fYC5ky5vYD5c/GChdsLmEvl9gLmVbm9gDn2GG4vYL6V2wuYe+X2AuZh
ub2AOVluL2B+ltsLmKvl9gLmbbm9gDn8KdxewHwutxcwt8vtBczzcnsBc77c
XsD897rjnvu7cHsBudcd74Z1x7t4wcLtBbyO1x3vhnXHu3jBwu0F/F6vO94N
6453w7rj3bDueDesO94N64538YKFv7/ueDesO94N64538YKFv7/ueDesO94N
6453w7rj3bDueDesO94N6453w7rj3bDueDesO94N64538YKFv7/ueDesO94N
6453w7rj3bDueDesO94N64538YKFv7/ueDesO94N6453w7rj3bDueDesO94N
6453w7rj3bDueDesO94N6453w7rj3bDueDesO94N6453w7rj3bDueDesO94N
6453w7rj3bDueDesO94N64538YKFv7/ueDesO94N6453w7rj3bDueDesO94N
6453w7rj3bDueDesO94N6453w7rj3bDueDesO94N64538YKFv7/ueDesO94N
6453w7rj3bDueDesO94N6453w7rj3bDueDesO94N6453w7rj3bDueDesO94N
6453w7rj3bDueDesO94N6453w7rj3bDueDesO94N6453w7rj3bDueDesO94N
6453w7rj3bDueDesO94N6453w7rj3bDueDesO94N6453w7rj3bDueDesO94N
6453w7rj3bDueDesO94N6453w7rj3bDueDesO94N64538QL/HWxuLyBfhdsL
+Pl1uL2A19mE2wt4/W24vYDfuwv3ePB+9uH2At7nIdxewPs/htsL+LtO4fYC
/t5zuL2A4/A53F7A8Sm3F3DcnsLtBRzPcnsBx/k53F7A8b94wcLtBZyXl3B7
AefrNdxewHkstxdwft/C7QWc93J7AevhKtxewDq5DrcXsH7K7QWsq3J7Aeut
3F7AOrwJtxewPsvtBazbcnsB67ncXsA6vw23F7D+78LtBeyLcnsB+6XcXsA+
KrcXsL/uw+0F7LsP4fYC9mO5vYB9Wm4vYP+W2wvY1w/h9gL2e7m9gDlQbi9g
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
AtZzub2Adb4fbi9g/R+E2wvYF+X2AvZLub2AfVRuL2B/HYbbC9h3R+H2AvZj
ub2AfVpuL2D/ltsL2NfH4fYC9nu5vYA5UG4vYD6U2wuYG+X2AubJSbi9gDlT
bi9g/my9YLi9gLlUbi9gXpXbC5hjp+H2AuZbub2AuVduL2AeltsLmJPl9gLm
Z7m9gLlabi9g3pbbC5jDZ+H2AuZzub2AuV1uL2Cel9sLmPPl9gLm/9YLvO7m
9gLy83B7AcdfhNsLOM9luL2A81+F2wt43etwewHv5ybcXsD7vA23F/D+78Lt
BXxd9+H2Ar7eh3B7AdfhMdxewPUptxdw3Z7C7QVcz3J7Adf5OdxewPXfesFw
ewH35SXcXsD9eg23F3Afy+0F3N+3cHsB973cXsB62Am3F7BOdsPtBayfcnsB
66rcXsB6K7cXsA73wu0FrM9yewHrttxewHoutxewzvfD7QWs/4NwewH7otxe
wH4ptxewj8rtBeyvw3B7AfvuKNxewH4stxewT8vtBezfcnsB+/o43F7Afi+3
FzAHyu0FzIdyewFzo9xewDw5CbcXMGfK7QXMn60XDLcXMJfK7QXMq3J7AXPs
NNxewHwrtxcw98rtBczDcnsBc7LcXsD8LPfnU+Zqub2AeVtuL2AOn4XbC5jP
5fYC5na5vYB5Xm4vYM6X2wuY/1sv8Pqa2wvIz8PtBRx/EW4v4DyX4fYCzn8V
bi/gda/D7QW8n5twewHv8zbcXsD7vwu3F/B13YfbC/h6H8LtBVyHx3B7Aden
3F7AdXsKtxdwPcvtBVzn53B7Add/6wXD7QXcl5dwewH36zXcXsB9LLcXcH/f
wu0F3PdyewHrYSfcXsA62Q23F7B+yu0FrKtyewHrrdxewDrcC7cXsD7L7QWs
23J7Aeu53F7AOt8Ptxew/g/C7QXsi3J7Aful3F7APiq3F7C/DsPtBey7o3B7
Afux3F7APi23F7B/y+0F7OvjcHsB+73cXsAcKLcXMB/K7QXMjXJ7AfPkJNxe
wJwptxcwf7ZeMNxewFwqtxcwr8rtBcyx03B7AfOt3F7A3Cu3FzAPy+0FzMly
ewHzs9xewFwttxcwb8vtBczhs3B7AfO53F7A3C63FzDPy+0FzPlyewHzf+sF
XkdzewH5ebi9gOMvwu0FnOcy3F7A+a/C7QW87nW4vYD3cxNuL+B93obbC3j/
d+H2Ar6u+3B7AV/vQ7i9gOvwGG4v4PqU2wu4bk/h9gKuZ7m9gOv8HG4v4Ppv
vWC4vYD78hJuL+B+vYbbC7iP5fYC7u9buL2A+15uL2A97ITbC1gnu+H2AtZP
ub2AdVVuL2C9ldsLWId74fYC1me5vYB1W24vYD2X2wtY5/vh9gLW/0G4vYB9
UW4vYL+U2wvYR+X2AvbXYbi9gH13FG4vYD+W2wvYp+X2AvZvub2AfX0cbi9g
v5fbC5gD5fYC5kO5vYC5UW4vYJ6chNsLmDPl9gLmz9YLhtsLmEvl9gLmVbm9
gDl2Gm4vYL6V2wuYe+X2AuZhub2AOVluL2B+ltsLmKvl/jzLvC23FzCHz8Lt
BczncnsBc7vcXsA8L7cXMOfL7QXM/60XeL3M7QXk5+H2Ao6/CLcXcJ7LcHsB
578Ktxfwutfh9gLez024vYD3eRtuL+D934XbC/i67sPtBXy9D+H2Aq7DY7i9
gOtTbi/guj2F2wu4nuX2Aq7zc7i9gOu/9YLh9gLuy0u4vYD79RpuL+A+ltsL
uL9v4fYC7nu5vYD1sBNuL2Cd7IbbC1g/5fYC1lW5vYD1Vm4vYB3uhdsLWJ/l
9gLWbbm9gPVcbi9gne+H2wtY/wfh9gL2Rbm9gP1Sbi9gH5XbC9hfh+H2Avbd
Ubi9gP1Ybi9gn5bbC9i/5fYC9vVxuL2A/V5uL2AOlNsLmA/l9gLmRrm9gHly
Em4vYM6U2wuYP1svGG4vYC6V2wuYV+X2AubYabi9gPlWbi9g7pXbC5iH5fYC
5mS5vYD5WW4vYK6W2wuYt+X2AubwWbi9gPlcbi9gbpfbC5jn5fYC5ny5vYD5
v/UCr4u5vYD8PNxewPEX4fYCznMZbi/g/Ffh9gJe9zrcXsD7uQm3F/A+b8Pt
Bbz/u3B7AV/Xfbi9gK/3IdxewHV4DLcXcH3K7QVct6dwewHXs9xewHV+DrcX
cP23XjDcXsB9eQm3F3C/XsPtBdzHcnsB9/ct3F7AfS+3F7AedsLtBayT3XB7
Aeun3F7Auiq3F7Deyu0FrMO9cHsB67PcXsC6LbcXsJ7L7QWs8/1wewHr/yDc
XsC+KLcXsF/K7QXso3J7AfvrMNxewL47CrcXsB/L7QXs03J7Afu33F7Avj4O
txew38vtBcyBcnsB86HcXsDcKLcXME9Owu0FzJlyewHzZ+sFw+0FzKVyewHz
qtxewBw7DbcXMN/K7QXMvXJ7AfOw3F7AnCy3FzA/y+0FzNVyewHzttyff5nD
Z+H2AuZzub2AuV1uL2Cel9sLmPPl9gLm/9YL/PrN7QXk5+H2Ao6/CLcXcJ7L
cHsB578Ktxfwutfh9gLez024vYD3eRtuL+D934XbC/i67sPtBXy9D+H2Aq7D
Y7i9gOtTbi/guj2F2wu4nuX2Aq7zc7i9gOu/9YLh9gLuy0u4vYD79RpuL+A+
ltsLuL9v4fYC7nu5vYD1sBNuL2Cd7IbbC1g/5fYC1lW5vYD1Vm4vYB3uhdsL
WJ/l9gLWbbm9gPVcbi9gne+H2wtY/wfh9gL2Rbm9gP1Sbi9gH5XbC9hfh+H2
AvbdUbi9gP1Ybi9gn5bbC9i/5fYC9vVxuL2A/V5uL2AOlNsLmA/l9gLmRrm9
gHlyEm4vYM6U2wuYP1svGG4vYC6V2wuYV+X2AubYabi9gPlWbi9g7pXbC5iH
5fYC5mS5vYD5WW4vYK6W2wuYt+X2AubwWbi9gPlcbi9gbpfbC5jn5fYC5ny5
vYD5v/UCv05zewH5ebi9gOMvwu0FnOcy3F7A+a/C7QW87nW4vYD3cxNuL+B9
3obbC3j/d+H2Ar6u+3B7AV/vQ7i9gOvwGG4v4PqU2wu4bk/h9gKuZ7m9gOv8
HG4v4PpvvWC4vYD78hJuL+B+vYbbC7iP5fYC7u9buL2A+15uL2A97ITbC1gn
u+H2AtZPub2AdVVuL2C9ldsLWId74fYC1me5vYB1W24vYD2X2wtY5/vh9gLW
/0G4vYB9UW4vYL+U2wvYR+X2AvbXYbi9gH13FG4vYD+W2wvYp+X2AvZvub2A
fX0cbi9gv5fbC5gD5fYC5kO5vYC5UW4vYJ6chNsLmDPl9gLmz9YLhtsLmEvl
9gLmVbm9gDl2Gm4vYL6V2wuYe+X2AuZhub2AOVluL2B+ltsLmKvl9gLmbbm9
gDl8Fu7Py8zncnsBc7vcXsA8L7cXMOfL7QXM/60X+PWY2wvIz8PtBRx/EW4v
4DyX4fYCzn8Vbi/gda/D7QW8n5twewHv8zbcXsD7vwu3F/B13YfbC/h6H8Lt
BVyHx3B7Aden3F7AdXsKtxdwPcvtBVzn53B7Add/6wXD7QXcl5dwewH36zXc
XsB9LLcXcH/fwu0F3PdyewHrYSfcXsA62Q23F7B+yu0FrKtyewHrrdxewDrc
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
q3J7Aeut3F7AOtwLtxewPsvtBazbcnsB67ncXsA63w+3F7D+D8LtBeyLcnsB
+6XcXsA+KrcXsL8Ow+0F7LujcHsB+7HcXsA+LbcXsH/L7QXs6+NwewH7vdxe
wBwotxcwH8rtBcyNcnsB8+Qk3F7AnCm3FzB/tl4w3F7AXCq3FzCvyu0FzLHT
cHsB863cXsDcK7cXMA/L7QXMyXJ7AfOz3F7AXC23FzBvy+0FzOGzcHsB87nc
XsDcLrcXMM/L7QXM+XJ7AfP/53jAh35e8Z/9jx/4lPfHb31h+Dct+M+OPw//
3AW3Xwz/yQX/2fkvwj9xwe0jw//IgttTht8suP1l+Ncu+M/e/1X4xy24fWf4
9y24PWj4ly+4/Wj4wYLbm4b/0ILbp4Z/24Lbs4Z/9YLbv4Z/1oLby4Z/7ILb
1zb1ueD2uOHfu+D2u+HfsOD2vuFfsuD2weF/YcHticP3Ftz+OPzLFtxeOfyf
LLh9c/inLbg9dPi3Lrj9dPjxgttbh3/VgttnN3my4Pbc4Z+x4Pbf4X/j5/Lf
c/qprP+tFw//mA/8P3v71/8eNty+vMm3BbdHD/+JBbdfD/+dC27vHv7dC24f
3+TtgtvTh//pBbe/D39ZcHv98C9ccPv+8H+64H4OMPzPL7ifDwz/7Qvu5wbD
f/6C+3nC8L+94H7OMPwPLLifP2zyfMH/sZ5LDP+Tei4x/FP1XGL4o55LDP8W
PZcY/nl6LjH8F+u5xOb9Qs8lhn+lnksM/3g9lxj+I3ouMfzr9Vxi+G/Rc4nh
P6PnEsO/Q88lNu9Hei4x/KP1XGL4P9RzieFfo+cSwz9BzyWG3+u5xPCP6LnE
8M/Wc4nN5x89lxj+XXouMfwP6bnE8F+t5xKbz0t6LjH8T+m5xPDfpOcSw39a
zyU2n6/0XGL479FzCX7+/zn/8H69m/F+jsf363I/x+P7dbmf4/H9uvXv53h8
vy73czy+X5f7OR7fr8v9HI/v1+0LP8fj+3Xr38/x+H5d7ud4fL8u93M8vl+X
+zke36/bF36Ox/fr1r+f4/H9utzP8fh+Xe7neHy/LvdzvOG/bMH9fG/47YL7
ud/mc++C+3ng8D+34H5OOPxfLLifHw7/bQvu54rD/8qC+3nj8N0F93PI4Z+/
4H4+OfxvLbifWw4/XnA/zxz++xfczzmH//0F9/PP4b9ywf1cdPhX/Vz+c7zA
z0uH/6MP3F7g56jDf92C+/nq8D+x4H7uOvxmwf08dvinLLif0w7/xgX389vh
/3zB/Vx3+GcsuJ/3Dv/LC+7nwMPfFtzPh4f/rgX3c+Phf33B/Tx5+NGC+znz
8N+34H7+PPx7FtzPpYd/zIL7efXw/2bB/Rx7+A8suJ9vD/+1C+7n3sO/dsH9
PHz49YL7OfnwT1pwPz8f/mcX3M/Vh//Egvt5+/DfvOB+Dj/8Ly24n88Pf11w
P7cf/jkL7uf5w//agvs5//BftOB+/j/8ixfc5wLDv1t86tvnAsO/6eP5nJ/j
y3/w4/mcn+PLv0PP+Yf7XGD4T388n/Nz/vLfoOf8w30uMPx79Jyf91P+xXrO
P9znAsP39Zyf91/+P+s5/3CfCwz/7XrOz9db/v/98L+uix8N97nA8P9Dz/m5
PuV/Qc/5h/tcYPiX6Tk/17P80/Scf7jPBYYf6zk/17/8Rs/5h/tcYPhf13N+
7lf51+o5/3CfCwz/HD3n5/6Wf72e82/6esF/5t/Uw+OiHsq/WM/5h/tcYPj3
6zk/66f8E/Scf7jPBYZ/RM/5WW/l+3rOP9znAsP/Sz3nZ32W/5Ce8w/3ucDw
36Tn/Kzn8m/T8//hPhcYfqrn/Kz/7bnA8K/+8Jz/G//3iy/79//z008d7nOB
4f9Uz/nZL+Wfpef8w30uMPxv6zk/+6v8Y/Wcf7jPBYb/ST3nZz+W/6Se8w/3
ucDwz9NzfvZv+Y2e8w/3ucDwb9RzfvZ7+W/Vc/7hPhcY/vZv8mEn3OcCmzzU
c/7hPhcY/nv1nJ95Uv4xes4/3OcCw39AzzM3OaznmcM/Sc8zh/8zPc8c/pf0
PHOT23qeOfwX6nnm8O/W88zh/5WeZw7/OD3PHP5/6Xnm8P9BzzOH/0d6nrn5
nKDnmcP/Fz3PHP6Fep45/N/W88zh36fnmcP/Wz3PHP4f6Hnm8P9XzzM3n0P0
PHP4f6LnmcP39Dxz+LmeZw7/cj3PHP7v6nnm8H+i55nD/3s9z9x8ztHzzOFP
ep45/Fv1PHP45+t55vB/S88th/88/eP79W7G+1yA79flPhfg+3W5zwX4ft2+
8LkA36/LfS7A9+tynwvw/brc5wJ8v26/+FyA79ftC58L8P263OcCfL8u97kA
36/LfS7A9+v2i88F+H7dvvC5AN+vy30uwPfrcp8L8P263OcCw/8fPefn+3j5
p+o5/3CfCwz/H/Wcn+/75Y96zr/5PLPgn6Hn/PycUP6X9Zx/uM8FNjmj5/z8
XFH+eXrOP9znAsP/hp7z83NI+S/Wc/7hPhcY/vv0nJ+fW8q/V8/5h/tcYPi/
o+f8/JxT/pV6/j/c5wLD/08952fOb88Fhv/aD8/57QU+Fxj+3+k5P98vyn9E
z/mH+1xg+H+o5/x83yn/ej3nH+5zgeE/oef8fP8q/y16zr/5vL3g/5Oe8/N9
sPxn9Jx/uM8Fhv9OPefn+2n5X9Nz/uE+Fxj+i/Scn+/L5V+i5/ybz/8L/r/p
OT/f38s/Ws/5h/tcYPh/rc87/JxQ/v16zj/c5wLD/z095+fnjfKv0XP+4T4X
GP5/6zk/P7eUf4Ke8w/3ucDwP63n/Pz8U36v5/zDfS4w/D/Wc35+jir/iJ7z
D/e5wPAXPefn57Hy/1TP+Yf7XGD4/6rn/PxcV36g5/zDfS4w/L/Qc35+Piz/
rsVzfp8LDD/T8/85d/G5wHCfC3B8uc8FOL7c5wLDfS4w3OcCnL/c5wLDfS4w
3OcCvJ9ynwsM97nAcJ8L8P7LfS4w3OcCw30uwNdb7nOB4T4XGO5zAa5Puc8F
hvtcYLjPBbie5T4XGO5zgeE+F+D6l/tcYLjPBYb7XID7Ve5zgeE+FxjucwHu
b7nPBTZ9veA+F2A9lPtcYLjPBYb7XID1U+5zgeE+FxjucwHWW7nPBYb7XGC4
zwVYn+U+Fxjuc4HhPhdgPZf7XGC4zwWG+1yA9b89Fxjuc4HhPhcY7nMB9ku5
zwWG+1xguM8F2F/lPhcY7nOB4T4XYD+W+1xguM8FhvtcgP1b7nOB4T4XGO5z
AfZ7uc8FhvtcYLjPBZgP5T4XGO5zgeE+F2CelPtcYLjPBYb7XGCTw3qeOdzn
AsN9LjDc5wKb3NbzzOE+Fxjuc4HhPhcY7nOB4T4XGO5zgeE+F9h8TtDzzOE+
Fxjuc4HhPhcY7nOB4T4XGO5zgeE+F9h8DtHzzOE+Fxjuc4HhPhcY7nOB4T4X
GO5zgeE+F9h8ztHzzOE+Fxjuc4HhPhcY7nOB4T9P//h+vZvxPhfg+3W5zwX4
fl3ucwG+X7cvfC7A9+tynwvw/brc5wJ8vy73uQDfr9svPhfg+3X7wucCfL8u
97kA36/LfS7A9+tynwvw/br94nMBvl+3L3wuwPfrcp8L8P263OcCfL8u97nA
cJ8L8H283OcCw30uMNznAnzfL/e5wObzzIL7XICfE8p9LjDc5wKbnNHzf36u
KPe5wHCfCwz3uQA/h5T7XGC4zwWG+1yAn1vKfS4w3OcCw30uwM855T4XGO5z
geE+F2DOb88FhvtcYLjPBYb7XIDvF+U+Fxjuc4HhPhfg+065zwWG+1xguM8F
+P5V7nOBzeftBfe5AN8Hy30uMNznAsN9LsD303KfCwz3ucBwnwvwfbnc5wKb
z/8L7nMBvr+X+1xguM8FhvtcgJ8Tyn0uMNznAsN9LsDPG+U+Fxjuc4HhPhfg
55ZynwsM97nAcJ8L8PNPuc8FhvtcYLjPBfg5qtznAsN9LjDc5wL8PFbuc4Hh
PhcY7nMBfq4r97nAcJ8LDPe5AD8flvtcYLjPBYb7XGDzz7/L+/Bv9b2h973h
Bz7F82zOD8TnvMHzD/f8M4/HD/f4b1pcd3M+IT7nGZ5/+Pv30/HDPf5zF9fd
nH+Iz3mJ5x/u+S8X4y8X439ycd3N+Yr4nMd4/uHvr0/HD/f4T1xcd3N+Iz7n
PZ5/uOf/gsX4L1iM/yOL627Oh8TnPMnzD39/vzr+cjH+ZnHdzfmT+JxXef7h
nv8rFuO/YjH+axfX3Zxvic95mOcf/n79dPxHLcZ/3OK6m/Mz8Tlv8/zDPf93
LsZ/52L89y2uuzmfE5/zPM8//P167vgvWIz/8sV1N+d/4nNe6PmHe/6Zx+OH
e/zB4rqb80XxOY/0/MPf76+Ov1yM/6HFdTfnl+Jz3un5h3v+b16M/+bF+G9b
XHdzPio+56mef/j7/d7xX7EY/9WL627OX8XnvNbzD/f8n74Y/+mL8Z+1uO7m
fFd8zoM9//D386fjP2ox/mMX192cH4vPebPnH+75f3wx/scX439ycd3N+bT4
nGd7/uHv52HHf+di/Pcurrs5/xaf83LPP9zzf91i/Nctxn/D4rqb83XxOY/3
/MPfz+eO/4LF+C9ZXHdzfi8+5/2ef3g+Dy/Gf9Ni/F9YXHfz/QDx+T6B5x/+
/vtFxw/3+L3FdTffP/Dnnw88n38+cM//pYvxX7oY/2WL626+3yA+34fw/MPf
f//q+MvF+H+yuO7m+xPi830Lzz/c83/yYvwnL8Z/2uK6m+9niM/3OTz/8Pff
Tzv+mxfjv3Vx3c33P/x59QPP59UP3PMfLsYfLsYfL667+X6J+HwfxfMPf//9
veO/YjH+qxbX3Xx/RXy+7+L5h3v+H16M/+HF+JvFdTffjxGf79N4/uHvf97o
+E9fjP+MxXU3378Rn+/reP7hnv/bF+O/fTH+byyuu/l+j/h8H8jzD3//80/H
f9Ri/Mcsrrv5/pD4fN/I8w/3/H90Mf6PLsZ/7eK6m+8nic/3mTz/8Pc/j3X8
jy/G/8TiupvvP4nP96U8/3DP/zsW43/HYvzvXFx38/0q8fk+lucf/v7nw47/
zsX4715cd/P9LfH5vpfnH+75f9Vi/K9ajP+4xXU33w8Tn++Tef7h739e7fiv
W4z/04vrbr5/Jj7fV/P8wz3/Ty3G/9Ri/Mviupvvt4nP9+E8//D3Pz93/Bcs
xn/h4rqb78/Zvz7w+NcH7vl/bDH+xxbj/+niupvv54nP9/k8//D3P893/Dct
xv/5xXU33/8Tn+8Lev7hnv8zF+M/czH+ty+uu/l+ofh8H9HzD3/fLzp+uMf/
/MV1N99ftC9/4PHlD9zz/83F+L+5GP+3F9fdfD9SfL5P6fmHv+87Hf+li/F/
YHHdzfcvxef7mp5/uOf/FYvxv2Ix/mMX1918X018vg/q+Ye/718df7kY/48X
1918T87PNz7wPN/4wD3/H1+M/+OL8X9ycd3N9/PE5/uvnn/4+z7Y8Z+8GP+p
i+tuvhcoPt+79fzDPf/DYvzDYvzj4rqb7yOKz/d9Pf/w9/204795Mf5bFtfd
fA/Sz6M+8DyP+sBz/rgY/7mL8Z+3uO7m+5fi8/1mzz/8fV/u+MPF+F+8uO7m
e5/i871qzz/c8//dxfi/uxj/vYvrbr5vKj7f5/b8w9/3947/isX4r1xcd/M9
V/H5HrnnH+75f81i/K9ZjP/4xXU3368Vn++ve/7h7z9P6PgfXoz/kcV1N9/r
FZ/vzXv+4Z7/zyzG/5nF+K9fXHfzfWLx+b6+5x/+/vONjv/0xfjfsrju5nvM
Ph/8wHM++IF7/n+5GP8vF+N/ZnHdzfenxef3CZ5/+PvPWzr+2xfjv2Nx3c33
tsXndxGef7jn/6LF+C9ajP+SxXU33xcXn99jeP7h7z//6fiPWoz/6MV1N99T
F5/fgXj+4Z7/HyzG/4PF+H+4uO7m+/Hi8/sTzz/8/edRHf9HF+O/ZnHdzffy
xed3L55/uOf/9Yvxv34x/hMW1938HkB8fm/j+Ye//3ys4398Mf5+cd3N7xB8
/v6B5/z9A/f8f3Ex/i8uxn9kcd3N7x/E5/dFnn/4+8/rOv53LMZ/9uK6m99d
iM/vmjz/cM//Cxbjf8Fi/MHiupvfe4jP76k8//D3nx92/Hcuxn/X4rqb35mI
z++4PP9wz/8HF+P/4GL8H1pcd/P7FvH5/ZjnH/7+88yO/1WL8b96cd3N72rE
53drnn+45//BxfgfXIz/ocV1N7/nEZ/fy3n+4e8/X+34r1uM/1OL625+RyQ+
v9PL91s+cM//Gxfjf+Ni/G9aXHfz+yXx+X2g5x/+/vPejv+pxfifXlx387sp
8fldoucf7vn/6mL8X12M/7bFdTe/1xKf30N6/uHvP3/u+C9YjP89i+tuficm
Pr/D9PzDPf8vXYz/pYvxv2xx3c3v0MTnd2uef/j7z8M7/scW428X1938zk18
fhfn+Yd7/t+wGP8bFuM/bXHdze/oxOd3d55/+PvP5zv+mxbj/9ziupvf6YnP
7/o8/3DP/5OL8T+5GP8vFtfd/A5QfH436PmHv39e0PGfuRj/2xbX3fzOUHx+
l+j5h+f522L8tyzG/5XFdTe/Y1zw988jOv/uYp7N7x59vvaB53ztA/f8v3sx
/ncvxn/+4rqb31WKz+8wPf/w989HOv5vLsb/rcV1N7/bFJ/feXr+4Z7/lyzG
/5LF+OPFdTe/CxWf35F6/uHvn9d0/Jcuxv/+xXU3vzsVn9+pev7hnv/vLcb/
vcX4v7+47uZ3reLzO1jPP/z986OO/xWL8b9ycd3N72bF53e2nn+45//Di/F/
eDH+qxbX3fwuV3x+x+v5h79/ntXxl4vx/2hx3c3vfsXnd8Kef3ieDy/Gf/xi
/K9bXHfzu2Lx+R2y5x/+/vlax//xxfg/sbju5nfL4vM7Z88/3PP/6GL8jy7G
3yyuu/ldtPj8jtrzD3//vK/jP3kx/lMW19387lp8fqft+Yd7/m9YjP+Gxfhv
XFx387tu8fkduOcf/v75Y8c/LMb/88V1N78bF5/fmXv+4Z7/ty7G/9bF+M9Y
XHfzu3Tx+R275x/+/nlox3/zYvxfXlx387t38fmdvOcf7vn/1WL8v1qMf1tc
d/O7evH5Hb7nH/7++WzHf+5i/O9aXHfzu33x+Z2/5x+e847F+O9YjP/ri+tu
/i6A+PwdAc8//P3z4o4/XIw/Wlx383cHxOfvFHj+4Z7/9y7G/97F+N+3uO7m
7xqIz99B8PzD3z+/7vi/uxj/PYvrbv5ugvj8nQXPP9zz//LF+F++GP8xi+tu
/i6D+PwdB88//P3z9I7/isX4zd930HWHe57hnucHFvNs/h6E+Pz9CM8//P1z
+Y7/NYvxv3Zx3c3fmxCfv0/h+Yd7/j+2GP/HFuO/dnHdzd+zEJ+/f+H5h7//
PYGO/+HF+OvFdTd/L0N8/r6G5x/u+T9xMf4TF+M/aXHdzd/jEJ+/3+H5h7//
vYWO/zOL8X92cd3N3/sQn78P4vmHe/5/thj/zxbjf2Jx3c3fExGfvz/i+Ye/
/z2Kjv/0xfjN3yXRdYd7nuGe5y8t5tn8HRPx+bsnnn/4+9/H6Ph/uRj/urju
5u+kiM/fVfH8w3O+uRj/2Yvxn7O47ubvsIjP323x/MPf/35Ix3/7YvxfW1x3
83dexOfvwnj+4Z7/Fy7G/8LF+F+0uO7m78iIz9+d8fzD3/++Ssd/0WL8Fy+u
u/k7NeLzd208/3DP/3cW4//OYvx3L667+fv44vN3czz/8Pe/P9PxH7UY//2L
zxXfv/hc8ZFFnnxkkSeb16PXNf+/55n/9jy/eZGHv3mRh/8/5i6YSg==
   "], {{
     {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJxMnXW81dXSh8/uvQ8YqCgWAgYoKna3R8VCRMQAUcEu7O7u7sRARcVuxe7u
7m4xr9drvPP85jnv4Y/5rLVmzeqZWd9Ze+9z+o4ZN2y3cltb2zSHt7VVIi2V
2trKQUdEfrWgR4NWD1om6J6gZYM6gh4PWkN6ImjNoCuCrgzqFzQk6MWgDWxz
b9ByQUsG3Rm0VNAKQZODVgxaOuhux1k+6H7rkbvLetrfZz39vhQ0VHo5aEPp
laBhQUsE3eGYawc9E7RO0OJBt1u/aNCtQYtJt1mP3LNB6wYNDnraPljnk0Fr
dbaLvVo8aP3Iv+C61wt6vi15tH9OHm2esr9Vgx5xj/sHzRd0TdAqQQ9bv1LQ
g0ErBx0f1AxqtOU5cWZHBZ0gn/rTgqYNOjWoJf8Ey/CnsS3tjnbtt7iOY4Jq
QVXr6f9I5Y6Rf6T8kv0cLX86+2f87kGnONZ08k4P6tuW+tHPfJ+gy4Nmis7O
jvSsttSDB1w3OvdYW+rayUHdgk6y/27yTjLf7pinOm53609xH9iDE6WTlG9Z
bnd/H3Lv+3sO15onHWA60fyMMeezmHfQ9EFnBPUoJR8eaxoWtFEpdfHNoDeC
NonyzEHnBp0XtB56U0r9WCfSdUupo2dGOoN9rqscuojskFLqFuOe7tjQmcqP
CHo96jc2pczY50faK2gW5zyd7ZlPT+e0dinnga4Ptoy+nq78acohf07Qa1H3
atBw132Oa2dt5zvWzJbJd87pNWm4PPaJPH0NjXTDUtr2jO4De71BKevwKWfJ
Z83XRXl+z2aeoKuCJgQtIJ/6RYIGBd0sH971yiM7r/m5bX+l+X72O7/njl5g
p1dL89l2guV5bT+3fdzsuDcFHdeWNtpwPtTdYp4UWxwb9FnQNvYzT6xv3qAB
QdcGTfT82Qt8zYbqGb5voaAFgyaZJ73RFP4NzoP5LKzMjeYXcD8GKreg+est
D1T2JuXbY8xW0IlBddfGusjjQ45tS9seH9Q3ZEZF+l7Q+0FbBn0Y9JG0lbye
+gH0p/MMWD9ttmjLPqCR9vWBfOp7h9wlkc4Z6aWW5zJ/iWXy8C6z3+KMIx0T
6SdBn0qcAbx3HWekc/w4aOugOUo5zsWR31y5kY7NWBfbL/1fYbutXCt70q+U
fNbI2U5wvK2dx8emWys7t/KXu5fw2K/R7iP2hH1v7J58aF2fUu4/6+Xe5v7l
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
utf44AEd6V/m6UiZ35Tbu5Lj/SLtJe/WSmLKWyr5myQwALH9HpXE6lPcc2Ke
OyrGQdbvU8m+GeNOz5SzWVJZeN94h/K7Kn7PREoZLMKdf4My8He2DJ/fQIF7
x1US+97iPAvs7HwXcaw7HXcf17i3c1laPrx9nCf97V7pirV+dD2L2f+t5m+r
ZOyymDzKvBfwbtC7km+Pl5nnvZE3hPejr/fKvkOaUua3YODokZXE0rxBXFzJ
GIZ0DvMjtBF8Kz75fG3hfG2DPBjjzansiZTynJFe4ryuc//ANO+Wc0zGntOx
LnE9t7vG2z1f8ntWUjeIJ/dUBzhrdOZn9eYn6yjfYVv6YM7nOd93HXOU417q
Xo1yT6jnPYl3I+Kl+dW9ic5vDvcG/DSr67++0oUTi9/ElRODgZ3ATeAoMBRv
o5QrlbybjjJfvGlU8s46ynsL7AMWA/8cqRx1G1fyfqOvv4P+KSdG5w/HlCoZ
s3DfcdeBo8Aw4Bfw2GHKIQPGY15FrFjJccAzvLlQT1/7ign20/Z/137xb/i2
4j2oktgKrIWtwyveZSrJA0MUmDnoL+lgeeAoxnzB9R/p+Ec4PjzwElgJbARu
Yk2Uuc/BEU+6DwdP1fff7gnYA9wBDini+Era6G6VtGHid3hFrF/xHcP6ccqQ
H2Q77LqIXYImmSflDaKIRzz/+dV19GFH9aGTP9E6fAoxzzfObWHnh2zxe9JI
d1GmU5YybxzgZc4TzPyv50rcBs6CV7zXV3LdT3nmhyk7d0fqzLwdiWnZe/QD
fwQG5P6a5H4s5J58574w/q7OAT0coS6i2xur3ze6Ftry2Qyft/B9d3AcbxRg
+HP1I7x1dKvm/ch9+ip9VNJuelXTZmepZtyCP3m7kvf025Yv0g5nD5lXbI9e
96wmJp8p0hfQsYo4vpLlIj6xvJ5yyBfYs5rls+yX/mdzDoz7TtCs1eRh+8+w
55XUtTNtf5b5GapZniZo2mrexw8GPVTJ+/hZ58G5ne+a6fuNyL/p/r7pmjdR
ZlbHJX+ebdiz1yt5DqRveB7EJGe7H4z5cCXxCvvxUiXt7+VK7h3+5i/t9ODI
H1TJlPLjlbTDDue8rus9FL2qpD49XUmdG+waWR94AoxOjHBA5A+sJHaH94D1
KyrTWX9/Jf0LvmT/SvJp/4xjFvGD4+DnsPVDncMs6sy5nhN322buA3swczXz
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
cfJbBV0WNL6WuPryWuI0ysh8oFxf+Zfb5iP7uCLyV9YSt/e1/grzV8jfWvmt
lJ1bPjzqPjYdY34eZa4KOq+WdyT349ha6t8n6uE2tfRlK3Vk25U7klf4VX3g
BP3g1bX0n/PKu9p84T8j3c7x5naO9LNtrcu/f6Zcf/u5RprPvmj/hbLz2Bfj
gK+457jjWpG21xKvFPg88nXpWHn4GfidGP1o5TasJXbhvtyolngGHAOmA3OA
TTatJSYBf6yoDqErm9SSV2CXWsqCaxizUUvs3nAOzGV4Letfld+sdcUkpJRb
rgPeZrXEcm9Z7qwv9BybCRpVyxjovaBLahlT4oML3xx0inRqLf3o5rWMEei3
u3XT2Cd2eJ/2yDqxhW72g+wQ9517fbx6i24Tw2IDH5gW8XKk1Wb49kb49mbm
a0FHR3ntSJ+O9KmgdSP/bKTPNFK2qsx6kT7XyLpjGsmj/QZBL0b+haD1I/98
I+WGNJP3vPLI1oOGBr3UyDaUj7W+YR7esKBXIv9y0OaRfyfSt5VpBh0X+Vak
J0R6fNDwyL8W6atBGzUzpf2WHSm/daQjIn0jeK8HbdzMlDbt/MYg6MTIb9jM
MV+Sf8JU47Qrs2mkb0X6ZtAmzUzp91jnx9wercddFrR60JlBZwTNEPxH6lm3
WtD52jt2X2DwoAu0IWwA/R9WSxsocHwtyy9rF8O1jV62A2tjI5toJ8VbSy19
HrIbq+vIXqj8xrbBTuB1YvZezu189XRadfIiZZCd3fxF5kkvrqWNbK6dzC5v
Dnkj1fWLtQ34m9oGmxqp/XS++czpGop3pFrq8KXyL7GMbr8nvatcb9c9l/ux
qX4BP8Gdyn1zmutifWBvsDj4+2nL4Otna4nXqQMfg7EPj/SIWmIzeE8pu5bl
zvpnbEdfRwYdVUsc/4J2u7780lT9HanMc7XEgoz9vLKUX6ylvdN+1Y7sc/VI
76nlfUoM/ZI6hNwr6kzhU02pe7WWOkTdMTVjZPPH1rr8dc3ym+7jCOWQBx++
XksdKvyo6Ua2pd1xUkNegfeDrq3l3c+cmTuxO7E+uGWXSL+rZiwALgaLXyeR
nyiRH2BfE81zL21f64pbdoj8jrXE6jvVEq/vZBk+by2Dgm6q5RvLIHmdbb5y
DtfXErMv4DwoU/elY1TdO/aL8XdwDsjdYNtJtYxXKLM25rJz5BeSP8n8jUEL
K0P9LvInWcfe7Brp92Ke78U9rGtn13ija1rYdJB52u1m213taxfntKDzLMat
ZtxzWC31Gb1/spY6TgwNtsZ2TjN/ei0xJrYFTgWjEiMTnxeYu5Zl8Ot0tjvd
euJ58P0a9g0eh0c8T0yA3Bn2T9rD/Jnmz1CW9sQPM8infgbTs4LOraWvBV9h
r9gl8TM2ip09Y1tkiRnOruX7yozyzjZ/jvyzbYddEq/1dIyZ3SfGeFL+TLZD
Flt+Tv45toGHTRObr2n7J/T/+H58PraDrg9Qx4oYPNL9a4nDwe2kB9QSixfY
3voDlCGP3d1bSxwPZlne/L2WyYPfD4z0oFq+fxymDtDPgbUurP9f5SbXEp8U
cYPp8o51j30/4flyTqt0ZPxCjPBALf0y7eEdXMtY92F1poh7TNEv6g+pdb2z
kB5in8x3tUgfVa/Qr7+tPxTdcvwOy//Yx2PyCl20HWMfpgyyDzo+c+VzHD4b
4s0UIl+85Vbz8yDeTueLO75/PTEzKX6PPFh5PvkdMddPmVOkn9USi4PnP6kl
f4y8z2uJyQuMX8/2+F7eOje2vogR5OGv8dXb2e6LoG9q6SPwbXNH+3nqif/p
DwxPmf6vkjd/0AL19K2FP7QPePhA+F+qi9uZflVL3zdQGWTxgdfJ29H6r53z
F84PvWZ/BoTM7PXEEhdavsb9+8p2tJ++ru+pG484F/TkYXXlAc+M8yowdchO
W0/sTB7e+7XE6VvUxflBJ0rEL/COlw/W711P/HGJMicpN2Ndf1NX/yNdsZ76
9oQ695j616Ec8viut2qJTzZxvKbjvVNLzAQ2Ot0195Bof4b806ybzj0p8Jrl
U90PdBp9ftR5dOo5ZXT93VpiL8Zj/tjzCu7btPYz2T1d0XF7OIcH3feVPcf5
1Zmv1Ikv5Q9Qp5YPWi7oPvOk9wf9N2T+CDog8vsH/Sfy+5mHR90ykd4ddI9t
abeCbZE5MOiyoLnqeVaU/6xlPWd+qjpwn3O41/qDIv1fLcfc37HusX5Z0+XM
PxS0StDKQYcGHRb0D/sc6arW/VXL/g6O/Hph239HfnBH4v/VlHvU+IAy9Yfa
z0HOiblPVo9Y4+NBawR1uO7J8un/kEiHdKQs/AeC+tbzjaKICy2TJx78sJZv
HeDwOeupz+BldJu9e0edQB/m0B6xy4st0wbsPWoqG3rf8pzuPX3Oo2/Bz/Du
gV8bY1q8h9R8O6mnT3rXvtDFN7UN7AJMC34dKu9tbYb5XOScWNNHros+L7ff
y1z/eNfI+vooX8TIys+tP9zKPj5yflvLm0vb7+3a37ftB/azhXKd7fq5/+w7
82VPseVe9YyriveeepbJn2uZ/Ih6+nF8PPgZLN2oJ8as17O8YT335CV5Bf6M
dIN6xgkvyG8oP7yeGB3szz15oDq6UT15xAor1dPGJzsubZvqIDx8w9B6jskY
a4XOVaO8dqTD6tkHc+oW+e719I+j6+lfPwgaVc/z5ZxbkW+vd/lcUsrdbPf/
fljeSPXjHdfJeolFNq7nPrE25nq8cz/I9WGLm9ZTb9CpKbX8fJN3Qj5TXaye
n3sWb4nWwycOWLRuPBL0fS0x8w+1xNAL18Xs9STy4Giw9yTrf7DN9/LhDapn
nhRszmejS9bzs7DiM9ygX4LGTx962iP0p0fKLqJ85zyYF/f5t7XE/S3Xzh4s
6JxusP47ZVj3T7X83Jdx+Wx3iXrydnftrJm1M94tltmjPW33s338bJm6xd3D
RWx7k/v0o3vFGIyF3Dh5P1qGf6vr2dm54gPxnZzfJvU8N+xhM22Js5wp8j3r
icOJl4mTwdfE78Te4HtwO/cs9/NZtkGeO5l4Bjw6cz1xeE/7I49MEfO5l886
xrryF3RvGYe6dRwfm1vfvnkXWMuUOQ12PsxlJm0FuwPj8yYzW913Gf1DL+0Y
WyOWx65oQwyPrqPzw21Lm9m0Y+qIwfEn57i+c01nUW52x2K+jDHEfs63r2/V
LfAebxPEgKXgr1PPNbMe/tE4POq4v7i7wNn/1hI3g5m558AfBX6vZwpe4M4D
fzys3D+24z4Ek1DHPQdWoby5dxJnX6mnz+HtY/167jtnM6Se63nePg+x3zU7
MmYgLsA+Wvoc7m/m8oAy+Anu6LXruT7OrVzPN5kjXFOb6x1cz/oiJq5nik4d
6fyOsg37Qx8V+yG/Zj1li1iknulj9n2Y+7CuOsder1fP9VE+2L1mbes0842W
d9sH67mewn+b4rMLLBZ0XdCOQTvVE0PPLw98Dj4DP28f+R3qidvgbVdPHnXI
Xq889TvaD3cf9+Bo6wcqg7+6WZ+1o2120JaQucG5DXB+X041/kT51+J7g3at
p0/YTX+K/5uED9XH0eck8/AWNl/4yXq2u0n+jc5tYXnoN+vYyTkNdB3gA+77
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
WiPfWd52THTo40a+5Wzd9A1HWfQdvce24Xe3rsD7jbTjfu4B+128WzfS33yo
Pox2vafY/n31inPt18y2lzse82KcD2y3hes72bbv2Y59LGKNaL8qPqqU/xdk
jVLaUPHd9ob2WM/3gJ+j/EujK5bY0zK4Gpy4ZDOJ/BJNsXrQr420eXD475b3
to87bLdUM3m/KQcfHjh96Wbu1Z3W/64M9Usrs4wylLkvuTcXbBoLsP/Sfs6F
fV+2mT7zbttT/kOZTlnK+Mflmuln77Hdcral/r+NLh+6v2X8DfLLN5PutY8D
rP9TOtB2v7kn7M3izdy/25zbXc4P3ACO+qaRPpY3dPwsccLszcTj8LCBjeTN
IR8eNoD+g8t7N9P2qQerIzOneXjIXCyPdthDpy3gNzcxxQY2tU9k6RceNrmZ
48zlWOgzNoJO92mmD5rLevLI4Pcus36BoIHNxHfo7fvq7ruWRzoO5c2tR++3
sJ++Td8+m2knl8unb3jMBbvdynbMb7Rnt0Iz76Ml1GfOgrgEG9jTtIhTGvmb
6eP9XfdL/j6c35S/4u/A+U32SU1/f81vu5v5G2/q3g7arJm/yaaP4vfX7Hkz
f+PN78K3DUx2QqTbd6TMCY51on3y++43mvn7cNq82czfdVP+uJk+aSt+8+04
1J2Knwo6JejdoJHN/J068zy5mb8n724emZddB2t7R9nNlOk2ldw08t4P2iJo
lDzGm7aZ/+OO/4nH/7n7wHQL609T5j3bMafX3IONXOtJjveyNgDG2NS5vKXN
Y/sDtRds5VsJ/AwP/7BQM/H2Dbah/J0ynbKUweELNxOjT7Ldwral/vtGV/yw
i+VOTD+omXSjfexq/Q/aE7Y0wvJu9vGTesU7w6LNfHsp3nyU+cH8lEa+0Wzi
mdLXIs1sc7OyPypzk3Ohfnd5UxxjimPyBoLfuc084y7W9I2nmXWLOR/GuMnx
GGtrbQhb4g7jPpq7mUQe2xvczL/RAB48N9LzmonD4fE9YDAivFnkw+PvOIDT
L4j0wqZxgjLI9jJ/vnnSC2zH33oA3/P3HPg7DuB1UuwSTN9L2VntezbzBR5Q
h4eq88QGFylzobxh6uDs8i+Sh56+Ih/exfLQ4Vflw5tDHvaKb4Z3iXx42C5+
F96c8uFx3ujOpfIvca2sk7hkA+dNTPO/hvi/kfaBX8ZGVmwmRr5fP0f5fuX/
anTh74Msg6WRX6mZNNk+Drb+b+kQ2yG/cjPx9wO2o/yPMp2ylIkjwCBgkQdt
t4ptiZ3OVR+Q/Vf5UjO/p8FnoqM78jNjPhcGxxAn0NfqzYxViUU50xM9145m
xp/UHWafbcFbrZmyD9snvK0iXaOZ8Rtt+PyVMRn7cOdBebB6XcR+zYz1Hrf/
Qx0Dn45v52+DrKU9dMqvZZtPGonFt9aO5mkmfr5Se6L8qTKdspTB3MQD/ZuJ
zedtJv6+yvrPppKBP599zWv/8ylP+fNG4vxtJNrC+0I++a8b6Vd3lEcdcdGA
Zr7dXONcBjgf6r9UpoiDnD9vQ8jP30y61j5GdaT8FpF+1ch3nO2VBxNcZ542
lL9WplP2a+fGHcBdcJ1rGet6rnbNzLG3doQ9FTFiM22iuPvUHe4i8EYRfzQz
BXdMo0ynbHGfNrzbGuL0ZqbvWT9tsys2IKXM3QwWKfB+M9MPlKF+Ouk0eWOa
ead/0vTtQTtBZnrl4PH+cHYz7WI1bYOY/sxmvpPAW129x09g/9g8dWc1861m
BuUpX9lMPexn+WxlsKk1tCvSNbWZ1a3D1no6n3NsN5NtC5tlDk1/6+qbQPF3
dZppN4/bP32BvcHC9wTtG7Rfswvfk9+/mf4OjH2gcsjfHXR/M8/3vmbK/24b
+ry3mfj8PmWWs68/7Pte65ZT/h7bHNDMcRiP+5B79mbnAP+gZvo7/OQh6hbz
mGwde/6ne39wM+Xucr7EMgcrc5BtaYfvfaCZfnVFeQ+YX1n+g9JK1v3t+IdK
+NO/HfMQx2WtB7iWu923pV1jEQfZ/0PN9NFgQOyhwPqW39ZGsBnsBJx9hTpz
WdD4ZuJ9dB4dRu97WzeX7bCZ97Qj7AFboF0fZQpc3+z6P8l97HdL+8V+qLvS
ca9upr3j3/CH2zT1iZbxRVc1U7dp84k2Rj14C8y2W+RvDLqpmVjuE/0YcvPY
9irXBI+6CY49rzLUw2P8bZ3DNs5hrDITlF9BPURXiA3R9d9Nixg50luCbm0m
HiNGL97B6v6mvJHvYRBvYPymelhHvt/xXSZ4fF8cPu+wfF/jUfs4SBs8xP7+
ti2/7+Y32n/Jo463YL4zUnynvJHfK+G7KLzVwXvIz8j4fIzPuXh3Zhza8P2l
4nuYjXwz5TsdfD+E71vxna7O76CTR4Z1rehaeEtF9jFlDptK7gh5vDny/RG+
W3KE4/EdCN58+U5E8f3ZRqZPWV9Rhrds2j3hPnS+fRbfvann3h3qXBm7+N1P
I7/bMq6Z2BvduVmfgN4som/g3AqcH+me8m/xHH9Q1+hjd/vp7I/yFNM9ml3Y
fYp9dWL026TF1I9bzS/qeD/brq+2c7ltb29mvFu8zzRTx/ZqZr5452nmW80S
yt5hnvcH3sxnM086u22LeNl0L/tZ3PnRB284+LulzdP/nebvtO5O+Xc4t1+m
mh+28Kv3LP6CuxaMgm1hY/21/WuaGZsTxxb42PIG8ojVwfVztsIftRJXz95K
DA/mhwdGgD9bK+sutB3xPNifWJW4HVw/h22Ru9h+aUv+IuuRJW4H7xf3e9Dp
zYzfidXB+n1Crm8r/Rs+kjnM1Uq61HldJg/ZC5wfc+NtgVh9M/ujvKk8Yv7N
7bOP/RN3E7fjgxkTvRgvj1idPe4nn/p3bTPSdbEm1vmqe7GR62M9xC6HNcX8
5g9vJjbm/gcHcKc82kzcADZ5oplYgru/TVnacP88rPwjyq6qDPVHBD3WTLxA
X9t0JG+7jsTsRzYTwz/ZTOy9pjLUgfmpP0qZF9QVYseKPOqea2bcVcSozYxX
iWWPbubfG0T2Weup+6iZd9OWnvW0nvdTzYwF1rLNUfbxtP1RBxbibw8ea9/H
WGZeGzi355sZA65nfdV+jrFdzbUMUa6IfVupK2C5mVqJy8Dq2zcTfxfxRNC1
zeQVOD/SnZpi7Gbi7+ubibV3babv+l65L7TFic3E6mD7MbG/O0Q6tiP7v1b+
jvYJhoc3UT7j7uB8qGdsYg/eYbiPuYuLtxzL5Be0jOzOza43INKdXRM+gbv5
c/0E873BtgNd0w3mJ8m/wTUW70Kmu7pe/Psg59NZ9//vTvKucx8mum/zy1vA
lDGLd9lm2iW+4IxmYvrTTdGdeVqJJcAqYGPsBBspbCHqVg/6tJnxwdhW4vcZ
PeezzHPe2Bp2srrn31MdeMx+sR94nZid/mmDvc0sn/rn1a31nQt2hU2h/9gJ
NoA+YyfFG5BldJu4ZZZWvucUbwbNtG/8BD4Cm3/SNmspz9i0IX+OZcZhHus5
DmNjd+g570Loeq9W5s9zzF6OO6t8yvyNHP7eF78ju3HaONeghYN2Cto56Jtp
ws+0nFszU8r4neUjXaGVcQKY+c9mxgDwwHH3ySswtutcJepWbWWeFL+2kz4I
f9U5xqGOU3IszpnzeNh2q9l2yUiXanlXBv3W7Lor97Z8u3J3mF+ileV9rP+9
mffuMq2MAyjvax+/NPMe39N23OOLt7zjre+8s5duJRX3ufMif4d9/OqcfrVM
W/w0ayy3co/YK+KO1dXXR5Q5XLnFWjk+GKfwOUFfOr89nNND6hV7vWYrdRT9
/rtpzGWb7e0D2ta+vpJP/YBW+o7+rfRR87fSlslfY/3nttvWvhmD+GrlVs6h
iNtaWX7Ac6X+n6AV1RP0ZRXlkTvU+n89r9vc+yJ+dP7EgPfbx5/yD3T8fxxj
svWMP9l5PGB75nqQdKDtO1rpCx71DP5Qb4l7l1fPyRMLLxflmdvDroLOZY+D
nnS/PwzaMmh00LRBpwadJk0n772gUUEjgx63/Rr4GPulz2eCng1ah3kpxxx7
Rf15rRx7FvPnOv5TQWuBSYI2ChoW9IrphkEnBrWCTghqBjWCjg962fqhQa8F
Dbf9Kc5/GtueFNQedJztaP9i0AZBQ4JeMF3fcU5U/vWgje33BOua0vHyXnJ8
+jrfdc4a9LR7sbb886xjrdQNDvoszmSbSLdtpR0vqy3Phw63UofnizZXRzoh
aIegr4K+DvqPZ128jbTyfGn7H/3A7547Z44eLKcMsvvb7g/9wNKOv6/tqfsk
ymOCtm6lfX3dzDu+R5TPCDoz6HPWwPzb86w7Il0j6GPbbRV0dlDP9tSRc8yj
K+jIc0HrBn2k7Jbq2ulB0wd9oD5u4XhnBc0Q9Gkr70zm10PZM2x3huXT7es0
286g7DtBmwdt1hLXtNJHbK8fYY1bOX/w4NyRXhl0VStx86WtxPNFrGAZHRnR
Mq6w/Jpt+9l+S9fIZ2uc57ye6ZXKXOF6WBeYYGvLH9sP44MpZunUs1baGPvH
XQrvAvlrqV/cycjPrP6t10od5x4mRee5jy9s5f16gXLInyuRBz+sab/45XXt
i/v7glbXvb22c3racc9zroOte0rdZu1Xu3/EIxe30hY+1R6ucm9Y70ydetPS
LzQzFjzH+fVUP9ATYiDuZe6lXTrynPFVxFL4CdoV8WQrcfkLnhdnRTxU2HUz
3zNb5uEVnwu0Mo+t0wfti5gs6HLHwTe+Kx9eX9MrzF/Wyhiwt7x+8kerH8Rv
a7jX3H2btlJPizizleUiTmtlmbhtlOt/z3Hnck60Y/3Ek+PlM/6lpr3VNfab
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
PF9v2hS2VXBm0Pc9iStvsX5Ib/Zzh32Rh8f95289iQMWVA4Z8ALn7N2OxTi/
SvvL20ObZry9+1LX9on0y568ZxiqLaN3+FVsDZmdrAcr7KK/xdcSi5CCN8jT
jnuMbtsd9Q87WqafG2w/wjz2S/krx/hS3vX2h8z18n5zLb+6z+wLWIk8KWsH
k//sXhNXXtabsSW6vbn6jW6io8TPuzg2466tbYHVNrVNuVvRZt6yz0vtl/62
0A5nVB+uUCdmcNzLLHfj3GltX2KF3nyGW6hD2C1xFLHkj9YTTy0Q6Q89xhSm
Pyg3Uj24Q734Xd342b34Sb1Cp+bv7W+/h3x4tznuj8r/ZNu9HedHx0J2AeUX
6O2Pj5nD7c53+mqs2fva0VF+rDex3tm9iWPAMCfqI04wpVztzXONMw1MBd47
ujcxH2fdytYdzN8TjvTQvsRo+EOeG9hpXcsnB9WDamOM0es4JzkWuANfjP9+
xZT2DwY91CsGCDq8tx8vjmV5SeWWMv+A5bGtP6I38cQjvRk7UR7H+sN6E4eA
SWgHrri/V4xifReLPCwt7ZweMr+UfQxzTsMs0/aQvlzjYX25V+wjGB78tYFr
LrGYe1P0IdK9pB/UsVHOi1jnzd704xs5z7+c60vuPVj3tt7UsVvVs/nk7R20
T2/q0Pf6nj3lFx2OdI/e5H2njt2unh3Xa6xqShk8D0YCH4GdwDOrqB8lJlW+
V9njfUZL+JxedL60BwetavujbduNzSaw/LzjrO74x9sv2Gk12z9n/WpjzJU+
wHUbuu/ERcN7U3eJFdBx4gXsg3gGG+GukPfFvDcu34v25Hcp5a5wQL7fH9qX
sfwufXlXyO+p+R059xrcjfG9And8vIN+335OsS/eFfHOiO/B+P4FHnWMwTcw
p5k/zXbcC3JHyNnKXQ7fhpRvonsy5dsS7nbK98w9+b0y75x558T7H+r53oM7
Vr4loT3fS/A9M3dBtCWlzDtM2tGe95F8D1K+7+7JlG9LjnI85Mu3WQOy3/Gd
w3CJfuDx/onx6at8H92T34Z0zMPjbpF37zO4P8SCxLPlfq43z0Ps+FFtuXue
cYd2svvIHn6nHvPO5Eif9bi2W9a28Mv9SW/GjCv47Ef7/JdVT8a1fYlNHX8c
21PH3TDfkvDtyvzaGTZTfr/fk++iuXvlm5G3nWP5/X5P3pnSjm8/uIdF18pv
+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
voC1FexZSX+xkG2QRxb8MNJxftI3zuezvdV17uleEIN8b/l7y985J+Zzq/wf
lFnKNS7pnrCusSpJ3AWXO+RK4gpwDvEJ8defvcYlldw/8vdZPtj6vyzDX6yS
58RP7tWW6heY5nTtjVi93KkEXVfJPClx607qA3qBr5lDPjzqPne8Q5zjdcoh
84fzOch5MJ97faZguIds97fP9EH3ZWn3YOxKYsGxLbM35MeR/7ft/3JPllCX
0NVFKzkW+nSg+nWP+ksdvD+c2x/K/G67xWyL/+Ac5bzke3FwCZgOfFG+9a4k
jkIG2ZMrYtqgY4OOq+S5+5yyYJIeedQ9K29V29Ee3Mk5yBkIpjqjks8If8h5
t6F14Cl8Bc/zTGW6spQHVhJrrer8JnROjH0sf2c+0uP7xKXO+STnAe9Vxy8Y
2bRgZ1OwGd+sExcRlxxfSSzbIx0nDzxydCXHA1Phi5d3DswJrAK2wifjm59y
LymDr7Z2nf91TPYfXMHZtI1r/bfrPa1iLFZJzMnebCGPOjA0eAOsAdYCd2xu
mfrTleF3A2AVfmMwOtLHKhnD/a6POtB1je/a7q2kXt2jDPUHSX+oV+ApsB6Y
6m3H38S5Mj9iSjAS2ILzfiLXxNo+lseazwqa2PqJrD9L/ThdHXjCvWSv33MP
WCf6dUoldexN5wKuO64v+Sf0JZ6Ct6F9tuz3Q/d7a/WD2AS9ed7nv7rP/wTr
xl86fN2Q2KdIhwd9H/nxIr0k0kuDpg26KujqoJmDrrQ8U1An5A6ItL10yl4W
NJ3p5UHTm14RNEPQhCG3l2P1BO0d+QHmf4p879IpyxgzBlWi/HOk1Uivj/SG
oDlMRwTNyRhRN85C0X+k10b5uqDZgh4IejBoyaBngp4NWpV+Q+6IISl/zZBs
M6vrozxLUC3q9nXcVtBvrpExbwyaK6gR5V8jbS6dYzK/2eXvF2k90vuWC51Y
OM6p5bLdTUFzm94cNCho6pA7LNKpIh0Z6R1Bg4NuH5LlBYKmiLpDIp080kmC
/oz8pJHeptz8QZNF+WD5yP8d+Sl5thPHeRK018T5zHu195e00bXUhRPVhxfl
4S+2nS5seNrQqaBbh+R48w1J37uI9sQ6bgmaJ2iiGO+PSCeO9F9B/7iueyO9
j3ZBdwXdHbRQ0D1Dsm4ReZQXRueizbBIp4n0fp/lEkGjhmR5ccdkTvO6Z3cG
LWjKGEMckzaL2efYoSfTLZ3zPDB4A9HfSvqB3zxT7qvkuXKwPgHfAK6bt5rY
ruDcapY5V8vvfSr5Gx9+48KZSgquv976L5X5riJGrWSMOCTk7qx47gf9bD1y
4MkFq4k9B1eNKavZBrl9bbezfX/pWOWsr4gL/O0R8wVXDqqKjYO+ci03uZ6v
I/2mknj0xL7Mn9SXv925wTWBY8nDK/hzjLHmcO3kr3VsZHZQjjL87m++mCf1
v7iW7poo7xe0UMjdVcn9Wdg8PHD7AtXE7j+6b2DyEs9Vs24v6/Y2LXFNxXMt
6lc07mUuxFbEabOax0++oK/kPmIq7zRIuccgP7V5eC9oM2v6nHhet/uMeZa7
OTZz2NM5EmfM57NcSB3g+Y70GbMHv7oPd1dy7ezB/vKo+9R93UE92Nu9YP2D
3R90dD71dj7HvUX9+l4dY99udV57yvveuX7v3Fkf/gK/MHc19agb16AL8Mqd
XiXn+Jd48hDLYHjqF3ItrGkhU3D8AcogCzYEE99vP/RxaNAjlby3W8Y6ZEYF
HRF0ZKX/znQcy8sq/6hjDlGXFjIPjzn97LyxdWy+4Hb7L1jYcbo+4RBlCm61
nnXc41pIFzHPmljbb8YlRc9NS5zinJgPccy+Pl9k7rAO/sOufxnX02d5XNc6
XBpPHrgcfP5QJbE4Mcswy/AfDDq8khj9/2MZeUsrx5glXqzkXMAuZ1cS04xQ
D9AB/Ea5M6mkXuBPbpRHHf5kNm0f+zrMsZjTV8rhkx5wXkuqAw+YX9Y1jzZP
CsY7yvWybnDf8vLHs25813eEOgHvaPlHWMd60a2/jU1KXOLY8A5znodZPtT9
edhn8aD7yTx5l8w3iXxXBo4Hz3Ovx7fA3FFwV7G5v00E2+KDngh60t8sgv+o
a1fFwKaUwXX8HhYbxBb5be3s+q9JqvlczrLPlaqJK+FPal25T+UOt5q/vwQv
f17NO9RzvVOtBtWq/TEGKWV+U0tc8bJ8ePVq/haWueD/KJ9sfXfe4OUNqhkj
EaOsqa/Ev1aqiTnAIfzulriLGIvf3TJOiSGqmbJmZKvOrWpb+iixTDXz51fz
Dpn74lPi3Goyj0hXjnSVqnfW1Sw/6djH2X7VasZgJUa0TH6iqjFaNX/LjM8F
+59p3b+7+oOeoAfV1J8lqqlDS1VTR/5R75H9S/muXzvE8gPqHn3w21liiRI/
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
DHWMiX8t/rCa/Hucw72ORb7mc/z/mEse+1F1T8BKYKgSa9YyZS/AVuAy6sBF
YKIX7OcE+/rNPfpdewf/XyGRJybgLBnfZwq2QtdetF25g4r0g6APa+kDSD+q
pS8gBWfgb2app9+4Kui9oPdrefa+E/RuLWOCty2D0YrviTYzB72JHdXSXinT
11XKzGyeOGOGes75XcfYXN6M8t+oZV8bObdtnSf1V7jemczDu9K9mMn/p4hv
xEd+UUvfW3ylPHzrf2piA1PKXfxBeo68cyx/arvtXR/rx2eUOCnGnDboBZ5d
LZ9nF1tT93wt63j+yE1Xz/io4Bbn8N+gl2vpJ+jjpVrqwsX8TfVIL430RHRM
fXquljpUYpha2hu2eFzQ8bV+W+2x/KyyyKGTJ9rPANsg97xzpF9iLOx8Jee+
pnVPWgf/acdc2XnS7/n6P8Zk3tPXMz5jza9F+notfQxrfaWWPu9i9+US5ZC/
RD2hPXrxai3bry//Uuv+V8u4cUv3cyL3FJ39n/zX1acNHZO+1nOP2XdsBVtA
v7YeQyfoD5vgfEL/TmzGGoNOCFol6OmgZ0xXDnoqqDeoJ+h4ZVa2fkDQcdat
YrtVlT/ePicMOiboWMsV61cMejJoJfNPWH42aDX7Oc4xjnUeKyt/nP0z7pJB
DwYtFXRY0D+NOKulv4IODd6ooPuDFg86pJm8v5Q51HYPBC2h3JLmH3BOTznu
ckHLBo0OGi9o3KDhQUeaUn4k6NGgPuUfC1re/GjLRwWNbx+j7ZM2U8Wzn7qe
MSs2hq1RJl6fSj7/Y3VELeP+c4POq2Ws8oz2sKp29Lw6/6xl7IR4anuffYlH
7ONc+4D3VS1jl12cC3O4sGsXUV61nrj+8Vpie+4h/uUcLzDPXB+P9azg2p8w
/7jrPjpoAtc/3P042rqj1IcVbDehsscoc4zlU2OMZjy/VtAGQa9hT/W8wyw4
uJp6M8A+HnN85vO0+4WdHx10TC1je9a0guuCX+4i8AvR7xORrlhPX/GEvBXl
027CeraZwJTyMbYfv578Yx2LWGgF29N22UiXq2e8QbsBY7Qdbnv2nDhn+Xre
FfxWy3OdMvzl6v1j0+4x6xgHPAGu+DPoD9ODzJfzt5bn/6L1PP8LFqhnGVpM
PilY5F7b/WE/jLWCawHHjl03JqqLq+vi4kiXNk/ajY+QHaee8QrxS189245j
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
2l7bMPYNus489jy75c3sC7u4Tj4y2A52+IH2iG18qD1S9z/7v8a+t3BM5jMw
8mcG/TvofmySb+P68hmxb2MHjRN0eCPzPD+e41KunfIyyiFDO1LaHNHIb9oe
aeT+LGu+r/sdl3u5jN++PWy7cW1L3RHuNfv/iH286z6wH9xP4I/+rY/Fv2Iv
7ch3Gt4FNLJ8uukZ1pUYR363Dt4rjfSJxCivNdIO8Y9vNtKH4o/fbqRN4k9f
tZ42b8kr/lpZ5jXQMc90/DMtv249Y4AhT2oYm1g+sZFne7FJ849ZJr+c5cfM
FxtvJGbArrHFckY3EpeAT46Vf6zlgnmDnjVPuprtjlEGG1jROTxumfxwxxnP
vWu6p/9tZCxHTFZ3TSc30o6xWd4jYsO8XyzxRyPL5O+RX3xCPWUPME+KjfJ+
DRvmHRs2v5h5YpP97R8fUN7TKX+PbX637g/rKNP3Io57j/s1gXs5rutkjT+I
C/Z2n55zr55vZFy6urzV5b/QyBhvDZ/pyY3+mJP8KUF3Gt8S577cSL1j7051
L9nTl9zLEiOarmlb+rjbPk5V/lF1AQy5iP7tbtdzlOt70mfKs7wk6NJG3m+s
af/EoeXOzPrVXQdxwtTyp5FHG7AefUxnP9Ob5zwGR4DNBrk21kh8sJbrIu5d
2zpi+Mtse6ljXGKfBdNGOnkjz+tPxKrc92Hr2BT2ByYC55ymL6AOWwRDvS6v
3Gc20laRfUNfcqZ+EfvmvH1LDPCpWPgc8S/zOMMxB0pnOhd8E36a9qwV30Dc
09UP9AXMCE74NmiKhvFaw7uBoKeCjmtkbD9APjzi2acbGbeW2FaZ46x/Wj7x
LTHvCY30I1V5JcZR/hn7oc2q5p9RrtvuePO9jnO8+ZXUH+aKPfwoduYsmcj9
AC+BlcBRYB7wzheu81z3kpT1nyfu+sxYAeyE7OfWT6nMvxoZ555vfqoxytQj
BwYDf5XYsZHpl8pQTzuwIJgQLI/PKPch5sEc+BpikeIrXCO2/2PQSNsPbiaR
X6DpPgT9JO1ju4Lpon6eZrZdMNI7Iv1Zma4s5X3tn36RGxJ0Z6Nf/hdlunXw
v2K9jVwrY93oeF9ax97PEuVZm4lJ3mnkOYqewgMbXC3vvUaer7PJpx7e+43E
DmCIa6yH979G4phr5c3eTN4HjcQg8OFdJ+/DRuISeHPI/8F928v6jxqJZd52
rtjinsohg/5gf+eiL43Um2KjptsrQ/150hTyStzTzP04Rxn6Ol+Zruz56twX
jdRFdPlL93Ko9Rco87n1O9r/LO4z5xrPDiy7gHpym8/qm0bqKc8LvbhZHv5g
N3nzyof3XaM/ztzdMjEpce98zSTytNnD+u+lPW2H/PzNnMOttqP8gzLfW7+A
MjwfMOh1PpOPG4kv526mjhH78P/d+T/tT/XEPkZ6btDk8vgf7E/3JO88+fD4
f+zP9OT/ROV/qH5s/RTKnG8e3pTmz7cd/8/92Z783+/8r/jnezLlf8e/0JPy
yF7Q6/8sDt7pUlse/5/1A/4Xe9B6kX+F/9EetG5vpv8NqkS+GnRCT/7/5jf5
/9w9+T/jX+N/bAet35sp7ffrS/kDuAOP9CT+p3ZP/i9Z2r3ek/9TlvQ1/8YF
Ml3Zun/vgv8//VZPjsdaWedz7u057i9rXTvoxeCv1JvP4MnIf6INbO+zoryd
vM+0jfI3Y2r5m4cSB8eznKuZ+estz+lzn0M+9SPU8y/U9S+0h6H2/bn6P0jd
mNt+57Zt+b1zNf+GDD5pF23p0gFx1sfcp+/J/6H8n6BJevP/484cNJPPbKDP
cuLe/D/TyK7Ym+t/IvgTyaee/9fO/0odbZ7/4f6obc+2f/5fNf/n/bGeHHNS
+SvY7+M9ud+TOqflbDPaZzGpz+Nj93hb93t7y9xJnKNvKWdi7MPEQZMEndXI
/KbN9HHEDZsb27xj3Vm220L/Sx082p8d6dbN9Kf42s2a2Y6+ttL/4pu31EfT
fptm+tYP7GNS+wEztpqJNUfxt9CJkSNdu5m4E7wJruCcL7/vavi7r0ZiCLAE
v6sqv+GSt7Kx80rKU6ZNRRlkwRbgimrk12lmzMB41JfflzXyN13gkacdc1XH
pb6qDPcSjH+s+3Wme71xM2M24jDiO9bXbuaZzm+5Dm7k3eKohjFEM8vkl5Bf
7iSVpc0hjf7fgd3fyDsF7hOWMi4mD1740zbcPxw6hjz90uZQ6w6z7lD7RmaU
cseNsa/HuE7WeG9fYoD7Il23mTEDe7d+M2PREr82M6Vug2bGsa/6nNvN/riX
fEc6Q94mzdRH9m5gM/eSPd2omXtZYtZmpq8pU2Jq04HKcyfE8ye+KLFaM/eY
uIlnupo6wHOsNb2ri3RGaaZm3kO+7JrWdQ2Mub48ymBr2s6o/GvOcQPXwFo2
lsf8ibfpm7tO5Gc2D4+z+0p5b9ieuKFgzqALG3l2c27jvzivd7OMbU7U6Me/
xcYb2mHDexfTza0/WxlsEkxU7lBNaYP/KHebzmFK53FXX7a9py/rkOEelTMa
P1TuZU23dn8uc3/ZD/zEJuoN+1viLsvEYTyj1ZsZqzzrs6Jcb3pHYUqZOHaN
ZsY0z41Rd6J9rGE/xKnINqK8ZjNjY9qs1Uwf84Iy1Dcdq2H/+CX8FHEu94Bg
9P2cF7qEXwBjgbXAxKyT9U7fzGc2lfsHJgJL7SH/Iuuedw3MC/wEjgJ3EeNO
28z48xLz07lW5ruGfHiXymMta8qbXv6L7u9azom5wcdng8HBt6f05PnP370q
710biR/B97yH5J0icQj3kwdFHwc2M6VMvsQszbwfvaeZcX+5K7W8sHvULd+r
zG+2px/ii/2a6V+oX1SZO4PuaubeUr+/Mpwp2zZT1+62f+QOsF+e1UN9Kf9w
pDtEumMz8ciNkd7U7McJYI4R9rddM3V5+2a24VzdKdKhzcQZyN9oW/qjDgxS
sG3Q7c3Mk4Jl92omxv1/PCxvLse8UdmRyl8fdEMz8c/eQfs0Mz7Z23726uow
umt+LXWavtGv74N2b6a+4Sf+Ffmpmv1+hJTy1EHTNFMXb20mJkcHz7fNBV39
Qm+Cdm2mD/pKfbxUndylmTww2W7NHBO5qe37Qqk75h3NjDFH+kxL7NnMuHKw
9T+45m5MS7qPMneoFwuaohv72g+yJeZzL2c3ZT8XU6/uU1cWsu1P9r2vcxrs
s7hB3ZjDZzWnPHQE/QB/rdEKHxP51SNtBp0S+UakzzeTTz2/W69FelKkJzcz
rbeSR11VeWTXbGX7U5Tld+qrtfK35shQz7Nfq5XP/wXl6rYrv2tvZZvVnduz
jl93Dt06+EcEHR40Tit/D75sK3/fPXYredSV36xHfmlpmaCHgjduK39PfoSE
PLy+oIebKcdv0vlt9Eqt/I0zv4keEPkJW5lSXiHSFVv5m2fmQFv6KL/Bb+X+
0M/Krfx9+5P2R7mnlb+xp2/i1lvUYdJbzd/czNjgJnV1V/V1HvnU36b+0wbb
wY6+1a7nsx4fsHMz44+bbDu3PPr9Uhv/bgxbJKXMmNjG1/oW/MrH2gvjYTNT
Rnp+0AXNXFNvy79j0Mq/YfCUvPJ3DFq5B+ztiu7tAPdjVeVXafX/fYRV3c/j
3dOvnPPO6jNzwe9V1ckT3O9VWv3jVpzPPO4Zezx50BTNvMvAX+JfWRv8EoNE
+lkzfSX1nzfTZ+5o2/Ns/2j46HMifawvedSdG/RhM309MccXPoOdbHe+bf/X
zNiDmGNKedSxDvQdnPep47P3HzXT12/jGIzFPD92L6j7RFnK2GLBG83EB2CD
U5vilGbaJfnVLK8ubw3bnmobeC/IJ13TPLj1383Eu/+2fGbQG83EvmDeN5sZ
V2zkXE6xz4ltd1bQu82M5Tazn7Ose7uZ8R74mnde2BjvvbDzZc2X92jNtONh
5nkPh53zrm0p68Zp9r+bw/bHtc+H7Zf4g28piFVKjNJM/0GfJe4wHWb/R9rX
Eco95Fg1n9tJjjeWc1rG+TDe2c2MJ9mDD5qpI1tZPsv6t1w3e/eOe7Op7f7T
zFj0P5aRf6+ZcS/7SKx3ovPAjvCX4L0/xEEH2/Yc+3m/mTq4hfNb2vWwrqX1
mejHavZVa/afCdc28w5zVtfAWsDjm9sfMXi52wu6RrpW+U1c01ueffRznTSb
chsrR1yxpWMQHzAOdkAcsIXzf8+xZna8Td03sPtm7s07ylzjHLBncNCnYofz
9WfYKriJunP0C927UVJsFZvGpyKHP8KPftH1h8pyJ0CsDpYFi1zeTDwL9qHu
RbHKZfLPs2/62Mj1E1cRtxKjEnsQt4HXr5BmsN9XlEGW2JJY9YygR/oyjuWO
4mXry/2BKfPAbgfa7nTbdWPdM6x/SdkSf5jiC/At+IrTgl5rZvxMbP16M33A
Bs6B+tF9nvvq0avKMm/08k8x+4yu7Urr6aPErpaJZS937dO7DtZFPHaVOjCT
47OPxLL0dZV8sBSYCszOufUv9/xq2yI3o+PP5Pj0Razcco/YH97hlPcR9cQe
xT+Yji0OKd9qRX6JoL+b+hn58O537djmn/Lvsw1EfrFW+iD+ls4/tlvStpwv
X6qPf1uP3B/2R7/I4tPud/y/lfnL8sHd/ZdX8Gm0WaiV5yXn5ryR/ybSb5ti
gmaWwQiDom6eVuIL5sI5jU3MF7z5W4lPvmsmxgdf3GLdrY7FOGDbX5qJrfeV
fpZ3i+PT5lv7An8s2sq94TkyPvNkDge6ftb+a9BvzYyp0P9X1JVX1D90Cn1G
v9FpbHGGVuoXPOxkbXkzykfPX1cvio4Ef+ZWxhbTt7IPeOjwjJbh0wfyV1j/
qn2trxz8yx2TuaLXJW5r5R4ThxI3LtJKIr9wK/fsV9e4sPy75O3nHv7hvvze
NN5t5f7d4z7e61iDfI74f3RmKfcYPUTm8b7czyf6si/6PMBnuLDPcV6fxTxi
NnRlF5//D83El3yzzHe9j0jkyzctjfxOk29Z+DamfEtserh1DyvP98B8a1C+
FW9kn+UbrEa+z1/OfJ9jUFd+B9/I73GOtO04Uvc7msPNj63cw47F78H5doI7
R945ctfAPQM+YF/9QPndufXwy/fejeSPVJ77ivLNViPvZXiXyvfhI/uynzv6
8nfQfHPBvSh3pKSUuRvkznVR++Gu405pQee0lPNmzuX3/u4h8y/3quZHWV6g
lbECtkr8+lPTGL6ZZeJ34v3BrYw19/I5/ihvQfn4DOLcBeWR78rvaRv6YSzG
3NdxfnbMny3jE+6wv5+cw4/Oj7a32g99MD44mHOauz3uhsvfEDAt98l1f1fe
SH63Dt4onyl7yn30ku7Pg+YfaPT/fQR43KXy/Snff3b1kj2+X9klnMNhjf6/
lfC3zwCMTrzC/Q82sat2cWHQRc28a8Cn7mYd/KlbWbe7vu8bedRNFenQVp4B
xCjlLGslfypl4O3RSp9J+4sda5pWxv6tVp7fe7bSPpHbuZV+/AvHmsY57OYZ
UOxZ20Zu11byKIMtJ2slvly3lX4Mf/Ykf6ObGC/S9Vrpf6kDFzA+81inlbL4
XTAH2GNg8DqtTCmvr998xXEKHo50y1ZiWbDwVq2MryhzVndsu0Er/e2r7sv5
7teOrYz3iLe2a2VM9ZH9T+5ayt+Ui/wErfxbZ8T/xP7LtfJvzJW4pJVl8uO1
Up6/v0asS8yLPO2Pbvb/TTbuFLhPKPFNK/ugbYlTTMeznwlt253D8q2cB30N
d35rt3L/XrR+tHMk9mr6rJ/qy3U9E+kUrYxLiSm3beW6S/zayrTEKK1M2dOd
Wqlr7BftpmzlPk5pP/THfQ93PcSLJXZqJi5C5l/K79DK/S4xaytT9p11jXbu
3MUQkzyk/vAswZAbtTLOfN02tCXmnauVd17lDqyV5RtcA2shbij3aq2s/9Dn
vI3rYV07qgeUu7E/dkBMwPlI/5zH9HOdfc3tuHO5Dtp3Y3bmt63jzul8mDux
MdgUewMTlbtPU+yfO0f8AXaHHf+r2Y9VL7Su4HCfOXZ9STPvRvGz2PJercQl
s7QS077u2GBZcMjM8qd2nIulaeT9z70rcZdlYi3iU+JzYjNiKXDzrNHXRK2M
4bHdTVspg+zGrVwvY0+sDLKbtLKeOuJY4t9JWmnP/5GHPDzqNmzlGl5zjIGO
uXkr7xGIlbdopQ941/bd/jZrZT1zwufgb9rOZWL7B+uAeZZ07shv6hpZ32yu
o6xJHmufxT0mf5XtGJ+4c/ZW6gnx7HvuIzErfhOMPFQduk5ZxmKca+2DNpvL
m11+N8bAtvYfP3Be0G9BdwfdFbTwBIEp5O83fq59c9dfnjlzdT2s4VqJ/DXy
KV9nuy3cX/znhvrQgpGDrgi6vZVn8fzq20yOUXxR0H/Nr6Nvmt629LGpz6bo
k+W3fNYb+bxLnBL5Q4MebOVzWtLy39aXWIrn18r8A8rgT/Grj7YyfrjNeZb4
wzLjbKxPmdm9mcX0GvPXuD+zKLuJujCDewB+P8z5HOpaOf84zziz2DvOHc5K
zlHOS7A2vuMm5wJuvsW5zSsPWc5+zl1SznL8BClnNv4DX8oZht+5vpX6NLs8
/DW+7Ab51OPP8e8f6JPg3+DYjAtu53xnrpzpN1s3j2vi/H5ZnbzOsa70uc/o
s59JHrKs/xVtk3Manb7OucwujzP7ffeE/bjZuYNv8MGk4BJ88c7O70vlb3Zu
VzjmjOoC8fMo9WFxeejKn+rTAUEHtjKeIX4Bb97VyniI+Oheifw9EvkSY1km
T3wFdt2vlXgUWxjZSv+7dyv98b6trEcOncNm5lduAcs/6rtpQ+x2gHO7y7nd
GbS/dYzZbge2CTo9eGtHuk477e2MVvKoWzfo5Vba4HqRf6WV5VfiHD0z0hf5
nynB3yzo7Si/GvSaz+wX18SYC7nmhd23Em/Kv8u6V2y/nmthHftI4PhuvHBH
y/jANZHnvuSIVr6PwY6GtRI3PNJK+13G+iOVebiVdfD3dK8587B7fAS2jy0e
Zj/Evwe38tmTlvsB9QPdIMaFf4gy91kHf1zHZGz0FPvhLDzCeR/eyrvSh53P
YJ8r63u2L3Xsub7UgRJbue4hrv0n9eNn58TciK3Rw/ucw6Lq4n2OhQ98qJVn
AesbZnkp13+4cxtLGjbGPB9yrugLeoHO4A/Af2AiUnAw+OWElu90Wok/j23l
O5vyXivoaeuQ6TGlDe9dnmnlO5xVbFewbivx7FGtxKvl3V3Q6JaYOugJ+fDA
ro+1Eg8uZ7uCh53D0/Zf3qk5lydb+Z4J3P1NK30ovuzioEtaGc98LQ8/MrV1
05iWmMvnfqRjYRP4cOyCeALbGei6jnNPnnDsFZ3PAOuecj5POueV5I12bazr
u1b69N1d49Huzwr2S5/gFewa+y7vVINeDHq+L+dEbIUNYn/46Ved73rK0A57
f72V5yvrKe9tg04Netbn9Yz90zf48qRWvovlPRvvYZ9r5bvY1WxDGT3izOOc
f9nx13HOLee9gs/xcZ/bMz67x+WzF+gHejKBdLQ8dOrEVv+71Yrl1Zwz8yC+
Oc3xTrPMul5yXmvJP12ZF61by7HGd7yL1IH/j6PlfdnKs4ez6ONW2gi2UvBq
0DlBn7QynqHu3KDzWhlrvdCX+ZciPb+VsRCx0nutPBfBWQU/B50V9GYrcQbY
5P1WnpFbKDNwDLmJ5b2hLM/1w1ba89bOaTLn+L9W+q8tnR/z/FgMMKJl/BR0
o3nSuc0jC84gvrlJPvUzt/O859zFjvHV+OUPHH8r92Ey5/KRe7aNvHPdH2wM
u8bmOIfAgSU+MGUvzna9Z7meSdz3gr9iHjMF/dDKs4AzAZ1EF9cxxTbWVR5Z
5nyme8meTttKH4CP+LaVtojv+LyVWAQ89YXPn/IF6gYx7Vet9CXox1TyLnSc
mR2rxH/u8eXO+QrnuY5n9cSuk7V95pjs+7vqyGbW/0eZd+SxX58qu71zK7G5
6QXOaVrXd2nQ9+7THpans578ZZZ/CvoxaJ+Y2+B2nmtgFeyoLfYgLXbXTntr
tjM/wvXO1c7n/rHPfoS8udvJw2a2k4f8nO3U4Y/Uk4IxgzdHO/PXWsYn48s2
cH/ec4/gYQ/YQsHyITtrO3nYFXaCfjLG1rbDxrYwxU6wkXHaecYfLo3dTh5n
Z1879XxcZbr8ZdpZt2w77QEZ/Dc+bsV2nvO/tBJXsRbWdL3pnObndB+udy7M
FTsquCnqhrRzXVe5NsbkTF9aPmu9xnQ28wv67HiG9DNS3j4+45/tn77vtMxc
u/htb+XArsQl87fTRji3sJN52ukXBrVzffvaB9j8Jus5i2nTtSlsaSf16yfH
WEA9u92xGGcB18FzZy34BHzEJqbYwKam6MFm6gfys6mH6NqN6hp2sr28QfJZ
B/awhyl+ZE9T5reX81nAudEH9rmDOsWc8FHowEPqATozTL0Bh47VzjIYlVhk
ySj/FenfrcSdS7STXzBpO8ujlLvfejDqX63+ePgQ2/8e9EcrsSbPcCGfI3gR
3LhYO/E6evdrK/E6uH3hdhJ52iCH/KKR/tnK8cCk/+3L/l+OdOaB4deCrgq6
0pTyb0EHBO0f9EvQfkH7Bv0qj/LP8vYJujpoloHZ3+EThR0FjT1Rznlx1/6X
c/jTtTA/6oZ2wtcGfdHOdJegL9W9X1v9cQv536QD5LH2RdoZv63QTtsEe4C7
JmgnBli+nXVdTAJvwnbWT6gMtj9eOzHiQu4he961/0d85iUGaaV9ohsPyh9b
fViqnXXwj7DfI51LwcnqKXaErhZc3M45kn/U8u+u8TfXyHNlnQeoHwe67kVd
+6I+63vUpb+dJ3SYvAecH3PjjGZerHk5/RvrHN95DpfGk/eAuruU81ze/cRu
sP/ueQqu4kwtcXzIzNsWY0a6RlAj6OQo100pg1nXbCcGfn6MOrAqbWkHH9xY
bSdWLLFC5Fdtp09eqZ2YnPoSs0Ta0zbGMaUMhl+5nZj9SceotXPM1dqJPZ+x
n5pjTR/pDO08R/dt5/n5c9t4POiVdp7/V7YTI9zRTn88WBli9ZfVPfSN+Wze
Tv+Gn1vVsZ9xPic6p9Wdz2ru4bPuI5hh0nbihhJPtHP90MruA2vtbffHUaSU
J7H9WdLE8rgzYC5v23fBLe28T4CHT1y/nXEI2GuLdp61rGGDdp7f1K3lc+R5
ghvAEuCIF63jboM8afd+g7uNgUEbt9P/vuGes9/gl03aOT51YLyJ2onzVvE5
smb04Sl5x7vWivxV3duKunG8OrWmeoUONtv9sRMpZe5VmNdrvKdo57xed/yJ
ncOG7eS95hpfcJ3s7b/d36rP9CTXM10717dHO88qztESp0R5mqBd2xnTgkOn
aie/G7dcOIbcxfKGttP2sMNd2tkOO9y+nWckuGzLduIhntmrsZ4pmTfvjtqJ
28HzO7TzLPzE8mTtrP9XOzEn+HPHdto8cju1c0zK2Pl87bxbZHzmv4spWGFX
50QduBpZsAfyN9ue/PzyqQcPgYvA3FM5B+ayczv7Ys0XuEfsS9fOj9EmOAvw
+6zlP65nq3biMPZim3bixhLftDOlDj3cRF0s+Cvo2nbmSWczvc78JtoJOoqt
YyevaEeTaaf4havauZY924lLePbTtlMfwPF7txOf/KCeXKKulPjG9htpJ+ji
Xu2U/d55zuJcGX8DbXW7dj5/8DfPeYp2xq7btpP3obwSu7UzP6Uyu7dTN8u9
SzvTr51zuWNxTle7rqudw8zOYxZ5zAU7wUYutv0l2s5G2g/+vtbqv58oZ0Qr
7ZPv0rmjKLgv6KZ2rmt714Y+7KJOFD1Ch9qZn8fyLeZvbmc/c9nXluoE+gBu
v6GdmL1gecvkZ7e8hW1KfGL5Xe1uV21vqDr6hTYyVDt5op16iU7ik/BVz7Q9
c4OObue5+rgylCewnjP/oHbitoJ3gu5tpz0yxmfaOzb8ibZM3afuG3s2yPRm
8ze7J4PcA2wA/S9nu/Ng/SPckxvdN8r7tROf/ey8CiZp59wWdn4Fp7WTf4/8
uy0j/5vt97U//CG28Z26t4f6BwbmPL0z6LZ2+gj8wwLmb5fmt34R92ZR5/Cr
89i/nemv6smt9sNzQ7+/1g/gFz7QP2An2MgI1z6n7W6zLe2YK7bBfuxv/3e5
VrDkEOd+l/m75O/vHu6n7MLyGRP9xj6PUQeO9pmA1UarJ8vJI14Ffx7RTnwG
Tnsw6HB51D3czjgGbNpn/hFpGevBiuDGw9qJy8Hno4LeiHPi4EjfjPTQdtb/
7XOHj06OUv4+9/4+9/8h+2bcsZzT2M6PeT4QtGXg/fcjfS9oysifH+l5QZNH
foqgc3kmkX7Ic7EOHnXgFuwQ7PJRpB93n1k7yzzDYY79/3hY3lLOb2nnNdYY
/AetO6SdcQsxC3tyf9vYzrkvYbqkeZ7Xse3Eefe5J+wDeOz4duKSp4Kebotb
2ukHyGNv+IgVfObH2M+jPvMuPgeT4y+ILYZbHm75SGWXU364suM5/gnOATvj
/ODsqMijruBo5ziO+nOkNK68xdWL+92bQ9WHQy2zZ33Oe1nzj1ge4P4c51hP
uXbyKzr2ANd9rOUV3Zfj3McBrqVHXonjg0a6Js7RH/QtP+lfwHinthPXnWr5
lKAz2t59mVIGjxZ8GvTfMerAsyUWCXoh6Ll24vESN1gmT+xwUjsxfMGe1p9k
3Ynyn1WeGII4YR3H/a/5gp8d/62gt9uJNSo+K/p5PeiNdp6lpG+280ydrZNn
8KydtAn8CXbB+Y59TelYa7nOF82v6f6c5l69YF0Xzzete0n5F13Xye3+OKpm
eQ3br+leN6x/p512C2b6pJ3nFvMrWLSd9v2R893G8hTWv9tOe6d9iWWC/uM+
sAdgjbf4+6iMI34/s51l4rT13GtkwPFg+9dsB2760DE5B8B417iX5zsH5vKB
9Vv5rF72eZ3hWB3Xjm4875pPdg+el4+uDFSWNq86PvPDD27hOlnzZO4LePIc
y+dYZu34zi1tc46yyPzPOVK3dSfnDQ8dQZ/Aka+5d6z/x3baDjZU4ougS4J+
amfMS92lQZe1+2MY8pdLM8j7up1nKpjo7djfC3hufXm/AxYCr3zTzrMTuc/a
iVXALBe2E8+D8z+Vt739Tud437fTf+3h/KZ1vvgBfABxN+ctmOEO5838u3ff
+AP8wkjrkZ+7k/iGcx57xSfjm7ExbBab+7adZz3z/s7xd3dPpnUuP7h/e8q7
1Hl/7rpZ50Wu8ULnPbV7fZEpZWwdO8FG0D32EJst+DTmOlcn86QjfK4f+LzR
29k7GZ+UeKWTZbD6LB1xeid9A/kSl3SSd6V5eNgLermeKbqyvuNgJ9jArPqZ
q53L3M6HuV3vXH9p533Jfp3UkyvUlalcM+vlvm9n9eMrdWdn57BetFs/aEgn
nyvPDD+AnWxuig1s4Z5Rt5l7MIf7QMp8rnNO18t7373DRmb0DpT7z606yace
HFLsrpM6w1kzuJPP+kef90h5C3aS95N6Bw/5BTqptz+oGwV7Bm/+TuZvsYyv
xidu5z587V7Awx6whYLlQ3aeTvKwnx3Uye/VS9phY7uaorvobW8nz87jpJ5O
8jiHV+mkzleU6fJX7mTdqp20DWTw6/iyNTt57v/TTlzFWljTbaYLmF/AfbjN
uTBXbKfgqahbspPrutG1MSZn/0ryWevNpvOap+0o2//RTjx6oGX4i0f6dzvn
ByZ5L3zQXzzTvmzLmA8494Jh2oldiVUW7SQux1f8Yr+/t3OchdTDIcpQ/6sE
pof3ZzvHAh8v1sm5dLExfS/mOnjurAX/gH/cyRR7GGqKHuysfiA/r3qIrt2h
rmFf+8gbIv9ex77P+Rzk/Bd3f+6T96fz/Nm17KtOMSf8FTrwpHqAzhyr3oBP
B3SyPH6kE3T641hSymBaYpQVOknkl+8kkS9Y1TJ5MCJYcdkojxM0bicxKM9q
KZ8XWBQedcPUu7E6idfB7Ut3ksjTZrjzO8p+6b8v0vGsoz/uG07xzuE57x24
c2jIo+4F7yKoW9M8vPKeVNlbO/mc5tXvcG8wm2OM65iPuubRzqtgePnMbzn9
E22vUz9ZXzduIT+2dLg81r5MJ2OtNTppm2AMsFm9k/hj9U7WwQeLwGt0sr6h
DLZf7SS+XMo9ZM+79v+0z7zEJp20T3TjCfk96sOK1sE/3n5PcC4FG3cyDr5T
eypYuJNzJP+M5XFc49g+X57rMvLGUTco97n2Pp/vw+ohOjihdIy8x50fc+N8
Z16seTX9G+usOc8Tpaq8x9XlFZ3n6u4na1m4k3H8Xa6J8m9t7wSCNuwk1uIc
/R9/DzzKH0Z6VpQn6SSW3aST2OxNZagDx27USXxPe3DmwE7ixhIrRH7dTvrk
tTqJyakvsUykrY6xjyllMPzanX7sDz6eqJNz4rzl3H3ZfiZyrBGdPDtvCNqi
k3E7Zy8p5yVnJSlYk7NzLuVHyCOG/0DdQ9+YD+/68G/4uXUd+2Xnc6Zz4uwH
fzCnDTq5f5TBDtN0EjOVOKOT64fWdh9Ya7vTH0eRUv4g9nSqSD+KdNtOxhtg
mqk72S/YjPeS+GL8IO8lmSPlXTt5vjLv7Tp5ZtO+xCmdvMMAl0/aScywaSfx
HM+VMliC+s07iVXALFu4l++6poucyw3uIVhlx076Zc58MOG/OokL1/E5smb0
4SV5p7vWjvx13duOukH9xp3UtTfUwUk7/THV2a6BcUrMGOkOnRz/E8efyjls
30kee7FZJ9fEmnfq5P4xb9YNljrXtW/h+gtWDbq+k893Q5/xNZFe20mMCW8j
7QfebPLXtw36AH69Rn6JRyKdMWjfTp5tnJNgdPRl2uDt00keeG23TuKkr5Wh
fjrpUnkFOzsG/YJjGYf8TJYX6SR+uFu7x/4P0DdQ173/hPe79b9bXtS2yIGB
wELgafQaf47v3r+TOPrXrl2wV53E7MyNOd7VSf8zpNNv89jc7p3EXqxzz05i
xRLHdDKlbnrXO536tpM6V/BX0C2dzJPOa3qreWSH+ryxdezqQ/V5Wu0Un3Bj
J9e1ibaBXZBupp2Qbq4Oza5eoP8l1rH9Ds4PXbxeO5nDuQ1yroyPfWKbe3fy
OYO/L3WdxJJ7dZL3vc/yMvWG+hmUQe+wE2zkOnXvWnmsAfthTje5rpucw9zO
Y5A85oKdfOy6ZlPvt3c92A/xB3HIFUEzBF1u/vugPYP2GCjODPkDgg7sqGOd
1DGe+93q/H7q/T6W0XXw4Z3qxt3K32Vf9POrMsQtd9gncvd0cg/3cR8Xloeu
LqjsndJd9k9fv7T7dZaU8nOdPGufDTqlIz7p5FkKn3rwwomd/nOX9CRlqH/e
POkatq8rW3BQ0COdxAhHdhJ74f/wiy8HvdBJu1rDNifZR4ldgm53/IJbOukf
sB9shzOLMwD/Dy4Bjx3uuIwJBhkmj7oSZwQ9KD3USWy1pGXyRzjXsZ370sp9
zJ07utEn3lP2SOWPcNylbXdYJ/Eiscww84fZ19KO9Y91Y7nOkZ2Mz/byGf+g
r8Av4BPYk/ncl/lts4DPfLDt97Q9djRSPjLo50Gd9HHoy73qDOmi5tG7A5XZ
w77wR7u67/jkZ9WNVX0uJ6kTz3SyDv6TQU91Enc+3cl4hTK49LiO2NQyePCJ
TmK5xy0fY/1Ttl3Jdsfb9mhlwJSrKPO0bSewrldZ2qxo/0+Yf3KMPgc41orW
U7d72Pa3kX7TSTv/rpPlS4Kmi/Kl1IUeTENdX/Kom1bf8H0n21zWSdnpB6bM
9Lal/gf3l/RHnxnfeR3IN18dfY597DYw5/J1J2MSYpPREvlHOxm3YFvDO6n7
8ND/0zvizE7iDXDIGR3xadBL5te0vJa8tW17hm3g/Vc+6TrmsXV8BzgSH4A9
r+H4yzoH6k9VpmW/9NmURx02yH3BA85jTftqWn+aa3+sY8yqvpA/qpPxG3tw
pHvQjfGGW/+4OrC8skerK0dbRqbcu3RSl1cxRZ/xO/ifXul4ecv5DB5zfi3n
W+5AIj1YIq6Hd18nbQ2be7+TeB3s9UEncTmYveDSoHOD/mMe7Pd2J8/mEpeY
bqzc5LZ7z/44s9/o5Hm5ofXndRITf8rf7Yz0877kTW4fkzheFytP6tjvdBIH
MPa79k15noF5pnKefkZ/ncQBHwd90skztuCLkBsk0QZ5sApt543yp7bfwfLN
9s25j/5z9mMf+ENspGDmoDMd84tO4h3GpC/OcGKlf3cyZgGXgc/WkzfQtpxB
r8jHtvGzuzlmwSSdtOE9rAM7FRvvJCYj7drynsr94Bz3tP30yn4We30Rc430
q06eW8QxP3XyHGdtX8obaptL7eMSx75YPflQXfnG+ZYYyJR+J3bdZwW9qY5s
5NrPsq7EH67/FfdoPXUDPfjQmBh5dAVcu4H7+FEn8Ry4kjgEnTq/k7p0vuX/
dVKX0e/XO6mDG7iWS927oQPz2X3umj6yT3RmkHoCnpxzYGLKuQYm5rxB/hwD
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
yh24v5d98Dc4/FXLcGXOSuXscmC7krxnyv9aOd4w8JSln2m7ZH2WsvC+Lj/1
CNtVx1ljS+lvlOPNzBvqPOlvlgNbV+U9J5Vzy76FU+lSSf5fiRjc0jnedKym
3BvO/7q0c13jXNeh/U45sEj+2Uk53v+s+7a0rZ33Lembu1+vqTPznJ9Kp7bA
93xPeK8c9/120hmfyfELyoGzPygHnsjvfuvtHb+w3IHFm/Y/KgfGyu8G65Hy
MH6Rpbe0T8qB4fL7xhr5i+Vp56UPjiTOiBni5dNy+NEYxy+R5/Ny3EH42XzS
GLu0HFgK2rvava399vH/K8d9ivyX5bhfMia1Huccl5UDk31djvsl41nrXR2/
XJ7LlGF+fBcfxufJn+TYDSoRx+QNcsQ35YgV5v2uHDiG+PmhHNglY39rxn4s
B55h7Mqy7wVr+gtbX2X713LcZRlvlQNTga0WcRy+n6Qx79XlwIiLWK6S9otz
IP8/edp56YMpfyvHfbqftGvKHd/pFrP/ZznwZMan1hl7Wu8vP7zXpvJ3ObD5
pIr+n+ptKzF2XTlwfP9K4JP7lFnCOfh549KV+JnjDbaXqQRWABf0cU7ibRtr
fAU/gW/ZSrwXoBE/+BA0MPaN0ogTYmQ56Yzj2/j6aMeJqx2siZOR1sQPMQNe
v8k5aC9f8R2T6hVsw8u8o5ybeCAWvtaH8J8VK77JKjFO/iVmwI+3Og6NmNlJ
OrSVKkEjHnaWDu12acTDOGkrS4dGzBAn0NjP26URG7u6v3c4/pW67uZZLOPe
3infKql0bos4mjnVM1XEqJ4X42B97hfiZA9pfaVDI06IEWhgcOj4PL67j+PE
1V7WxNLe1sQA/t9PWeaYan9V29TT5GXeidJWk846xBtxskYl/BKfJC7w7/0d
p7+fNGIAv2+PYd6L4G7w6OqVKLRXcx3a0+RhjHWIKWKk/R1LzBzs3IwRY5Ok
/a3sGurW/jbDTvA5cbRmJQptbJik3D/l4FmrErh9urz0/y37LrCmD2ZeuxK4
+wHl1laW8U6VjvfJofZ5e8C/TiXKg85xmOOdLYcrB/+6lXgDPaQcfTAo93BX
efEn8PeASmDsh5UboCzjM8vTJg9j7fawB+DtRxyfpS34u6R6lkrg8iPlWa8S
2PtReel3kaedt4s4Yf1K3AuPKbe+st/o69wNxybacanMRixUIl5WNm5vJ8a0
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
1PO0QlxXxF16URF38EPqwDke7fxdldtA2aO1cbJrPenaT8rzhLp1VT6/h1y/
i/Jdi463ymPu18xFRw44yv4j7g32gqXBzyem8kwROPzpIvAxd/2z8jB+kra/
qP3LpLv5uFQv2xbYeyPnOLYIOu+HGc4BZjjBeVhvkLwzbM+QB5wB3uAdAEYE
A5+SyrtFYJh31GFT9eju+Knu19Oe18mFmFDaRtLRbdaiw4+OVc+5lWG9Idr/
vPJzuwener7d5T1FfvheKALHv6BumzjP87ZflP6C9p3gPmQMlsqFReCy94rA
cOBm8PbpRWB3sPMrqbyaymtFYGPwIVjxrFTOtKZ/TirnFoFHT3OOnp7Zy0X4
LXO0Y/aXnR/6GUVg916ut5njvZyH8TdSebPoeDfVXK/q2vS534lJcukIZeCf
5Bj38ZJtkSuWbvPbchFYL2NhZc523oq0LdQd7A02f0tdtnL+c+Q/23m2UK7i
/pytfWe6V2faP8N9bt/j4dbsD3Hc8ozwP/wQDP9+Edh1e8/tfds93Hf2/G1l
4Ae3n18EVt9a3d/23N91ju2cn35T3guUu8D++c51XiqXFmJv9WspN59j4MMP
i7gTd3Tdt9XnA/V/37nqnudb7ueb9s91PONw1xqp7AfuD/TernmZ6450/EPb
H6rDJeo3r6W38ug4Sp4JySf6zJvuan7mmepZU+mWytTe6Y5L9aqprFWPO4l7
KN+Tqb9OKr+n9h9F3F3UfxZxh60tP3LwPyCtLZX16pETwQ2jU3tMKt8WcV9z
74I1Vq4H9rg6lf8VHTh4UfvfF3HXc+f/VoQe3LVr1mNN9PzVMe7dzok2Uz3u
IvRBd+6KfBepF+02dYN35nrcW3eoT59U/krtvwvv4CL63Mk/p/JLEXiH+xqc
0r8u3qmHXver33R50Q9c8I12gyFYE/zIHbKI9mPzNUXc9+wBbxzeQVe6Lmty
539ZBObbRR7Gr0rlC2nj7C/i+E/KTXB/2Bvu9ZsL3yypXJvKdUXkjn+KyCfk
lU714D1UXmTAx1e4Lvp9XgTWBFP+n+vT/9E18xvIei/XWvw/tl7ruot55te4
H4tox1dFYC9s/tr9o/+Za4Jnl2uLdx/v4k+lgXkXVNeF5Lk81Suk+jt9ag99
42H9A3s7azN96Oum+oxUeqVyeipbpLJ5Kq9JY6yUyiupvJrKcOvNbTN+pjxL
pLJ4KtfWwzb2cJHUXrUeuBO8uWs9zpjzXE064/jPt/oQeHia45ul8rLrb2Y9
XF3Rr2cqtVSqqZyTSll9zkplq1S2TOVNeRg/1z70N+Sh/5Y2b659ZW060zV6
pHJaKqda91CfYerXU/rp9qG/VI8z/cZz/coz3k1bv/OMqL/3zD7Xz/CxNeoR
g7wNeGvxRupb902W6n714P1Cv/zReMAv+yvLHD8ZY8QJOWNd88bfxsMk63+N
jX+NjUP1D/zkIdfh7HYxVm4xXtAF3VapR6F9p+e4ej30/9442UvaGtJ/UO+9
5efMV9c2/GKqa35ljGB7P+nkNPIZa5GH+ZtKo60/NUY+NZbGyruK/J+518QY
PlHoI8trE7bdmsptRbyTd6zH3TSyHnfWAvW4t/LdlNrz1+O+GlWPe2l++Rj/
UHnGwOvg6i71wAvEG/hk9rrYMtWVungj1YPqgXszJrX/tPxz1AM3M/8HrsF6
F6vTvPWo6ffh7yGndt+20GO0epI/Fq5HrI7Tn9iXXepx3vTRBZ3AQ8ix1x+5
B5dqK2vl90tdTJrqHaTNqw702b/33Ud0pn2s9hynLouoT35L1cPujPdTPTiV
ueriYWv6vBM2SPWG9Xj7gNd598ya+t3qUR9TdLyRmHdIPXA77w1yScZg9cC9
Oe8UsR58zzoGD7j+NGXAuPltZz5gXubfUF1oow/vrW7q0K738eqzkWe6Uluc
6cptYe8z2jxDPZ7VP47VvinaB+1x7X/CdfL7Tn/D12ivX4933nr24WE8v5vr
Ib+x/oaf7VSPOCGGdq6HX3ymL+E33DXgB7ADeCl/ryvizv1D2gHSl3bsBmv6
5B9yDzhkt3rE+Jfq85g6bVMPfLl1PTAFthA/jXrgWnAm+HTbeuDmjFXr0V/K
9Za2zt/6isBT4CwwFRgJfARuIO+R88iB+ZtYETmgi2tPrkd/BcfXcz8f1eZl
tfUvbWJfwEjgI/DNr65Jf/m2wCQrtgXuO0CdrlfPJbWtXg9bsestbWtqO/Tt
6oH9sZ33T77Piog/6Iznt1Q9xnjvkOvOtc7vr7pvgXrEb2/jFhqxvIMxC74g
5y1Yj9hf0Bw4th4+8ok80Mk1YGJoH3t+7W8v8CHY8AjXRoez1ZG31wjPbzvP
FHvRrf3de4G6otu72nq+fBe4b+e6d9hY117s39r9Ie+yzmuux7q0yXNVcx37
9rp6oR+0qm1qdD+7HriC/uv1wBQjrLe0fVgqh9fjTn2kHtiLe/VR29DabD8q
7xH1wGqHKo9vtjn+WD3yM1iKHL1vPfyMO/7J1H7K3LMkMVAPPxunDPl8/3rE
AP74sOujzyGuBxY4ONWT6uHLOa/UY+4NrJl/St2c5poDpXdzbFbtQl9iJd/b
qUzj/FM5qh6+ACbhXfWQbeqHbT+sbpPUj5xxhPLE7j71sBuMc4xrk9vA3Utq
+9L1iH9iC/wNDgenHqx95LC964FFvpeHcfDsXvWggdGWcF7GD6qH3B/GPjlt
2URbMZWV6oEblqkHjbHH65HP2AfeYXfWA4/0sX1XKovVY13026MeGBHsuGc9
1qd/YD3WzDmjHvVvrnXDf2xdxnVXaQsf6NcW+3GtdkyoB+7C5on12D/6u9dj
TXDqovV4q4Dlx9eDRo6Gtph6LiYPvPvVw6fwxXy/6BtPaPvj+sLj7sPVzSTf
SvNY01801buk8kVq/5/0xeUZ5xj0z1PZuRW03VL5KvW/TKVTKoc1kh+nMr3u
+xU/SjwDeidfb8X7FTrjKyS+5VO5tRG+tK/+9Lnr/Z86odtVlitTWSTR9k7l
h9T+PpXrU7kulaUSba9W0L5LZenUvsHx6x2Hdk0z7FoilQmp/NiMuXZthR3Y
v3Ar1rlSez/T5qtcH73oQ9/JOf/nvPdrIzh7onGS3wb2fzRv7GfuAHODve+t
h+/tqf/taQzgf9R7Gw+ry3tfKg8av3yzwD8P0kcfkv6gsc792X6P4hvcqxvo
G08Yt10cO8j4JMbuVbd76t4pqXxaD1/dQ38lt5BXeDM84Jros6b99vZ0+9i9
v/56gHr/bm6kT0zdp++sod3sHfFC3gWvgFWoiY2vjJHdjZNp6os+q7tPa0hb
TTq2cHdyR5IHyAGrSAN7cadyj16RypXaPFa51dsCK4PnP68HPkPm/+qR6+l/
Jg0ZeK+qB7Y+ry4GSOX5VDapB8YFR5Kzj03lpFROTmXuetybvI+5O59TBn50
W1D9Lrde0HZ+H9UjP1xTj7x2jf3/pfJ9PfxpT+nXyvOdNM71i3rcWePUF725
y7+sxxkwlt9bqXzsmperw8f6yWjrMbbZN/ayf1vYmN8O1idpb8ba2jqPNPbi
mVRm1AMb8x2geyqnpHJ8KifUA7sjt7F8g20/Ky8yfDfguwDvhaGpvGifNpgE
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
kXde0JZTGuYZ6c87dqLyJ2gXezDYtfL7xXUGNTowydO2j5VnVulPOTab8ugJ
5l1RW+ZRD/LpZG3F/icb8ZYj7sk9dzcidvvantoIvM47hW/ifEMHr4Dd+Kbe
yf4tjvPtnJgiDokr7lZiJr8tG9H/3vzA3OSI+xuRY+5riFNSmW57DfsraA/r
LNeItdBpUiMwJbh55dTu04g8sqL8yE1pRL6ZtWkuagRvjv1UPk/l8EZgTew5
Qn+hz1r5DZvqQxphd8brjVjzT8fg4e1zUCNo5P2b1PVmdbtD38THh+obJ+sb
3Dvr8f0x1eu3xbe0/LvE9fhdAn73d5i0/I2xiO9vfKvj94Hzd8Mi2oz3kKdz
M2zjrJYwF5GTHmsEngZrkoPAgGDCx6UzTuwQJ8TI+tIZz7+PXI/1n1ePF9QV
/U7y+wLfG/jukH/nuR6/K8Hvt/Dtjt+pOsNxvknQhz5cHvp84xymXUOd5xTn
Yg1+v4PvsHxfpKaPPs+p30mOoxd96HyTPELbZvLcj/CsjzI2ZrE+2jiZ5Nlz
7sRbN30KbM475RHb1I/Ke6i+MtD4esqyoTE3q3MQx+QD7vbnGpEDqAdbD7FN
rsA3yDObSH/edQ4zBomziZ7nI+r2sIX2Op7jE42I96ONi67SnpR+jLp1k/9x
xx/VL9pc83DjZYBj0MmBD7kW+RgMBP6hJjb+MEYONk4eUr91pE0yroh9csCa
2gSu4r4kv/KmeqARd+WNjbgvwYjktlPhU4b9uEG+pSzXS/u1EfcB9/ZlDe/Z
VF5L5fVGYGhw8lmpVBpxb/KGHiUt42rbZ8uD3Ahlf3HujAetJ6rDkurxWyPu
o/1cHz24y29pmDc4V8/4EGmMkft+d3/3dw+W1q4ftZs8e53rLGk7v8tS+a4R
b6Q9pF0nzw/Kkafz28L9qGofdr6hjdi6pf03G/H2r6VyjjV9vgO8nMorjXjL
gNXB7Wekcro1fb4p8NbYyrnesn1xwzdaI/ACWKQdh7xv+yJ5WtLfc6y38vNq
y3Dt+ce9nGR/uPr1VKde/7GhquxrnmnVPThH20do/5bqjc74RLnxn7eJtGHu
xWauk9+qDd87tl9qxL3wov2ejg9zrH0vhzsP9l2ijfgFP6/GN/7WPuKJ9ylv
b96oe3ju4PX8LTCVexvRpl5dXt7JvJGpkQHjr9sWcdbWFvoMVSfuTu567tJT
tIU43KAt3rO8c79sxNs442jrca67qnrsqq68n++RPq0ROYBYX1Pd8U3e5sQT
8QXepiaGwN/wrtXo+N5Cm5wBtlhDG++1T3uq6/TTDvTi/TBOPcH8u6gfb4Bp
6gY/b4mrUrkaPmV31nZoA1P9tXuKbeDwTxuBxb9xn8dL/8QxMPyVjcDtV9q/
ouE3k0bEL2UJad+7J+wN+YIcAR4hJ9zUiDP7sxE5lxy8YVvQN0r1H9LII595
huj2l75zkGujw4LqmN+aqXylTezL/9St/VvPYva/1X+wc1H5FnPfFnbvrrRe
WPs/U4ePXGeU9Wjb5MjLG5Enx0j/RP0WcGxBa3TfI70/vk0Y6JtU9mzF71/Q
370VtK9T6d4M3wWLDUr7Mk/qb5zquZvR5t7dpBn3bb6Tm9Fvv6+H2N5UHsZe
sD+0GT62ajN8B/rzjpGLyO/ko+Gpv3kz4hsav7NC3p+rGXf/Ca41uBnrQZtb
3ZAjlyFLbik1za3N6JNLNmtGvA5rmluaMV6Sh/bL8g23PVx95na9ubQLm8hR
Pdw39i/f/6leTxpj5ALigpgfp9wwZT93jHjJ74Bm7FHGyancmUrXZmCUyfbB
9ozP0gysBoa7XX4wfZdm8DLWrRk4BnlikHgj1rg38fsDnGsl5ckJazQjL+Rc
2Iz+N/oxPjxzM9YEL97WiDcG74uZmkE7XNl7lMduch/5Y7Vm0PGBgc3Agk/q
F6vpG1+p627K0d/Vue5xjhW1eSXrFdVltma8b45txl7d5X7l/MzvLTXjPddP
fxymP7SfY0/Pi3N/ST+4wt9rWiiVT1L5NJUxqYxO5WNpl6eyYCoLSP9EHvrz
p3KZcmOlXyH/5erJ3veRdoVrHdOM8+P8d1KW32e6J5XVU9zey/cE557fdUep
0wLSmX+zFMOLE6v8rV9/D4rfh7ra9qLN+F0u9oY9+tw+bX7XahfH+N2rXe0v
ptz/XI91P0plYXW/Ul3Haje/g7ab8gs7zu9qHeuZzW7hzQ5tI31joDxT5Ovq
nuDPGb+n9obNqMHn6zej0H5MX51Ff+2i/GRlH1ee8S7GEjnhVPNC/u7RjHgn
3/CtZeNm5J8Z5iB4jpeP2CfuWTdj/9Retxk5jPfnYcYIOhEnc2gvdtNmDubi
+8WgZnzzoP2U+4FfswdTpEMbZNlY/uOc93h1WV99sJd9etKcwFzHSBsofWNt
ZB70RdfDteVB7aHQXrsZuJ08AvY+pBl5HMy1fDNwGPfwpGbQuEuXTe3lmnHv
HtwM2p/S8/sl1UPagmfTtphjhWbgua1TvU0zMPFBzZAjf3FXEhvcl+BL8n05
9Rdpih9SvV8z3jm8RW50PXQ4oBn6Y8fKzYg/4nCy/pD9xvNiL1ZqRq4hzxzl
OGNH61ddHF/ZeVa2j9yBzdD3d226xX06TP/grkNf9AYHHCqNPa2ndqMZPztk
D/hZ4lvS8/vCui4PGBw8vlUzMDpYvdaMfsbpzXivVZsxtqX016XVpI9oxhj0
VtOf7TYDe+TcZZ3fa6neLpXtm/EzU2reILQvUP5C589vyWbsI2e7YtP3QjPo
FXmg5Z/lOjftt+1v6z6wH29qKz7Cz1bZg4b826nP+dKalguk5TdNM2x9TZux
9xz3rGh27O857u3W+iFy4A1wBz6Yf++2Gee7on57m/bhAz/rg2B28PxazcDp
tPm2t2YzCu3+zXiH8o7lLcodDI17mXc9c010nP4EbXlVvaY7H2uAbdjbM1yf
WOCtMMU8QD7gbuc9vIc1eHpPa/QAW4Nr8jceYxrfnGQME8sHGZP0wdPkDfLf
w8og+7C8yB/s+AB5+mv7fe7N2u4PNTmHNjn2EXXBDmKXN8/e7ld+BzSjxo4l
m/Gu562wh3bmN0czanAGeJz7Eaw+uC36vFm488BmYAfeMdx33HuDvUe5T7nP
wChgHO43sAr9w5uRQ4nt/ZuhJ/qS48hBN1iWbgZtH/2Ds9xJPyKnHWHu6SwN
XaBzB7Mm+k1shhy+sG8zzpi5ltJ29iC/lZrR3rMZe8NeXCdf+/eg69VpQjPm
+0Hbr9L+8c3Ys6/csyWaHe+xa1yD+ZZ2TvIZcsjn70bNwCn597SbkZ+pr5bv
DP21l+V0aafZ5l5+uRm4LGM3+7SH2qf9ijwvO09P5cnt5Gty9XB5XpEG3uoq
HdqrqbyRypvNyIOnNgMjdnetF12vh/r1lHcr+cl15zTNp/bJba83I0Zfs3+W
4+fIQ3uEfG/YfsM5T3O9U9UTHck/Z7pv7FW+51N5ShpjxD855P5mxNmrrr+5
/rCXPkFcECfEBvgSzA3exs/xb3ybuMD/8D1w9LRm4PdVbYNPj2sGBp+9Ff17
nWdVx2kT4w82I753cQ18mljAj3/Wt+n/1J4vlVmlGdge7Ey7r/2nm4GLwDTT
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
o5vRz9/cGvG70hcrc4k/l/zQn03mt20qZ7ViPP/udDNyFrmKb7/53+A04mf7
XzrGz66Yl99x4Bsg3+2oL1SH99Qj/x5pM37uye9GfeK3h/w7UY0YJzeMMT/w
+xXw87sW/K4L/GOd53Lnyv+mrBnfMy5yfXRmPdbdXp5L5BvlvrF/nzof3w6x
mXc7e/BaK94Dr9ovuS9bSGccXP5KKzD46a3A5T2lv+wYNRj+pVTOkAfe7dI9
dBrn2hb5gm8m57QirvlmQmwTs8Qmsb+DPoCP9JbGWE25c5VB9g11GOb6J7YC
63PHgutPbcWb6iV5yG9nO09VG7HvdekV/eEM96AkD+MjrN+wXVGmKm1L6ax5
muu+6NpD3Y8znPNV93a4e/eq7VPVm9xLngBPzNCeE7TvJG2kvWbvwJTcmbzH
eXvvbs1bHUz2tWPcw2vJjxx3cf/e3re9g0YbnEfOvjSVq1K5uhV/Zw3cP905
Pkv1563AuLe2xAmp/NmK2CcHfOXau9neLcmNT2Vaat/TincRdyJvdfIa+ZJc
sm5vc2fv+Ft11NDX6R28vOfJv78ov6+6odfavUMXdOIuH9w79pE9zJi0d9h6
r+373Ce+d+xpzVt9L+3bWRvZh/wusL7KPck4vRX7AfYGq1+RyuXWC8ozRr5P
bI+2P0bax9bQ+Y6R/x6gNX2+afzUirwP9gU78P1iWev8/krli1a8oXax3tX2
AuqEPj+7d/tIy2+rVD5qxb3M/TxO2//P9hfOM04a/UXdg6ul7eyeLSrtf/+x
YVH34TP38zLXxddGufbHtj92HxZyD6/8z74vpMylzvGzdrAv6+gnD3qGfFfi
rQAOf6YVWJx3Om/v2ax5j4PdeZPyFu0mP98ynrbQfkr6086FHPH4/5g663gr
i+eP24WNiXLyKvdc7K4L1rURG8VCRBQVUbGwu8VARUVREbC7v3Z3ByAYKHZj
92/ez7zv7/LH57W7szOzNbs785zznEM8MGcp5U9XB23M5Vj6O7ah9pE4/Rr7
zx57Qd3c79z5xMyzmaIP3xhfiOco+EP4ZjyfON8y9Ne75nkw3LrXpfeWdr70
16yDjr/B2fKq7dD/OezLFvaHcb7ivM3rWBkzZ9OC9mWOUsrT3/u7ZoxPTDBb
KcdziuX7rL+3q357YKZS+hwnSKNudeso47fPWkodhR9TSv8EmXl8hsJcF89b
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
xd0a+aUD+wb2K+tjRNqtrB9STl8C+jLl9FfwOfFh9pW/2X34/z5JOWmDlEUH
9/Qe5fSPBpdz/jm/Cp8l8vuXU3a88tC/sI65et35KuIP+4vNdNJuti6nf9yr
nP5Gl7I+Rjn9hMnSCl8l0r7l9Jl3KesblJO+pDzQdlcWHczVFTPM15XOH+Oa
Ii8+DzrRTVtL2Yddy6mDPrxn/a7y7yqdNV+knGfWq46ndzntfD5tvZPlcxwn
4yUWmNu5OEt7GD6D7ZNS7q2tv2Y7xVmkzWArO5onfcc+9JZ/PnWdJ/0V+zdO
WxlvOk4bYe1YT+4+YtIBZWPMsnFrpJVAtdzhd5JShh/fbe9ygnz/cso2lTNG
Rd8+6uwvz1TbQob6vcpZB32MbRfxbznj3mn2Y4ztX2v70IaX88xgzPOE3382
cxt4OLBu4CHsLujnlLNuncDagf8F5q4k75mB1sB6gUeUfcTyvMFzbjnlX8e+
XRvavMA1m7+S/TjPNh9Wdr5K0pAntqo4h+ytPd1fXSMtlY37yhlzQS/8iSh3
FzdLO7Cc9/MB5QT5r1zDA1xH9ivnJnsWueXK6WMspx70NcrGF2X99HL2Cxp1
3NPfuP+/NU/bg5VtkYe9N9I9Cc/X8hXPJcppY8SQjKtfOfGhYyUuZdyMn3ko
4i/Trs5Jxbkrq6ef9kJ+L21moHaCvXDmfCqNPlxnP0bbTlmgc7RzeqNzvXM5
zxhiKmIrYpE+5dyDi5Zzvx9bTt+6+AytnCm+OZ+H8fnaqkFbpazPZkqZuqPL
yYsfunrZz84iPb6cfiq++T3W8bzsuHLSaO/Ict5xvypzj23ebZur2e6qtjWs
nO1wx2PbPcp5p54c6Snl9DVeDLxUTl9ic8vkTwicWE4fEzq+5QuB0wKnl9O/
eLmcfgXyp1qHP8I9/X3gB/fKtu4X5M4opw9yijKzKr+l7R5Vzv4yziIeKecc
HlpOX7OIS8qZ4puyJzlnOU/Xdc/hW7CnOWfnkl74NuXc//NYh48BLzLsY/bz
gpWcK+aJ+hOcg3+VRw9xBnud86bwcUznVSf60HGutE7O5Unl9AfRsa79PFEa
bRzK79BG/rC2jFtXLGfsSay1fDnrDrWO+LeY51Lu88PK6Zviix9eTh+V8hHl
tBfKtSXz/6v5z+p2u2SOh5ZTbrptrlTuiIFvdw2wxzW0ybkqeV6e4ZiwJ/zZ
rVxH7II4lLj1WfOkzwWeDjxTTp/ySNebtX5G/o2lDdMOkHm+nPEp+479wF7Y
SF3ws6fYh3863iMd8zHKsD83sf1N1Y0Me+NZ26X9g8tpU8zpwW253w+JdLFy
Pre8xLOAM2GncoJ8ER9YJs/5gV/BGYLc4uU8HxdXD/pY01tcV85k0lvkWUJ+
zh/Oo/aziLYps75HuMb0+RD7/USkT5YzjiP2eML8a+W8/18t5345V5s82/I8
rt0r5fRTWFv2D3sHn4I7bxvtfLi23lu9ryv7svL444/b/hnqmlP+rZU5V13z
KvOq7RaxUTnPoFfl7yVtM+2A8W3ouDgTsN3pngmUORfWtw+Mf4jr+r0285R2
c5jz+LP0Da3jHGbPs9+ft91NtTvqOIufkv9J20fXT545zClnC3Eyny3z2SH+
B/ud82OBSp4zzCM28652cwm2UU6bI1/4lqaXSC98PWXABGWxCWxjInZTThvC
xorYRD3wTCqnbbbr7axMH3Ud0ZZ9OLIty33Uf00572DuzOK+DXwc+DrwTTl9
jpsCN5fzDi18SeuhF76E9K/l7y4vMvgT35XTZ7mlnPuB+jsCd5bz/LlV+i3y
4198Kw60H93Vd4vzhJ/8tnUH2u6F5YynFhQXSPuonH5F4X9ZJo8PMrqcfkPh
lwSuEl2l7aHMns7R1c7ZXuqcap4562+5n218UE6/631lS8qPNi2Z72qbeyhD
e++VMzZhTS9yXO3jo0zMWcSvgbfMb2v5TfPczzs6V8xZZ+VGqGOEZWzqsnKe
TZdZxtaK86mctvW2era3vbfNb2eZPLZwk2s/2PX7zrVljTkH8Rfx18aVjVkD
X5ji030mD/Xj5Rlo/b7yEsMS41xfzvj0esvwj1WWNpqtv0G5L5W9Xlo3aYOk
j1cP7XM+std5HscZyFlFfFc8Q+6azxuK58Vd87sflG/1GQTPj/j+yE9+DwIa
dcUz5a5Zx3M/nlvw/IJnNHzXAF1z2jbPAHkWzOfVf8hffFfcdCVledbJ57HI
f+r87WM60Py1gTHljpiqahmf47bA7YGj2tI/wD+5VXq7X7K8ZdYS34+9/FM5
z0fO5Z/LeU5S/qWcZ+9htlvERMoNUXa6cofYLu0fbfucC5wJ+JcHK8O+YB+x
N35U7mDXl3Xk/CHOJN6cJsh/IsgXsanl/vbr2hnmhPm4rpyx6VjtZ6xl6F9p
J9jL/ua/mkGmZh8+dc4H2I9P7V/D/o4q5znD8wieN7DHJwvy7PtZK+lD43sN
i3m5P9JjIr2vbOxgShm/beZK+mqFv1nJlHvuwcBagQcCs1XSJ0fvf9Zz581S
yXaQ/1faccogu2Zg9kr6/6fa5v22u3El78uNKnnvPiWNe3/rSt7zxODzGIdD
x5foFeU5K+lrFjGD5dOV660ssfl8xufbVNK/oO63cvqB+EnUz28cTjudfEbQ
W370QJvXZwTtc0c89Xs5/VF03V02jgv8UU4/kroftDnsDZ9jw0r6BoX/Vcny
QpWMLS4MPBr0x8oZj7FH2BtDnSPmB9np1rEHiniknHLwsn8Os9zD+h+VOcT2
N7IPxR6J/CHO5dz67o/btye0AZ6F8Ezkr3L6zUWcajrMcTN+YssidnAe7rJu
ZefrHufv73L63uj6R3s51nVkDbGVOV3b07WjB+3D3eppj2lXtbxdJe8t7qx1
7PND2gz2gl28rh1sG9gssHkl/Th8SvzILaSRh46dsx8Kn8/y8dJmdp+8qNyW
0mZxL/2jDGOjbqtKxrIvWibPPp3NvYrcrO6lLewDfflVOz3ceVzJ+S2ebQau
EF2kXSa9/RnoEpa5gzkb8Ac4N6aUfZ5aTv9iN9PdzeP/8OwKHwg/hvPmSmUn
KzfKdtvbHyUfsdRmzu3fzgXry75jz7Bf2qJ+k0rGVtz/rN32lcSbrucC7gt8
YtYMGuv7umXyhU8T+YUr6ZN09rsHnS1DZ0/86hzOr97h5Q6ZC+3DDn6H4S37
QvlC52Ah7ec1bWhB9y11nG9zeMYxPvY/e5/xEUM+Y/u/uZZPO/5nzHPmUUaO
fTXMOdxUO/3LeWS/YEecgdgPtjO75/KmtkWb6EDmaPU8a30vZdGx7oYxF2vP
NNN6G+bnIScHZvb7Glv5vYhdK7nWhS9ZyTL5pkrebdxdq0V+9UruweLuivzA
wPH8rjt7pC1tcslK2iFp4StW0oZ2r6TdFfFHJduZoo3tVkl6X9tFtot6Dq3k
mVbc55VMOc/wBVasZNv4IStU0vfgnKMeP2JoJc9P5JdxLIwJ32HlSu6vFZRf
vpJ+y5BKyhaxSCXLjBEZfI/DKnn+/mQfbrMf6FnRPiBzsHrYM4yD8RzhPsdO
l6rkPvr/fV1JWq2iv1FJP2TvSvoiRdxQyTJyS1dyn+5RSX/nfWmj1F3Ea5XU
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
2if8J+TwBQ6vphy6Vo38atWMaWnrDttDD22eq75Vqx1xOCkynG3MJ+db71qc
E4HXovxq4JXA1lHeKtCrlp958i74VuahwUN+zsjPFTgDm4101pqfldayjM1C
my1winpfUcfsgTkCp9kudb2lofd06b3t22zKMMdHVfP5RRH3VzNlTleq5hww
F4dU0//E/z7FNWFfsW7ruHa0Pbtr1r7PmSfansO6c9qS/7xI162mL4E/cmY1
z9XCZzFFZj152nkpc+ZwjnLuF76JKfL3uCarux+7u++GVfPZDeNcsZoxFbEV
Z9mQasYft2h/7XEp6QqOG3v50foV5EGOWBRZYhPyB1cT31v/g3P3ozzUUV7J
PrT3ZSXn+TbbhM5vF3B2/uEZQ5wxqJrnw0H2mfPnS+vfqea9zZ2OP/t0NX3a
jc0/o/0f5h7YWBqfi71ezTvqtfY9wh6r5h45wn3ybDU/S2tTx+Huw+ekU3+k
9oQNPSMN/m3UTzvnVvP+5R7mbn+/mucSfsV71fQHirgjcFng8qo+RmBUNfdb
F/knKXOZPIubIoOfMbmaPkVfaVdI3036FLGrvMPbkuf8ttQ7WdkjHBv7Ah8I
32hE4MnAU9WMS4hJnqhkXMK+ZZ+wR9ij+BIvS2PPsX96SX9FGvtnNunQXpXG
/plderG3pbFP5pD2mnRo7KU5pfWWDo19wh5hL2Bb2NVujp81KD47rebvZGzq
mlIuYo1IewjiTGjDq+ljFzGHKevaU552XsrEqBdU0wct4lrT+eVfv9oRx5JS
vsh5LmJZU+Qft575PsrxsK85O+eu5Vg5H86p5hkxupp3EvcX8SZ75F3X7+Jq
R7xK/hLlOin7rvzvOA8POxeLKNcus6i0idWMdYll31ZuB9udIH0n9U4QE6V/
VM07rN33IHbA/yieWUa6XzWfQ3LnL1PNOx4/41Pr8Tcod6umHPLIfmY9fgJy
7c80yS8rxkvrZr6d1k09nDucM8Vz02qWv1D/fuYvdR7a54PyYq7jCNdye+dl
B23ug2ruffb0ldUOv4T0qmru752doyulLa3cHsruaf5DsYf1ezqn/cx/aPlq
7aHdLiiXbfcq6bvY7iTbLeKXap4vjImz6a1qxpRvVvN8e6Oa8WQRc1h+w3ro
FzoX2DFnIHumiEMsd5LGvppPufaYlf3C/lnAOdzO9i9Q74LS33J+hyszv+sw
0n7zeSqfq/K9zAVjryxUSx3zRTp/LdvHTsZVO2zsU2xLfF5NG7ujmnfWitL2
lV7cdYHp6ih8VPPj1Xl9Ne1qWfV/puyy1sO3nzq/MP9lNW3u8cAT1dz/j1T1
B6rp43D2FWelfhBn6v+q+pamlNdRDnn28lyeGcjPqm9VxA36X/hds+krUTeH
/hRtXBj3xEORjmjLfqAXX4VziPP2TNt8yHa/cFzM2Z3O4R2OfbxzU8Rizhv3
/PfV9CWK+C5wa+C2qr5K4Ktq3v+D5P9OGeb4hmqeBbfKj44fqumHDHG9DnbN
llfvCpYPlvd70yGu9+32+QbbuN41+sJ1mlbNGIQYs4itAtdWMx7FP//Y/Cfy
fCr/NPmqyn0s/1T5P1ZmjDzXWp6mnjHOW3uMV7O8j/o/VW6Mdcxvk7ydarkP
uTfYB+wf9gL2VtxfgX+qGaMS4xb+beA+sYY07lPOpPbPeogJOK/4XhnfFeWz
2r+qGRsfrcxq6rpfPej703ruNuJZYtsHAn/b/jHy3m8dzzCfdl/zjIPve/D9
jQ0q+ayT72IXz4rL+X1tng3xHRO+D1F8f9t6Pivg87riO9+WpyvziHw8P1pQ
+fW9s5+wDdqiLzyzR57vSm4obSPp+MLTbW99+3S/42Ms/1Uzti+eDZgy7/c4
T8zXvLU8M1kz/Az28aPVPMdYt3OdN3Q+WO3Y/9DmqeU6sz8fUa7dv3nUte7p
2nPOcEZyxhb+i+dl4b/UMh0+gww6ZqrlcwrGwH5hP7FnZjaGo+63avqT+JXE
l8RZd1Xz3MT3Jua4Uxp1v1fT10HmD+2C8kryrazcUGV/qaZ/jp/+q+1QvoDf
nI/0oraMZe9xPlexLep+Vm6o/PAR/97mOBgPZwzPI76t5hky3XaL312LcW5e
y/xzlslD47fUdqjlPbV9Le38L22de+st6xnjn47zL+0em9+ylr+xtkUt5+QP
5wHdW6gfXvbqsdrPf9pQ51r6IdzB+AF71fJs6RppqZZ3Pz7JHrX0Hy6OMS8V
+UvakqfwTyIt19JnGC3/7rWUWVoe/IQr1YvOPWvpe3ygDDTaow/Q+9USH8o7
2vqyeve0P1s49hccH2M7zvllnjetpV39rp1g5520de6jebyToM3reYetzqy9
4qvgt2xbS5DnWcYb0rZTbj73HmXWED+FM3MBz83tXV/o0BZ0n7yhDPSXXMut
nAfGz3r8Z59O0A5/0RY3CtrGtYy1ijirmrFXYatBP7yW42ceiDnxy1nrRWrJ
1x6f7VRL3xu/nJi4rZZxKtiklrK/uGcOl7apdGjM7xHyI0s9Y3nR8WzjvBF7
cW4s7NlRq+W9w51VxKpRXrKWMSY+Zt9agvwutezr+o4THdgsergX8VW5Uxev
pR58u51rKYefjM5daxm70tZI24O2m3Tavtz692yfevwDnpngZxTPOAPfBG6u
+gxTGv4GfgfPOvEvbpR/f+vxQzgfvlP2FvV+qRy+yg3KtT9jvVH9LcrA/616
DrQf35o/wPKBM8igg/ERzzLGLo6xfayUr3B+mWfmCpvr7znAnq7UOvwV0mot
9/cUdVNflQc5fBJk8UPI711LfGw99AG19FE+sZ5yXXtotwvK19ku+qFzttDu
7rZbxCm1HMdSjqWItSK/WGDHWto3ts1ZuqN5zr1FPPsu1W5GmhYxWs2YTB3Y
W2dtDjn0XyzfpbY5QZubaL5PLcvk37UM38X2r4/7jv69slbs+8DLa+W4mxz7
w93Cfw6sG9i8Eedd4IXmuM+7x7kSmC9wadAWCywaGBHoHFg4cEFgwcACgS0D
L4Xci4HnAs8GNg3aRoGNA09F+RJ1LBI4OzBPYO7AeYH5AvMGnm5OXmTODMwV
mDNwsXK0TT+fD57NIj09MEdg9sDDQWuN9JFIT4j0v0j/DZxm/WyBr+Je2TDS
byJ9sjn7R3sXOaaFGtl/+r6Z7WzunJzvWOcPXCjvgjPwIXeG/aVPZzm+uRwX
Y2oLfB/5IYGDAoMD35nvHrg5cItYThrprYHl5f9WmVutg3fZwPWBboFvAgcG
DgjsH/gq8HWgEbgp0GJK+UbzN0v/WvkDbLvFuk2i3880Z//PCXRy/Z6x7lnr
KDPW4c4T63p8I9eDtTjXdUZ+98D7gQ8aOaYDbRt9m6pzsHTqJwX6Bv0987s0
svxl5AcF9nP9e2gDrdrEepH2CewUmNDINTrTdTpX+5vXOnjeFeR31MbOcE3P
dF3nch7OdSzoGO54JzWybzvbLnonKne2NjFRPnhGBhZv5B7DDkdoi+g733kk
vUD7u0D7W9DxvxeYLKYEdrX+Im0U2m7S3zc/RdldlKdN9lhnU/bqIq7Rbsqd
7ZjncVwT7f976mE8JzZy37HejzbnWvSk7ThHJgemBGaSB96HIl23kWu0nusF
7bjI/x3psZH+Yxk7OiUwa2AW6cdrV8j8T13Q/1bm1Ebue2SeCNoGjdz/6zcy
/3jQHmvOMvmT1T1z4Ou2PA+/jfSYRvblr+C5LNIlXDPG+IjjRAe6GO9MzsVJ
jTxzOGs+a0v6SeqnP4/bp57Koo/6k+W53r09PrBv4AvtnPznlvcIfBD4kL4F
Lg8sIX1362qBMYHrRF3atMDegU8sV+UbKw+8I9W7eGCAMp+a39vyAGn7BJYJ
NAXGBXYOTHS/7ty+b6X1CUwInB04JzBP4PzABYEFrINnp8C7lsmfpczcyp0b
6MSZo/z8gfMsz2eb79nuzuqcqBx88zrecfabcXzmWEgHmr8mcG2gErgqMDrQ
NbBXoF9ganPuVfYobf8eOCpwZOC+wP2BNQJbBV4OvBJYKnhHRXqF+q4OlOTZ
cga+XtK6NJL3ctulzY+Vo39lafTnI+tY2/7yf2z+c8f1mes81rFf6/pXnbO+
ztuH6tvTvtLnLoErnYulpVFeSt5+8l+uzJLNaZMfSmedLwwsGHi/OW11t8Al
gUsDiwaOCBwe+DWwWmDVwD2BVQJ3W/5Vnl+a02c5PzB/95zz1QP3qge+3wJD
Az8FflYHuu5S/z0z8P/m2t2rntVsg7YOU/Ye+/CzddC5c7lHuUO5X7lnm5vz
DOT826177lvuLfYye/yG5ry72efsd/bQx21J/6QtdXLHcZcf3Jz+ww+WB6lr
heb0EW5rTv8APwO/4lZp1PX1nuAuGGq/D1Pnj4FDAhcFRgQWNr040Jn+ByYH
prhu8C0kva91k82/J32Ka8p6co4s1pxnF7b3ubpZ70XkfV/+D7SH952Lcc4N
68C6ruGasXYrO3bGeHvgjsCK5n9wrr53jD84ztvlWUH5O9W3ovIrNaeNHBqY
rsx052e69EPkvVP+odJ/UudK1uF/4kPgg77TSN9iR++m07yfhgQObmQ/b3cs
K0b5kEb2mboVGkm7zfIPzR380FdqZD8PbXT0GflDpf9gmT6v3Mi+DW1kf+Ff
ybrbrb9D2s5hrxMDkwLnLRtnamDeQN96nA2B9wKXBkYGFgv0CUwM7GwdPJMC
SwQuC1weWDJwRaCL6ZLSJwemBHYNbBRtbBx4apkOGXT0Ve9k85Plx85XcH5I
C5+5oX/tHB8VGNbIs/ln1+qwRq4987FK5NcMrNXI8xreP5qTH3phe6ZryrNO
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
rm5k8AuvkxcZ4gt83c8a6UtTh09cxE+BaY2MKajDx+Z5Bs9cvnc+mJcertOt
rtvfzivrco3yFXX2V+9ntvupcwBf2fagDZCvv3O2t3XQsVXsEHvEDvFdscV7
TSn3Cht/JdKXA7/FmbVVlP9oyzsZX2Axzw3OjKXk3TrSV01fUQe+BH4E/szU
hudLI+9w/ALu2t1dm2JdWtJ3QAY9vdV5qW0iw71Kf7hbL1M3fcIvYl/iG7FH
t3Ofjm1JX6XumcZ5VvVsq1umb3t5/l1rPXcoPhbxFLrfi7Opr8+7RnuOcn6O
cg7oN8/D3pOHc4O+97Y/nB2cIe3+/S+N9NHx2+8O/BD4sZHPXIdoIz+Y/0H6
7YE7Gh3PYVe0zPO9nxoZL9zZyOeD1P/ayPPmCGVX0Mbg5xntdPnuUG669B/F
IY2OZ8K3296h8v1k/+n7PY0c16+29bNjHCrfz+bvkn8Vx3+Ydb9pk8iupi2u
Lv/K9u0e61aVdpd6DlfXr8qtJu9XPifbv553LPcxe2xoS/b/0EiHNednZzwn
XbM5n/ffbxk6sRs8xbMw839YJq5ay9hqncDazRm3rmXd2tatpW6erRyjngfl
XVtdf0k/odnPdJW5Xx1/Kwtf8Vm2bR5r3T/mi8+wTf813xpYrzk/Py4+K5f2
sLT11PU/dR9rW+jl8/Pj1dU6g44TpP9n/j/7/Zj629spPqduzucIp0R6cmB9
aXwmzXcdTo/0NHkft47PpE9qznlA78zOCZ+Zo4O6DZrz8+4NAxuZ8h0bvm9x
RnPqXV+dfAY+rS1lPmrzuzeBTZrzexJ81ntmc34/g89r+byX715AO0P96H5a
bCyN72TAy+fEfF+B9Czndl3n8xn5keN7G3wWfK704vss1j9jfhNT6vicl894
keFZHM/hhrsex7u+69reesoix/j4jtQWgc2b8w4jVibOJeYlJR7/tC2/c/R5
pL2bMzYlRuWu4lkaz/G4e0ivdk7mdl5eUv+LzuE8zmPv5o7nTHyeXnw3pTnj
eJ4rEMvzTID2i+cM3fM5IM8AucNoh+cM3OU8g6HfxNCv2j9ieWJrnl1w98N7
les+l2vPPc2zHOSJ3YnjL3TNi+902ffiOZ60TZ038i/IwzMA+nuR9oMd8f0K
xsX3dvo47k6uPfY5qzb6VnM+/+LZ15vmofHs751I327Oz+T4vO7U5uSjDjo6
ZnPP8LyBvvPMgWeVPNvjeSXPlDifjrStHZTdSf3oKp5zuiY8J2VN8U/wA3hu
zDNSbH4+7f7c7vmdvHm75/cZ+P5C+3eMyE/QhufXjvtYN0E+eCgzP+/Yl2LP
NvKZIvM0r3uGcbP/2fs8V2F82De0OT0XiIGI075zPpgn5oR9z35kz+8f9V9G
3aBI92vJ9Isojw90i/z11sED/atG5pGjvlmeGxqZNhvDcP/jWxFb4G8N1I/g
2Qf+3+eNpFM/rpE06oiN8L2IiZZtyX6Mk38/+4YfjE/d2pJ+MP7wCS0J8sdH
ul5L1sN3XEvS8At7tKTfiI4nGhkPP+lYaWtZ+7OM7X9uH2m78A0iXaUl7+Xp
3od72+fCv7ZMvuRc4GsXPkjkD2nJPOmP0r+3bqUW/QTbusP2oJNSPqd72lmn
7nknr9DS4fuSrqCOleSnnUNt61Dv7h9tj3axjxWVuU2sII3nEqwbPnHd9cNH
r+r3Fb61/h4+ND4y8zDA+WYt/pG+j3qmWU/5K+3oAPUVPqY2Bu1r7Qqbaogb
pRFjref6khYxV4uxT0vm12jRFzKljI++dosxYIs+V6RHtqRPtGpL+liHt6Rf
9LO0wl9qyfxq8hQxa+SPDhzWkjLwYxuHzZAfav0Dtv2gbVMu4taWjPv+VOfv
6gXkj2rJ7/cSU3H/cH9wV8zVnN8BpI47Ab+NftE/9DLWNR0bOn5TP/2lrV31
yfnO3/3yruW8relcHWUfkOXM4bzhHGHejlTnPbbJPD8e+fUj3UCwx6DN0pLP
ZGd1z7JXT3QvMbfYO3RoM7UYF7fkfj3W+WGe0HOyutZ13Vnzv93n/5hHhvKG
9mED5WYOnKSemaWxJuu0dDx3eFAbYp6Oca6O0B4O12Z+kdZuW/fY7l+23bMl
5+Exx/+Y83Ki7TNGzqGe8pxkf2ZStohtW9IHP0A/vNnPufmM+wbL3er5ff/B
tXwH4BvfMzgwyo1AS63j/QFSyt1r+R7BTfLBf0DN9wWsX6aW76aO9d2E/Wu+
n1Dz3dNIm2v5rsL1ops03lvdt5bvcjbkaedt2J/ivbDIry8el3aB78Xwfsx5
tXynhndrhtfyXRrKG8i/vu+3HFHLd1Po4wH280v72k772vcrjqzluyq8s3Jp
W77nxTtfxTuPjpv+807kwFqC/D61fJ+G92p4n4x3y1ap+R5aLcu8+zlUPnh4
Z2zVyK9mP+kj8vSX9ikfVcv3kn5TfqVa6ju0lu+aHlJLPXepizZXrXW8EzfU
tlaxD8gW75zVso55+MK5YI3Gu06s7bK1LH/mWFmzZa1jHrrFubBs4PruSe8m
/37aAOt7UC3fZfnWNd/Pdce+lqvl+y3faGfY6HLaHjbGej+qHfSoZUr5nFq+
i8V7WSfW8r2n4t1HU97vWivya9fyPcbVI12j1vHeKSnlYbV8D475vUe+dh7q
1wycVsv3onmP+ZhavlNXvGNayxT5Y2v57hx1p9fyPWdk1g2sV8t3mMkX71DX
EuR5t/JUdfP+9Je1XAfmiO+afBvpN6wLe8P5vd+xtb+fubb6Tqrl+2jMxbux
HhMCOwVOruX72DPb5rr2B9kHlD/F9mfRNn7UPtayPebh+FrOK+/PXVTLd114
T4t3VHjX5ZJ2G8Z2a7l3sOvL2nIvsid5J+v8Wu5d9irvkPZwTc+q5bt2vFM+
oZbvvfDOy9muM3Xn1nKvd9IeivfQa/k+2bO1fKdsE/PPBZ4OPFPL999GtuVa
XN6WMsjy3vkZtXwHfg7X+37X/0z7Qt1xtRw3a3yx4+U9H96PY0wb1vI9O96x
gzbC+oXlaa+/0Dnj/GI+NnRO+I4K3+1i3CvWco/zvuiQWu4d9hDvPn1ay3Pm
2sCYWsf7TlXLnBucX5wdI2v5nhLvHk10PidoJydrDydankn9vGM1rZbvFvJO
3svmX6nlbyVtJY3yCcqz36Yp+0ngY9P+6pxmv3nHaVIt3yEbW/O9LVF3HMV7
pepgjMU7ZdI/VucnttVfmTHqqCjDXBTvmSp7jXVlx42tz2LK3sPu2ePsW/Ys
78O+WMt3Ro917Vl3aC9JP8Y69ju/C8VvRr2mDuwJW+ot7XXX/SLXHn3spfZ9
NEI7QQ6bw954l4x3yt6xPy/Yp6Ntm3MH+mbWneoYZnN9trSvr9q3Xq7Zq+Zf
k055fC3P7mXsF+vKPn9B/c8L8puqd0vnAVvjfuJuGmb//vDOovy7Z/4XtTzT
ijvf8vW2S/ujAlfW8t083tvlvb0PAle0JX0Un+fGWTbncrEnA1OC9n4t3yu8
qpbvCy+tLHIfBkZLv0ra7sp8VMt3ZveU7yPze1gm/5xjZrybWN7Ufn/pWIrf
hYh0BcE73rd6p0Fv/72JW+TjbmMfcw92tX+8q8xvRBxcy9+J4C7n7P3Bu/52
73vqD6l1/KbEEGm0yXlxu2nxGxTq/E6+9x37bs5z8S5nLffguFr6NFOdE+Zi
L/NTtYkm+djDn9Xy/Kkr3yRtoPRlXVfuqbLju1o941zrfeX/XAxUx5d8jy2w
X/ecm6uVn1zLd2zfq/neZC3Pkctqvo9pSnkJ+eDfRb73zHdx/EvJe3mt493e
vrazpPQrzC8xQ7mLtF3lnWJ+inOLX8o+52x/t5Z7t/gurCln/PRa3qusJet1
Ry3X9w7Ltwd+r+X+YW9dGXZ/L7YS6R+13FPUca/eU8u6P2u574ZpEz9gQ4G/
anlWHK0efJvLTO+rdfg39wceqKWfgQ9W+PmBm2vp6+Mffy39xlr65/jq38r/
jeUbrIcfH+YrQf5L6V+pq7u6b7b8jfoHq/Nb+9CYoc2blPm7lmcvY/unlufp
sY5lDcfD/KzqHBX+b+DnwN01fXL73M1+c7ZuWfdsi3Qr8/3ruQ/2quc9gk1W
6qnjbtvgu8DQ2u8b8tV63ldT1YFPhG90mP34xfxQy+R/c82PUPc96v+vlmfy
8a7b/Y7zV3kPdz6Zy1vUeahjxtfHvu50zKtI+0me6Zbb63+Uhn3eIX0l9S5n
O8VZV0tbxdY4Y76vpd1io0fZt9/sX3F2xhxsFti8nvfK8/Jiu8Oc/y3qOfd/
ucas77PKPqcedDwvL3rQh+wL0tCH/NG1jvaety+/O79P1NL3IjbEF364ln7h
w5Yfqumfm5+1nr5C4UfXM8VnerCmH17L73xzB5+izLrqKOJW2+S73dzR8PE9
deJV4tcbeG4VZ96NLfm9cPxj6vheN3bHmYxvyLk3wb4/WUvfkTW5tZb3y3eu
w0GmQ8wXcb/1typzi/Tv5LnVNV3edV3RdX7AMa5peXn5Dlb/D+Z/1Gb+raWd
Hucasj+P1R6OiDEcWc/v93NWMk7eB8AHKvzieqbU8V4BftFFjnUD5/DSWsYZ
vJ8C/SnnoS3Km9TT1+f73/Dgp29kPXx8FxwaeokLNrZ+I+uftt1FbJs9jD/J
nt478gPq6XtyNuBjveR4/3PMpDPVc6/ia8HTK8oz19NuTpIObet62szs2g31
s2pbMylzovzwvmra2/ysymNvbwXerOU7D73s21bqnkObI+UdC/zTOf3ePf4m
vim+4DZ+h57v6ROHzeP39Im9eO+CdyyIvbb1+/hvKINsb/tFnr4hh8w59om+
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
8FXQTRnfg/bPdE6K54Gmjzo/6zn2R2aog8YeZd+vYhvr2Ca+Cn4Kvhnx3gFN
fq+5KffT19L3b+qgsaegs6eK7zybtri/BjVl/Mb+ZV0Hep608xFLDnT/Qmd/
d2vK+LCb+31Zz4hBngPIUN/clDzN8j/kWBgT/teJrvc61mED+GLYEePEboin
sCP8TcZ9onO0rnOHv4ev95Zj/9Lx448R79xhf+gDY4J3B/n3d+z0m99Q4h1v
3uvi/eupPhvn/Wzq+K2at1ujLz3Cpk0p7xDpyMDigcUC77Zm/U6RX0L6ZWJx
eXcOTAiePvLDSx6dO6m/jzzUL6H85eokXTJwRaCL+UvVvZj1V0hfKjAqcKV5
0qXNd7Fu18B70U7fSKdEOjmwm3RSyshdpeyWga0CL7VmHxnPRNNdzMPbVX50
76qekvTRgXkD5wXmM3+u5b+D77hI/4l0uUiXD9zSmmXox/dI+i2BWwPDA/Or
Bx7q/21NuRXgifyKka4UuD3yM0X6X6Qn9kiQP0G9JygL78qBO1ozXSVwp7LI
nBRYM7BW4H7p0GYOrBpYLXB3a9JOlg5t9cA9rUmbRfqk1pyzXWwH+buivIZt
3Bf5WeU/RR3U3Ssd2qn2Ze3AA61Jm8W2R7nW2ERf12OS2EXa0d3ijAv8Ffhf
YO3Ag6aU1+mWPNQfI+0h6YutGvYXGBk4KvD7KhGHBBYOvSMCnVnT4DtW2e2i
/Ea0vW2knwXfviHzufwXKdPe9lriAftDH4cF/ggcp85/AvcH1gjcF/g38F/g
+ECPQGvg0cAjppRfj/a36ZF9WNdxPGRba9re77ZzlOP+2/7/YR+Ock6G2a/7
lUP+BO3qX8fJeGmTlPG/GemFkS4UWDBwQY8sk1/AMvlXg693pK+ZUt5anvPl
m7JJnGuRvh/popFe0iPPg63lfyVweZyhSwaW6J5nFmfXW63JDy/nBny9lGN/
k3+5NffkcPcX/IvYBuPY3rFcLL2z63ex+UukX+zaLuQ4r4h+dLFPzMtrrgd9
eNl+LCz/RY51fvvBPGzjnCwgnfqZm2O/xdyf2C33PXv+ttbcE+tgU5G/LdLb
e2T9f4GZeuZaca782yPPgOOtg875gszy0v+17mXniLPwt9D7a+BI1qVn9oV+
vhDYPLBZYHDgoMC3wfdn4I/A0VF+NrBJoM22lg/5FQIvqXsL9rN7m7PgflP2
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
XmS/m1Lk/SN46cvL26/vLBIvr3xkUgcHGhcZxP3d+HfKS352t63J//WF55Yt
0+6W61vbHBrhLfKUZxRt/766m9WlfdTPKZaNspTnuNTB/tYJeZms3u2jDk+Q
9+mu7PvPdOU51w+K7KvPF3n2l7mat1h5u5V3c3nbnbfceXO3fN+1cSqN93Wh
824qb8he4L1P6LzDyluqhPHmLm+QXeQdUd5/5R3Ys5T5rnK3UuaWpk983uzl
fVninNmQ8RbwHar3zB954G1w3gjn3Wne8OL9Lt4F4y0v3grDz9tuuHk/jDdh
12uc+i4s7/GNEF6SxlvmvHN+UkOmSb3w9hXvVvPm+ZvhfkM/bt47L98/b8h3
u8n3GQ359jnvmZ8S7rcD3mrIt8Z5S/vYcI8J+KEr327nrfbynXve12rIN7AJ
P0aewYG/6cr3sAknflfAqg35hn1v0z+hIXkfM6zL8CeEbmmPSYdnzYZ865Y3
b3kvjnfzLvI9LN6D4g1oysG75adaFsox0nqinCdLo4ybWE+437Ru17Z+kcG7
7qc15Hvk1NdY9QB94M3xzXS/Y1rl+/HizXQjg/inh3utBt/nFa9lWXgXDl3g
bTjebePt94aApgbfdm/Itwl503nXhnyPbjdpvAHH+287BdQbn7i8x8cbgKMC
Kg2+2deQb75/p5wrDbtC91XyEG8H45L+Deahr/gG6eSPN+W3N71Ruj/Tf4Xy
efuaO9f0nQ/1X274MqZJ2t91Zdm/78q363e2bLs0pP9b0yPdRunfWpa3faON
d5F3MS5xeLceXUNfd7RcX1pP1Bdv5PFO+6SGfJ8d/t7GQYdnUY/fkI++hHuS
/lmMg/zXGvK9ed6Bf1E9oq3pRzPbl3gHkHZGd1+Vn3i8H0i98fbfCU35fuGs
TTlu8Eb90Q2J6W/HWG8970l+bXl30l9v+I6W9SvdX8nzpfVAOzMu8r40d+B5
S4031gZYFsrxekP2rdEN2b+gbSi9l2PEGOuOOoH+gmM1a6lBDflu5KPmn7xT
Fu6TYDNj87K+Yx2Ijby5dMK5V4B9+FGRdxPw4+YOAmcXLynSXgTjL23AZfLc
/cLattjcVxaeyS/yfP+Xgb8okg//F4bDxx0B7MN3zQv3UMgL+cReZt2Lzfhh
kXcryNeH5o+8vWe8LUyfONj7rKNZA2PrYzePVCY01tusP8DUBWsIbHLinCX/
puYF91v6yXO95bq6SIz/qyLLyD2Hdf2+yndW6ucz6wgbu7xDQf1pT7HPB60i
nfsX3CHAZgcTFzdrtR57tk5ZnCfdVDrhL3alnJe60k7jGwf3LLD1uQPSc1+E
9t1G+seGXV1MvUOzk+21o/5rLOtXlm9ny1vekVA3xhd57+Rz2/gL25X2vUKd
QV/IM7YndY3N/Yll/tQ6+qz4z90T411c5H2WJU1nKfWwx3+x9gm2CXPxQtoI
+JnTngxYrSHfvB8WsEZD2gzYC9gbP3blm/OTu/J9+2Hy0kexTcYpA1lP2H+h
XSAvcYY3pF0DDdtmNm0E5t3ZnQPxr9Lgm48BA+335RuLDdnfeWdxWvt++d5i
w9R3Gh8yPrQ1TfN545ZvTyp7FXl5z5K3eY+UB7nTCdPLP8i8PGLcR/TP4Ph3
lOV73vQW0N6h7niPmfc+OVu9fr1vJwc83ZD1ObQh6a8ZRjtdZFvSfz+wP/Pt
ANpF+qFjh86rrYQNQB8v724VOR4Q50JpW0qfR3uBeZ88rB7wlPhp8zNEXZjY
kHYCvNgb82lLkh72wVrWMf14Xf8/ubB263nqw0RlzaEdRxvPrw2LrDm1iU75
Tz5Ify5tnFP1TzScs+7Tej+TfrCdfZ9vOqyTZ6e89Xl/jXuDW+qGxj2196Vx
X2PR+qnn9hf37P4Hhm8lbQnP7oOX9Gw98Rbz3P9WnsXvucvGGf2l5AWPV+ZW
8pT3EsK9aX2639TPXYYZvc/A/Y7pvePBN/51/c7P3UvuUq4nby/P4q+vTnHf
cCbfleXbNnc65vZeB3ge72m8qgzivWp84vZST/nuvrB1xDfpbbxrQDk3r8+6
pG7f78p3wj8M3Ba4vT7vxuxTn3dmuC/D++vcI+J+Em+Jz2s+zg59+V/A/E35
Dvp8hg2Vf3XbeTr/rVC+3V6fd5vOjDjzeW+Nd8vJA3cbuDO1sPem4F3A+07c
8+Ru5GamMZ/3EObRzzp+vh7Z8m9uGWmnkfV5p5J2oP5fth03lT6/eeP7N2ly
t4rv38TruSf6rukjdzPpI+Ul3+faJq+YzvTqBPsbtOcs3rUo7wmFe+/6rPPy
DlR90sq7RPXJQ/hkw+C5WajWJ628Sxd4j/q8u7drfd7VI+6PplHexQvcErB0
fd6fRMeJS7wflHmTcrlD01qf/lb9xN2+Pu9RblefdwBxQyvvVAauSB9Vn/cD
8XNPkvDyPmJ95m+ngJ3rp96R5A5rY32WmTyTn4b6pF1jHqrmBzlfK2sP48CP
vq1Rn/fcmurzzuG1AnKgcYdwo3rvD9fnvcINpL8ujfCN5aE/l3eY6vPOFPes
2P/hThZ98lTjE5d+x50p7lOV937r08+eFfGIc4qykIl8eLlPxd7ObKbBfs6k
/+SFti3vR9rW39neu0kv73Va3p5y47/eOqKudlYHrlcPdjU+cbl7+5FjA/H6
Gre8z6u+tKgDyEAH0dcJtutltv1Z9jv631O2B23BfUjuES4X/n713ses985l
4P2kEw4f/v3rvZNYn/cKcROvnzz8O2il+rwr+ItxfpVW/muoPv+3c0h93hks
/zlUn/6j7Y/Tm4efzQeAmzGvf8AK9fkvnhWVebcAjbC7xT1p/WEaAO6D6r1P
Gnj5+iwzZbhVoP4YZ28VE36A5aXc3EfEDe0o88sY+l5X3ufizhr3xBhbmUsP
q897kodazkMt+6HScXOvcuXwdwj3SxutDO7dQhtQn/dpwQN1U7crW+fc4Txc
/gHKQV5517M+w3D/rZ807jVtwkYbd0x9zlXMgdhXM+mnfJ31ea+M+3nkYRXL
Dv4g8IH1Wcf8Swm7bGbjE2/Qf+I+YHzup0EjbHB93peDdozpoxNHWsfT2mZ3
qr+/2w4H2i4Hmu759TlPMe5znxN9Zwwq70UG7g44z/AF5SF8WH3aA6/U5xxx
pG08nbRXpROf+5vIK88IGH6EccjnCOmEn1af41J5Z1TM2LOacnrk4WeePbE+
xyDGqbH1OY9iX5xrfpkDT5c2l3k8Wl1ctT7LyJ3MVa1P6vXk+hzHynuiYtI4
xbzMLu+q9VPvcz5mfZ1jmv+zDtazHtbXjW09vj5tsvJ+pBj7rryDWZ93LnE/
p7/HhrukPudS+jfz6QmWm3G6v229vPG5r/m8fZi+PEVd6dEdeInDWDC8PtMh
vQvr057ErrzIfOH/uD7HV+yu401zZuvyGHUPTH+Y0XKuZx1Ao2/0st2nZf3T
kOmW94UDjzNN7LwXA16qz3unw+RB7541r+TzAnnR3W1cl7Jf1qc+x/LLnBfI
87b1ub/O3vJ0ASOK3KdmP5k9afbDp5G+tmHQiDOtfugvylPuSRfumwccahg8
axW5pmY9zV4ba2fWzexZVfzOUgSsXEw9q3K4+fi3Eu1Q5Hd8vg+tV7gPXeR+
M/vMs0p7Xfrxhs1ivl4xbye5DpmtyH1x9rdnKFL+C+bzUPP/dyVpL0o/yjjT
G07+/qnkeYHDpd1r/leyLCvpPzjgoCL3aVYI6F/kPs5d4v7yEP6X7vLcT+Ee
jfFWkB8ae/THmCfkLF/k/sjAgAFFnr/503TZT3lAGmEHFLm/M8V4d5mHKfIe
WOSZiCNtc84pHGF7cG5htGUmj3+bz2d5FzzwxK5sE+q6d5FnGKg7ZHWYjwGm
c5BpPeuZHs723Gt571H2ocpf0fpdSR141TY/zvaeWfq6hrG/uoE6gX6hZ3zD
WaqY+v3vdXnQGb73sd/OPvt5YvbiJ1Y83yIeqrv8thiwVZHf3eDlDMA5Ys4G
rG58zpzwreAj+cebhyXNz5L6t5QPHvap+ZZwsbCEtPIblPE+Ng/I5dsie9GL
KGeLIr9BfKCbbwvbyE+8c9wbZ423hHla0rgfmI/xpkv6nCdB12hLzqtwFqbn
zMozUcanK7lHTh74pkH/Zm+f/egzxPPYnrTrP+aJvLGfPrzIPr6m7Uc7viLg
pv92F3mu4YlK6j7nWWYs8vwKejCTNPy9Ap6sJC9xzrZNOC/xeCVlEfak4bTR
WYbPp3+i4RdYr+gH5RxquXE/pb9LuY8RJ/R4VfSkK9OBTvhY64C9+9PFnBM4
Tcz5h1PFnCVgjGZNxn9vOGvGnjZyOZvCtxTGMvY/2cNvC1iumLrH2y6NMPZW
9wnYu8h9avaoWwOqYvzsa7OvvkeRe+976mcvef+A/QL2kk54i7Ja5dvTuFXl
sW/7q/H3M2/9zF955sQ83qQs9tl3L3J/mbzsa/z95LvVePtall+EfSzfAeaT
ce120+lnOrfr3tc4v0pbVpk167FNXDP/e1lW9pzP8lsI3zXK//3U53qX//aw
pr1GXP7bpz7Xx0V9/g+o0N+zjmZtzVqauXhb27feuPz/h/m6/FeSuI9zN7rA
2hx+1n6sAVlrkx/ygvud0Lllwv1uV347Yy+BPQ3OG/KviWcsz8/qw17697bM
Ndtwd9uBNqW/E2+Y5ebfRDvUJ+D+3Dx8YTjlXcayD/ffEfxDYpRx4L/Rdu9b
5Lf5+sLv9/obCs+gFjmnAT1nSzm3Rh8fY3h5jrTIM2nMBYwFnGcDwzeomHp2
8mHdnbpXUeYgaYRxng37AVmcZ2M+w8+ZONI8RlmDjcdZNeY7+DgrRn+mHz/X
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
uvAea3mO07+q8aGPMQ7tNV3gI2072gn/0a2pu+gb8zB2B3MxNkid/kulMXdv
FDAp+sGGrTlfvOGcAR2MHzukYvyrWnMOKWib0Pt/Aw4LWD/8GwS81pI2S2Ec
ZG+knEtMExtgQ8NeD6h1Z9z27qxPdH928Ry6Z7OucT9tP/5/fWtJGvYGtsbi
0tBJ5uzZbCPiY29ga2AfDJMPGdggCxr2ojbCCOElbQd0gD46a8CrLVlmyrtO
4HUDXm7JNn84oNP2md42GiTtkdakHdWa9IfVE/SFtoM+QzX54X1UGKyMh6V3
yg8v7f2YPI9KO8p0aK+rbbMrbb/CcvS2LK+0ZN4pA/YJtskilnsdy4Wtgp2C
bbaOYdTNedKouwuMBx82zmLKGm+b0zbrW3frmS5p4r7IdltMPzyEL1vLb2d8
q2McZ8+tx96YWTuD7+Z8P+fMx3xtucfF9//bwn9rLffK+d7LeYyPBL79QmO/
fELgW2q5b/1r4F9qebaDcx+ssThDwFmMq8L9SS3Pu3xaS8Ddc+6FPefPzAPx
WasRj3MrV9dy7+Mx93qX91vBnbX8zsA3ht9Za9WSRthd4hWEuw3/o+YZAvEh
uqEf5PeG8uwB67tafqsg7gry/lVL/rsNu8eybG/+y3MqtawX6mhL6469689r
WU720dkzP0c/dOJyToVzIqzROTvybeBvank+BD/ur/Xj5jwKZ1Uur2V9I5e1
3W7GJQ7nS5B7SS1lE+eyWu793xj4hoAPArYIeF/8gfnmXMj1tfxGs3nAZgHv
1fI8CvGul/dD+Wdoyv1O9jqpyym1bBvOqfCN5xrlvGdanKVAd26u5bed90yD
cxXQbvpPnojH2QVoN9peU2wz2mEl2+LvWrYRe/+/qR/oBm70k7MX6HQ/dfz2
WmL85Z6dtP3VZ/T69v+E/xjuH2p5nob8t1kGzi9MruUZhp9r6YZWle9m+0u7
feZnw/eVvzw7UtM2xh5uy71o7GzWzy9oQ/fYz8Plw2ae2/1fvqfRZrQX9FOV
MdL63cx09jOtF5X5gvlaVt2lTcu9vFru7VHv6Mt3Nc8J1bJNm2xX6oI64fxV
ef4j3P8E3FfzLEotz2Tgv7eW5zfg+8c+NsA+N9q4hE2jG9oeyifddbqzrdft
zjamremXyLlfWaQ5wHT/Nr1/zMt95uVvdeQwy1dVt/a2HX+qZVuX56h0U869
rOO+9o0G9fsa+1Sr/aqvdXaDfQBd/V15eysTXSu/l6qf6Bz6urx6iL4xRjNW
c2aAs2WMp1fWst/jv6KWe85v1XLfmX3oPvb5y+3v+Efz36OAaZqSn/3nt2u5
F1uR70pl4p+nLddfnCe4VHlL2S60yRGmualyrjJvhTrFWpM13ZsBb9SmnqV5
S1q5N23/vtn6p+7edxzYQnfPPvYN1jl1f6N1i5+9c3T7HeX2pHOJ+eWsHXvk
9eZvrOWiv6zfnfWwYbdnaSL+YwG92jyP0pb+nvM70wdM1zb1zBnuadtyrijP
sNUybDrDH6795wxazfNF6Kjfb/iO0xMG7xHGm9a0yjM6bRkPnkHSjzKMOA+Z
Bul3mgfOBs1oXMoyxvJQvvK8jeV81LL1kn+MgBsZnAug/mkP7AfiYUMgYzXl
HC3vDNJJo8s8r2p5j1OHZzIfx+nmzAJjSNl/2rIv0U7XSsO/hG3Id3HOm3Lu
le++nHH8KvCXjlUfqFPTqJvTWie0DWNLebYl4LWaZ1ba8gwb8jgPy/fsV2vJ
B8/rtcTEOU9e5uydTXcn45E/vj1zPg0a+WGOho95GvdX+hk7GcsYxxhLmaN3
s3zoKt/11/P8Dedwvqil3bCj6ZNnvsVyBpe64Ls4NPx8v//CfJCHBY1zrvTP
lfWdaZKXccohPmdjJtXyjM0rgV+u5TkqzoNgW2CTnSXGRuMMFOHwEa88h1Pz
zI31crF4cXWpnIOUT1zKWZ5DUg+QsbFy4N1c3eMcFHbpvOL5dL9U85xYLc/p
LG57cmZoAfO9oeWiPS+wrNTZhfJS/tdtZ3jPtZ2JzxjIeEH6I0zvRdsIXVm7
O/1rG76OPCOMe4b5xP5mDxp7nH1n9rbZv2afGvsc+u7NMccF7NGc7t0Cvg+4
rjPGvsDXdyb9e/luCn9L4BsD3xJwc7gn6G4N982Bfwq8Z8CPxkPmd8a9SZ4f
DN9DvKfuBs6wB1zTmOfZr9G/lzzIvjPi3xr4rs50t4X7jsCTA/8csHfAvgG/
BuwXcEXEvzKgwj/MAj5vzP+Z/RJh+xjni/CPMmwH3dA+i7DtAj5VJvzEK5SH
3PMj7cWDtn/g8wIWI93AXwfeOWAn6iD4dg34LuAV/nkVsC71HP7rA5oCvpVn
F/l2lbZ+8L3KG5WBXw/8WsAG0gh7zTD8yG5sTLlNxt1Anm+Ut4t5IH3i7Rz+
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
Z9qVHZ0ZjzTuDHxr5KM9oI0+25w2GDb/sHAPb9b2bU47GJuuX/AtG3B7wG3i
ZXUjB3ml7dec8YYZt0fGsOap6wowaZB2LWBCwD7Wz8+6wb/oBu/bmOU9KOJ1
dWY5+luWu5oS4++OsIObcz3LevVuw+8yHBrfW74P2L3RdU1ztt1A2xHaDRHW
N6A5YJ2QdURzrqmJ+53x1w7/6KCP6Ew3tspanRn/fuUu2+xaQIwfW73NclNv
/Tvzu8QKnenGZl6+M3n7yU877k8e1Yfb1InnrEvaEJseW4ZvXtg1bdo2K3fm
emOlwMt15lqkX+AVO/O7FfQJxmtvnppXaNT9r9b/IG07dBbaftJZA60WYUOo
/+Z0s0basjNtsi0C7xl8Pwb8FHBLQLUx7Y05unP9MKt49eZcSyCntAObU/4T
pvG4YfiRt0fAD8oh/bm6My3S2cs0SAsb5/umtLV2a/K9bMfLPo4Bl+pn7HzJ
sY6+y9jF2Eafpj/vabo/KqP8R31jzqfMpfR/7EfsyOubMnyEMu+1Xe/pzHGV
MXW8Ml5RzgvmgXGc+h7cnPbiYOt/kP11rcAviMs1VHPq5Q/qdtW6rlkfk62T
32w72pAxg7FjROA5o+7WDjx3d8pcW/kj5HmxKeVNUGa7/Z9x4MbGtCFbTH8P
88CY8JTjAvlftXmqrQzGv0ln2sob8+0w4GjdfZXbYvu1mMbmfO9Trx5TBnqC
7gxVf7rUFcJvtC/Tp0d2ph2/aWe6x4R7s848S8Z5Tc6T/aCeoC/fidGZddyD
YK+g3Huo5ZkQvq+v7Xf4NbsznO/w5dmVWt514Ls/5yDOkofz7UN7vtXX8q4f
3+Xh5b4B9w7Kb/21/O7PuYyzpc/tt/zynmJbnmld23z03JEYYV7ZY+EOJWc5
kMHeC2fyP5W2nXIJ+5+07aWfZdj8xmOfZ0HTedk05nE/gXyyj13eFarl+Q/u
dHEnjHsE5d52Lc/WlncJa5n/8rxvzXuG0tn3JT5nQtjj5exJz1kRaPjZs2WP
d5Na3iPrirb9vSv359j35nwO+6+cM9i05j5sLe+svKUbGvuvnANi/3qt7pQ5
ojv3jKGxl83e8xWWaWPjky77LezHrWc55rIs5X1S9QEadytPtWzDLetw62JN
dYi6ns+2Pc14axmOrAXdNztHHThN3oXcfztXeS8YZ13zR962tb1pU85YcLeQ
e4VnqHPoKXc1ue/GeQzOEHA/k/tw3Jvl/uyW1iXh8FE33Lur9NSR7X1UtMP0
TXnuhnrnHh13+Dgvgwxkrd6d9bdGd7YnOrK0dQude32cR+GeZHmHs5b3Obkn
eos0/OPVC+4dcaahr/m+RB3hPhF3OLlbyXkG9BL9XFH94K4gdwrJW3lvuuY9
1lq6bzLN8n62uK+8W1iWzfUT7zrrjPuF9EvuFc2uPjaYHvUx0jpkj5Y9ZO4I
7VTLPdmvpVG2JaTvaBjtzJ7qQvJx3mrnmnega7mnyj3gT2zzneTb2bZGz+aV
f3vjbCs/+sF+M3lazPRIl33bcYYtqj7QjlsJPfetr7Iu0Qn+f8K5OO52jrTM
6MK11g11wZk9zvdxbu8C01jE8pV7yLXcn0QHbjXP5d6zedpR9xf6cZd7mLU8
t1LeTatlHy/vo9VyT5U7k9xHZO8fwM2+f3k3s5ZnCjhjvppu9v7RFcrHXbdy
3KimjqFf6N434d8l8K7GIW63dGjfVrN/UDdXSNtNOn2GMO6lkrfyrkUtzyyQ
H+57Ml5wX4zxkXsX3G2Cp7xT3pbn7lcz30MsI2VD1qrK6rKclLe8V9qW/jHm
tcv0yjuFbRlOvPI+pvRe8tNfyTd3dfkWwrcZvocU6gB3cdG5rwN/Vc16on9z
j/jLqrpezbojbLy0naUvYb1yZ/j7gN1rec+bfep9bWf6DHzcKabP0e+5u4t+
4b/WuMT7wXTRmZ7+xH3qHdQ59PoC+b8zPQD3brYVbtqL8tGPe+4Xkx73iLnz
Uf4HwHDCuHe8tPXFnWjSoW9xPxTd+Fq9WczyXKj/a+uPPH9hvpH9jHowu2NL
eRe8Lf24y7u9tTyDw73S8lyO/k7DoXMXlfNAAO7yXEot7w8+JA9hxOeMD+dl
Bpn+s+bhEWX2yH6kNvVO6SDjML+TT8bC8n5wLe0AzmIwvjHOcfaB/k6/5+wD
4wxjAX2Wuaun324gjXMS8DIWcr6HO66UkTMTxEMWfZ87oW8Yb5L+SfqRV54F
qeV4N0leeDivAY18cP6Ffj7eupzB+uQ8D3XGvcryLJblHmy5oc1o3ohDP6XP
0ld723/px/wDgv7KnSj66qxtU/v1bLYp/e5o5T2tHhBvovF6/iXRc7+qPLtY
yzuRh5tX8sk3VL6n0ldpA84eYo8xH5bnD40Dvl+dQDdGG36/YQ+qIwOVcZhy
/tX9j+n+a9qHS//XuAPMY4cye/L7oDI5b8BZBM4hcN6w/MdCLc8pcg+Ufy2w
t8y++dV8qwnb/cvAfdxrJeyqplx/lWdRmvLfNPyjprMxaeW3/cAtnXl+pTXw
QxH2cMAqAUu754pM+FuVM23AdAFHsLbqzHUBcZftzDMH/dxj4YzHuKbEnP24
sCn3W9gDOt9vKXw/uSNg4c7cY1rEvRr4zmvK/R/8vCE8X2fu78zP/pL7PQt0
ZtxPInyhzrR/+c7IN0bSZP/6oqZMkzxdgEz2k5oybrU59z9uCpitO8s4e+C2
zlz/1NgHCfg23E2Br23Kfe3rmtLGO1I7b0HzWP7LuTn9uNkHw89+M+8+lWdU
mnJ/nndwebetMeR+E7jBvf3LmjKMcwFXBL7ceOW7UabfbB5YV4PxQyd/jc1J
h0b7kn/2/ft2Zh1+GGHzdmYZOS/U3pl8NyiPOmMv/uJwX9OUOobMIvi+Il+d
qUOrqCuNpgtvvXv8lAX/1cYnLucEluH7jetu1t+UsbCcS3bm/v5SgQ8J/98B
hzal++CmPBeyYsAKTXnu4hBp8HFOY6WmPCfC/unKTfnt6T4x/ruNt4LxkPmn
8e6TB1n/mC74MN33yreicI809qz5rvhbU+5h/Riwp/gn3ehWK/3Q/kgfYk+t
V3e6Z+rOb2aHmSbx9jLuzca9ybRIZ39phLH/XX4Xbco9cPLwg+njv83wV9Qf
3hD8w3IfpLzflbl41PtngRfrzLNR7BWyT4eu9lFfF+3MsxeLeS6DMHQYfcE/
vil569RjxrGvHcv4NsN3lDVt68/Rtc7kRQ/Qc3SB8evKpuz3jAH0q5r9lP76
p213kOUuvxUHLC++U1o/y36HtOUs6wGWt786gT4cKH2KNMLuUmbPt9Up8vyu
v7/hBxr2h+4/evJW86x4LctI+aiT8vxYU+4dsT4r1/di1tZ9xKwnsS85i4o9
xDpnV/3fGV6eN5denh8Vf697V+MSB9sdG34ZMeuxenl3l/9K+bBhf5BO+B66
obG+Y23cJB3aj7rLs/i1XOPAh13ImrQ8dy9mPckakvUs69iqNPyt5ov42I6c
9+f/RD8Jeyl/b92TdYN/Vh5r5pr08i5HLW1lbOZfbZM7bZcDnU+nGAYP3wY4
98m66zZl/KKcW6UR9pvz8f62DfW8s2n9Jn3Z2tS7LOVdFWlTTJf43Ffifgz/
pGAuXK4x50byVt59qvmvp1rek4K/v+4J5qnNskwxzo/W157y9VdGebdKmYfo
/svwu83DX9J77l79Kf+w7szn8O5sf9qV9cZMrbHuaYk1kfehuRf9WEvOI8wh
zL+LOw9jA/ANlf2ZEU1pRzCHYkusbRh0zlJyfpLzlMwh2DLYNHPEePFeuGfv
zLFshLI4e8LZDM4sDWxMO2YVMf4HG1M2afD9dlFtE+yBxbRNxjn+MPZc4Vj5
smPnMtpThDEXl+dJ7cOv2ae5O/CAaS3pWEj5Z+nOca93d9ohpIn9s5RjJ3zT
Ww/TmT/yuVZT2kHwnmda65nebFH+d5HpmRTOqHBmizNpnD/j7FmvznxLeUbn
a+ZqbEDsFr5LcReMcy6c/+E808ydeV5uls48p0QYZ5XY/2OfkDfNj+rM86zT
d2Y8zhGdYlzeb56pM9MnPmecODPG+TPOjYHJH2fRZujM86wzet4EO4kzcHN1
5vmeuSlXwAdN6abdOX8yp+dxOJvEeTXONNH2nK+DhizO0ZEvwjjXxf0abFZ0
jDs23LXhfu9o/YQ9qJ7QhrN25lko6pZ71ty35q4197MnBLRxp1d8a8AvdTF2
BOwb0C9g2YDbA24T42/Xv6y8+8m/v+7fhP0M31//7wE/BuwR8EPAnQHLBdxh
WrfrXs6w5Y1LvAMC9jQuMm4MuCmgJeDqgGUCrgrYIeCLgC/rsl6oH+4+w3NN
QH1Agxj/zgE7BXytG/yNGPpXAa2mc5NxiXet/PDuor/R8J4y9LOeqK9bzRv5
2tE8jgr43HyT/yJgbMAZAfMEjAtYJOACMf5FA0YGvBPw7n/CFjb8Qnn2qcu2
pF3eC9g8YDPjvqubOOcr45aACQG1gDbxBOXsHfCzPNWAm22LnwL20v2j/n3k
/cUytytvGdup3vq8STlV5daMR1qT/xPWavwJypssz16mN1n3l7bVjuKddF9n
u9A+pwfMHTBXwKN9Ym0feNWAUwPmDJjD+p9HPngekW9QXWL8JwbuHTBrwJiA
XgEzBpymbGQNDFgl4MHgPzPwfAHzBpwUMJvxH+6TcpHZqf+hgJu6Mu4tXan/
6P5vfRL/3ifd6Bf9445wHxT4j8BTAu7skzTCjjFfMwQcETBtwDQB90b4yoHv
C3yK5Z69LmmErWR5HzZfRytj+oCT5aUMi9Wlvl0UcH+flNehnA7l3xC4b0Bz
XfaVb+uyv+BvCrg+YLeA7wK+Fxgbdpf+vW5oe+hutF2bxNfrRvauyr/RdHvS
x9+izF1Nr9m4N+jfVRnHB8wSMHPACbYz/uOkzWR5KeMA4YE+STvKeppO2kB1
4FjjoSuTAt4I2FA9gQ8ZGxgG/b4Ys1YOWKkxx78p6sHttj1tTD+mb29mWyxq
e/BuGW9knVDJt6t4h+rVSr5bRtjx4X494LVKvlPFu2W8n3ySfujrK4OwEyv5
xhHvT51dyfeQeBfr2HBvEnjTgLeMQ1zS4r0j4pxVyfC3K8nzSsDLFd9hMn/w
v6mst3S/EbBxkYB7oyLfOOK9p7GVfEuJNM6sJA3/GcYlzibmkTIfZ7qkuZ5l
5R2kkyuJeRfpFOuE8m9Y5FtZH4b/g0q+XYUf90UV364KPNJybWrd8FbXOZXE
vPN1brjfkW+zIt954r2n86VDezfw+wHvVfLNKsJ56+qCSsogznnybi7/hQHj
/vMuFnicMt82PWQhkzjlm1/GG1/JvPMm10eVLCNvd1GmJS3X++ZlS+nERQb1
Q91MqmRc4vH2V/n2mbJ5H6t8L0sewj9W5pbW4fjK1DfKtraet7LeN1I+bcLb
VadWEvOm1WnkK/T7g4AtHXcWV/fPCTg3YIG65HlfvovlgffygLqAPgHbBXwW
sL3uT/VvHPBWwCbStg34xDiXKWM76Z+a5nkBCxrvbeNCY25dqC7n2YX0vxmw
kf2fuXjTupzLyfPm5vsd6ci6wjyT7lkBZwfMX5c2AvPKvOb5TdM/U7755KVe
/md6Gzm2bKz7TdPb3HGkzvQqdWmLgK8M2Drgo4CPAy4NWCrgEjH+peUhfJv/
hC0p7RPpt8WYdWuftBvntj+fHm06Iea58UG7tSvbn/6ODhzOO4hB/4fxMODe
gJUrmZetAj403a3M34e6t7S9lrbNCsuBnYW9Ncp2v0J6xbb/XPoO8nxh+S5T
1ie2O2VBp9CtJQIObcz/7GBnfmA+tjR8vDyM4/c25rh+oX2XPsVYzpiOrYi9
/EuftNkOqKTNvH9FezLw8gH7VZKGXc288Ju88NwuX79K4tvlObCS88eSFfOs
DOIiZ5eK9i9jTsDCldTfpkrOr9daFuJTHmzafsovbbxwLxtwWCXb6m/qpJL4
r4B7ol1XDP99Xem+J2h3BO5f0c6vpG2wayXn398tE/nGjtzP8pLGbabZT/ey
1gtyqIPS5rWeynGCsaWSZaYMjAPQodFOpS3MOFlJN5i+sGgl7Wls48UY/yo5
txK+hTxg+g/ucfJd2NMPwr1tJePT7xepJB3aJ/KOM52lK6ln9BvqHt7zzds7
5u8CZcB/V9TdUoHv7spybG1ZaJ+lbKNybLTcW1em9g/qfqVK9qVtpG9t3j6S
RnqkO7KSuv23+o3MC5W7pWXfwnp+37q+O/AKlWzvgwP+DP8fAYdUUhfwM05t
WsnxrX9d2qp31aUtjo39mOEj5dmrkuuLPSuuCwLXKmn//2g4ftYRhM9RSbsW
W3WPSsbDfmytZNyetcdNynq0Tjtc/Kj5mLuSawbs+tkrKa+03yuJT5T3MflX
D/rQgKfCPW8lx2jWEz+Zx70r+V/NlR0HHgr6w3Vp689VyXRYi8xaSbsTO3TO
StIoz+1dyX9n19S8Yp/3UX+WNo19KrkuArOmwt1WyX7KOmr3Stq7u1W0jwO3
VLJfTbA/049+ti/tqxzk0WdpX9rroEq2LWML8bGxkUdf7C/P3bbtCvZn4sD/
vW3zg27yhB/3d/pvtM1uEt9oOnuqDz9YrnL9KG6zjNT53tbDbpaXsYXxrLky
1e6/3vIz9uzm+EN4X3nK9b3h0Mt1R+Bf++R4zfqsvpJr26uEZSpJ60I3+qRe
n6C+sJZ4PWD9gNcC1g1YJ+AVAffLAWsHrBXwYl2uv1jLzSAd2kvqCjozpzT4
X6jLNQhxWIccqX86ZbBeZU24gXl4XTd4kvGRs2ZdrhmJz7rxecPWtA/QF1gD
vmo51rMsr/7H/Yr+U8zrHOaXPjWX8daX/0Tl9lY2cWa3vJR1RF2uv+gTM1tH
60g/PODfqOd/XLuyhr1HuDtgxbp0gwm/MfrPXeG/tivXy4w/jEMH1uUamjU2
7fuLbXyk9Uc93Kb90k9g7r5N/vI7V+DRdbnOJk8r1GW65OOQwH8F/rNPlgOd
mMX6YJyY2/ZhrdhLTJlnsg5etryjbRvSYIzBBuSbxWF1WQd/98kyUqabu1L/
0EO+Zxxcl+nzveDQuuQlT3eZV/K5WuAnAz/RJ8cqxiz+IzOxLse2IQHbVdL+
ZS5j7GEMwk5iftvOOQ6bCp7tKwmfGq+0wwNXKmmDFRXtMP2XC5fJh5xRlbTP
Cnkq0pFLGOnXmYcdKmm79fAvo/wG+2lPf8XPt7zym1y4d6qk+wv9OypnB9PY
wTz0fB9kXEBGY2XqN0HcjA+4r9HPmED6y5gGdhbfqMDI+co87CR9dOBpKmn7
TlEvWftj12P7Y9vTNo8HdNflOAPGTzt36cb+/59xWKewRmF9dI6YsIWkY++t
HvB0wNCevlCX4/sTpoNeMB+zNtlEPvifkf8g+8/wwM/V5ZgBDZ1D3+B7NmAN
aYeoi9CGSYeGXqKTzCPMHcub1jPyDJf/OXX+cPX+OenPSqOf/Gt+yMuayj5M
vV8hdPqegBUb8+1r1rCsSXkTmm8ULwWsyjheyTmetQo2AXP143VJ69IN7hae
qEsa30r+FzB/Jb8LLKD/LGnzVfKbBbbCPAGrGRcZfDtY0DjQCHuyLvsgeEgl
v33MZ3y+KWA7Yr8PC3g24LmANXRD49sBtl1p11XSXsdGh+/5gOGVtPcO0eY7
RD7sNnhZj/1jXoaYn/NMc0HTeE452H7Ex97r5feAYypp95bfEyr5TYDvAdiQ
zO83V9Ie+zHgp0rO8+C9dJf2guE3G+cm3bdUptqFVf0TKmkPQLtVNzTsgp8r
ac/srfzJuicb1mac0haqpA0EP+uOOyq5viL8tsrU9U+7/v3k/1XYVxnLGn57
JW3Fp2zPnw3fx7jE+c10+sl/u25k/F7J9dH+8v2uez/9uCeqI6TDe+K8pT7U
dvmTNq3ktzK+t21cSZ1EX+eXton0Mw1Dz9Bh9HIB27Bc7wS8ELBmJXUIm7az
knbq2cZB5/mG2LuStu3z8qMnfHOczbCNzBPpnmHa80p/wzDSR+fQN/SRsZJx
km9d6HbP9zHytqgwThrfPWcJmLmS6wvK+LbyNzSNN3RPMmwT64NvT/R/+v5Y
8zePNPyMC6UNWkkd67QuVtE9yDp5MOCBgIGV/C5JXmYKuD9oAyoZBh6omz4z
Y8AMlexDvfTzXYy1AWsd1oX0fb4ZDlBWh/max7wxjpXrGjF+xq+jAk8fMF3A
EQHTVnLuOVIa/p44rDn4Zjq7bfa3Y8Vfjfn9dA7DTrOeyN8Jtjn1fm9X1sP9
XVkPlJH64dsO33U69D9kPR1tucnfsdZTL/koI/FYj5ffKyvZd+nLjBl8E6CP
3hlwQ8CNlanrnL76GU9YZzCmfBfwfSXXAN9Lx81czhx+nXGJx5iDDcF8fnUl
1wU3KPcqaYRdazzif1NJe4E5/4uALytpT9xg/OsDvpUHXuai8nuLuJybKvkt
lTU6a/YrK2nfYAuNUm6PrfK5/qvkgXdX5X+r+1vL3WQ+rxeape1q+G7KuMpy
kfcdTWsn3V/RdktHmwY8FDAg4EH9s8Zce0Lg46UR9oDuh+SZPXhODnxSwGx9
Ep/ou9b3+Kb1zEE/LvCxATP1STwm4L6A+wNWDujVJ2nHBMzSJ9MkzoVdyXNx
4N59UjZ5oo1KO9CyUI6vpV1r231lGb+03a+W/yPbY2vjfm37fm0b4n7A8nYs
nXEalME3PtYXP/fJN9rncF+C/VLWF3wnpc0vtd3L71WmuZWYdB/qyu85fFv7
p5Lz9KHqNvMk82b5/S/gj4C7K67NpUNjTV5+Q5MO7U/pyL838CNdSTtY+l3K
WV6MXNb4D1RyDKKPzljk+FX24yLxUYbR3+8PmKbIMZyx/D5pK5u3A8z3FN3M
c3xXuqeSeVrJOPBPX6Rsxq0HzQN5mbbIcW20NMIYd6YrkvcI83O//HdYD4wd
zJGHWOYVLR9pf1LJPkjb09dYg9Df6IesQa6o5DpoG3nLf3U15b132pDvZNg9
5TfJSvbxnn6+hLKQ+Zn+xeXbyrjIuEgaYZ/Ku515IH36++W6yRNjFvYSYxjj
HePb9+YDmVvYhvdYzn9tk9JGrKROHaLMcq1nGT/5T/rbm4c+8pHuA12pww92
ZRzCljbup/Kvq72N3V1+f63kmM7czdzG/L1ioY4FPqTItkEf0dWDi3TfLR9l
OLBIvfndNl2+yHYFl/ZboQ0YeN8iZRyiHOy6ZQttuSLtsdIGLNL/i+GlfVjY
h5RxQJFpky628JpF2juUgfl5UfNOWocWOd+hjw9Vsr+zDqG+2Dfb1r2zgywL
cul3lKN/kXVBme+yXP2LqX24J5y8TVEGee5XTLVBwfixGSnj/uEeHPBIuAeJ
8T8a+OGAziLpJxa5N8xe8klF7hH3LqbGgXeVwr4W+PAi9Ynx6fgi92TZmx0o
D/3uZ+uXuj2myLGDMeME0yn3cY03k/FI4yHLQjlo0/1tr/3032H4b5bvAMt7
gG3E/ij69q66s5L6c1iR+UX3jzVN1jH32kfge9h267Qt4f3LfHWaN9Zew4vU
hed0oxNrBAwr0i5fRTnIox6xlU/oqXPDKT/2a2kzFomxiagbeAl7RP6HddNu
2FvMLdhn2G5/abMd3Ji8j8gzp3ut8D3clXEfDfxYJW1FbMBybRvwZCX3ZLHz
iPO4PD28+FkPsy+PnVzaoUVi7GX0Bbufcs7tHiCy2M9nrVGua4vEZyjvCWWS
9mrmhT131hdn6++S74nI98oRNrEr51TKTXoTjfuk7UR7HSKmrRnjZrSdmbfu
cc+O7wPsy9N/y3V2kZh1COsr1llPVXKdNVQabbyWfX/1/4RzNoA1zDnm5ynj
Mx9N75z0YsCIIr8/TG8/YG5jrmQ+K9c8+hmj1y5yDUZ6qykXmZwfII+kx1kM
6uksy0r8w0zrBWWQ5jqmu5Yyyf8M9kfmb9Inr0cYtyce4zbrL/rS6CLz9q9t
wRyN/UAfQmdZx9B/0XnGPuZx5nD2pDgLsl7AupXUa3SE9cPx+llHHKeftdP6
8nPuZPeQv0eR89pr0pH3ihiZ6+hf17jlmY+AvkXa4ti/pc1bpDz82MbN4W4q
EuMnHeZR0tol3LsWafNhMzbJAw0b+xtlfqvcFtMize/MN3KgEXajfN8q43rT
7+vYgC6zXkav6a+zS8M/m2WaZLkIp4+yNqNdR9Bm0uhzc8q7ofzoNXrOepLz
JIyLI6UxhzEfowf0D9Zm5xmHb0CbGmek7rf1v2y6LxmP9p/RthhhODR0g/Ud
ukU/mFael22z9W3X1+VFD2ayzlqtt7Uq6qVuvjOgx0eZ7+mlvyDfi+YL/tGm
3bP+JQ5r4PI7UpFzPXYU6ZDe3kWuOVlv7lTkOoE1QrkuC/8yRa7BdixcOwRu
KKauH3A3Fhm+kzw7K2cn42IL7qCsq5SNH/qoIuVcrSzWHV8p4wv5djRevenW
60deaasXOQ8f5fhT9m3HGfowfbejSPv4SMMJIx9XWM6jHaOID+8A+fexfvY2
rftNj3q81Xod43jL+IK9gz2JzVPa90WO49tJJxybETe0Pe2D9EXWOrj3tI1o
n6p0aHsF1Aq/MYrx870G22Oy+d3LdqVNibuXbnjbiqnfd25RJ1ZyfmCe6JFL
+owB5frRdqFNdjH/2xdpL39qOfDXFWkzYyNjA/Yp0g780+8rzNePdSX98cCV
Iuv+CvUAfUAmae3iWITcUabVaH7QF9KpGLdiuqQ/DXtXsU49fOn8bsSe1Ol+
9+/2u/OynBNvyTPjPweeHLBPawJu3vDi7TjekOMt0Od8w4m3xngr71TfjOKO
d/nudDXvSONfjH9EtEw9k76Dd6W/FLhHvmM16V/qHmf8RasZh7xNEG5RFjTy
fVvguwLuDOgf/v0Cfg33Ly1ZFsqwL/+Lacnz8bdYHsr1kzTCqp6fb5OHuMRD
DmfsiQP/j/p73Lx3hp9ycz9+CXH5Fnc175Nz/37pgM+q+Tb49tV8n493+haS
Nkr6uYYtyN1y755/owz+PdBHevkvg2q+0c577C3K4378wtJ4U73VePzPoC5g
z2q+pc5b69uZJ9I9x7QXkP6pYZdYhqVso1G2H/nayfb7SveO5m0nw3+L+tk/
6uaA1swX7bqI8rc1jU91f6LcUdbHmQFnBcwXcLb5+580/PMHLB9y74g0lhPj
Rw8ODDwl8O8t+b4ibype05KYNxavbUnMG47XhXu3wN8G3rU1Afc3Ad8Ztntr
usHft+QbobwXeYM838rX4r+Jbgz/TS2JW02HONebx/7m84+WzOdB4f+iJd8S
5U3X6XveGNN9lH7c0+k/Snf5llnEfagl3yYjj3uYT94le6Ql3y/DzXt2j7bk
W3YztuZbddyDgraqvIPlOdrwGcQz6r5BnetbzXcrqd+rW/KdM/xX2eb0Qfoi
OvCrtKp9jbrpH2Pf8gF3NWY/28++Rp/uZ79u6U53a3fqEO36u/FblXenMpDV
owe3t2S6B8hPH/2hJeuFPvuDtK8Df9WSb7tS/+U7uy35Vh7v9F0ibSfp0Mp3
/FqSRlzou6g36AzhvNd3WUti3uK7vCUx779dYXpfKeNr/bvo3kU58JZvx9l+
tA3tTP/dwz5M/74loBqwScCmAW+15j8vlgkoAt4J/2aB323N/1zUGwb/m0Hb
WLyJcd9uTYws/tPRFNBYzXanzZurKQ+5I6v5/w7CG6r5f40G07heXuJ/bP/e
JmBywN4Be5n/qmMUb+CSx80du1od0/hnDf+u2TKgJj9lPr2ab33zXvjWpoH8
rQI+qiaNfG5u2beWDt/+3u3+vTHljEVWNcvzjnXwtnUwUn1vsfwTA4YErBZw
fDXfsT5BN+9Z4x8T7l7cOwx4ItxdAY9Xkw7t2MCrBjwmHdrM0k+q5nvnJ1eT
dlw16Y8rZ1UxcrurvlEeMNS4vJPe8176ieHvHfipar6Zvrp8q+vn/ZD2ar4x
crbjK+PqPlX/4RKwRTXfJqZ9KFtvy9tb+bifNQ/PWDdP/Setp6U/ZdhE83mi
eX3PNicd5qhKNecp/k1T6Od/L/wbZvdq6vA16thuAbtW858v6GH5Xxnp38t/
jWEN0r8zjDY/I2CeavYX5C4jjblnXtPcQzm3Wldt5vNK88Y8zP9mdhHvqps6
RM9/Ng66O0E/dPrBT+K95JlgOtgS2BHYUbdIJz59iLlyG8uxq2n+aD5/MF9X
WXf0Qfpts3WDn/64p2mT7oYBr0cbbBD4tdZ8Hxj3ugGvhP9lYR1pI6rpfqk1
7Q1sDWwY5vdF9DPPL6ofGaXd+J+x5o3WnMfRNeb3jhjfNwo8sDt5iUNa5ykb
W4g8vGQ+sAWwU9DXcw3Hj62CnYLdhb2ErbS05aOckywnfsqKjbmYeR1vPOr9
UuMtZf1sZFzytr5lwaaqMw1kvWrdMaZMCTigMe3fxU2D8YL37dH/h52rBzn/
Mvd2Oecwt1ziPMIcgp/3WjdoyTdb65xPLpPO+64bBmwkfkObB3unZ15mTr7S
OYj553LnF2j4y/fKlbGRMqC935JvPPO+8wamRxpvyQ/Ppi35lvU72lTYU9fK
A32TlnzrnLfNee/8PWW+b5yRytjDOfp7Zb9l3Hrti6u0GZjr725M2wr7C5uL
t2pZf5yqm/erTzH/5dvVLUnjrexTW/IN7Q9b8s1r3qvmLevTW/JtWt6hPdsw
eD5QxlbKmcs4p7VkPN70HtuSb94T/6yWlMG7rOe05Pvd2wZ8HO6PWlLm1sbj
be0zbFfqd/2A7YL2SUvG4Q1X3mUd15LyeO/13HB/2pI820nj3dfzpEPbXhpv
wp7fknYvbXKNPOXb9uJRusGft6R7EdO+oCXT533YC1sS85bsRS1pq35uvE1t
K9obWxc7Fz3A5qWN8PNm+g2tGV7a0bS3tBtbkxf6boZhE7J2+0XA/XOr68GA
2wJWaE1b+m7jIg89+rM1beo/5FvWeAdLJ5z31slTk+mR7net+YY7YdTZZNNk
7cfb8PxztFXaPtK5b12uK3WTN9aQU0z/QPP1o3m7xjRKu1l/vXVAGugzNiBv
ce9qnnbT/a1+3B+pW+jVXdYBdXFPwIrWzQHmgzzwVvqBjk23h/+O1rSt72zN
NQm287Ld0gP/3po2+2/KwQ1tltZ8j5s3mX81HNt9Yovvs5uf5ZVdvh1dzbfV
97Utf7V9fzXu7bbRbeadd8dXEq9omXjzm7e/D7Ed/9L9l2GHWOa75T/YdiZ8
ZeXdZ373N90/1IcDTf9264S832V9HmC5qcderbkOYv1E36XPn2lfpT/SFrwp
/WBLvj/OO/V/+p3ngZZ81x0677r/25LvuU+j/wjDiAvvNNKmbc114kGWaRrj
jrZc94X73oC/W7J+eL8dd/kmfUvW390tWTcd8vfEK9+vb/Hd7YC1HLsYt852
PASfZdgL8jLmMN6ca5vT9ry9ztjAe9MXm/7h5uFw8/yPZbvfuoCXtdZ48zLA
/FDesv1a8ttOf9t2BcsCjTfbeTv+iZZ8n50322eyjWgfaE+2ZPhq6i06y7vb
Q8zzk0LPW/TUMevxA5VzrDLLd+Rbcq5G92c2vVl0Q+uWp8uwmY37uHl9wnZa
yXajrf5qmarPh1jeu22zewyDB/pLttGLtvVftveK6vY96h52xUOmdY/poUdH
qksPygcPtOmkz6cun+FcRpufabuvadtTZ/TvIbS7GP+JASe05Lvmx7Xkv1Zm
tg5wUw/d1I3t0cu64X8s8JdjSuBhAWu05NvxZbu0ZLzHjdel/wnDn5GXOMzv
zO3M+7xVf3Lgk8wb+eIteviHtuSb9egddha6x9qfuYw5rak735bv2535mtW8
Iad8z974Q62D0vZoyfRWtz6elnd2+Umf+kHWUPNNnhnDsQW2MR14jreeV7OM
tDvvwI8IWLfFN9xbsq/Rz5iLl7QP4cdOoF+eo768ZFxsFewU7JzhAc/brszp
yGB+b4wyPxe4uTvDX5AHWwW9GGv6r5kH7DDOW2OXvWr+eDse+4h0sJGwl8Cn
Kp+0i+5s95ntQ8Nsx+cs90R1ax3LjkzsGWwZxh1sE2yiCwxbV15sFcoxTv8I
42PPwEv8J/zmzbfvWVxfs87GPu/WRq+63mK+Zw3MnFXO+dX042a+J7zmeoq1
FHM8c/2euluVxbyObVCutcXL6r5FGaz/sDf4l8verhFxIxf+8r8ugfcPOKCa
89hygZev5pzNXLr//zF11nFWVk8DBxU7UOwuUIF1l7179969S15kLVQUW+wW
EwNsRLC7W+zuwMLu7v7Z3a2Y73yf+e4Lf8xnzpkzM6fmnDMnnnull5tyLWM9
HRThwQEPGCdf0uGnXgc0JfxqXeG5Tb5W9ZTNk3UQ/axrf7q2/aaOsfK2Wp6f
rcd+1ms/263ZulDvwyL8b2Ou3/8FHB7x8U1Z5vsjPjDwg41ZduqAP9C/Kdfx
Yv2P8KFNuVa3NeXaX/g7ET6oKe/629wvQIfGmn9wU/oGfypXrPXmOci2OiJw
14AulukIw1X5p1jmfy13rSP7or0j8/rDchxou9F+M6lzQlPK/GsbUAdwZzuM
N6+pjVnXAU3ZFpRvqm0wwHaYOkN64f9qjyc1pd/FOdLTjZ7PBJ4YeJaAmdmH
Rrwe+OHAQ4zT3kc2JR88j0R8aFOeO01SlrRuhqFxBjRnwBz2F32FvicaPfNp
TD0Pq4s8h5ovbXKkedUtwxDbaoJpjzfm2GSMrqFewrMHzNY0/YyM8KxNeT72
aGOW+VjLN4d8s8m7unoel+9Ryzi7fMdax6PUObu0OaRPMg2bOli7omxrWt9T
AndvyvuxpxqTRtrxthVlWsu+IX0u6cWZXZNneYaPN762/GvZr/PI81Tj9PO2
E0yDzv0cfT5c2eHawLzKniQP9HVsb+wTWz+5KetA+dcNWC/geWVPMh06d4HI
zittPmnryv9CY2Lk+8fYeJGx1pEy8JE/522cA3HmxrkcZ3Kcx76g3Igmz3tt
U/qqOFN1/NaacuwzJzCWGEe8Je/ve3Lu+/ne7whpxVv6FfPdAN9RTpB2v3Te
H/CdHt/t8TaF7/r4Zm+gPLxj550E32Miz/sGeCfJM2AGvkHS7jNvvlXknQS8
yPNNON9p8TaDdx7Fu48V/eay5/S3MHx3yfsW6MWbiRXznQdv8vkOk3cefO8J
nXchpPG9Jd9U8I7jHL9LWcO7X+T4huAU9W2sTvJH/kTLeq9l5/3EeL/Bun1Y
flfId4h8W8I3bPxGBWvrML+T4tsSaHzLuJrfVT0mDJM2TBnWYr4/4Rs2vm+j
vLQJZeZNDN+RHmddoBW/f9Ezec+0Pp3fUdHexTca4kH2A++K6EP6le/f+IaN
79v4Dorv04pvKMWkFb93YBrfXHZ+94w9zKlN0A7Q+N0D3rVgX8X3abYT36TR
Tnyfz/ei/0o71Lat2b73iImjmzofZ93ntv70+yvaBPY2mzaHHXbTFvmetHhb
o43Nqp0V39r2zDT6sat9WXw/1zPfzhTf4fXM773gf1EZ6MW3Z9YL+cNtw79s
K/jg570NOou3OOIRhhmbf7lms34Ve/ymjP/lmtwu/R6hJo23R/x2Ad8p7tjb
//fqneFPjVOnmewD/iOI3wRcoXfSZnb8j7CclAfaLI5/8rrb/J62HTrrvY51
L34/pme+gcLmF9bu+a6J31x5UxteVDuG/y1l4F1Ee91cfuQ2ccwy9hZUL2OG
b7ahb+IYLb5J6rTbnvl2HVoP33O8IS/fPBEuvq2yb/l+kjr8o/0dKv5PW/xb
Wz9Ee3hOub9MO1h56M9qXyO1MfLZzLywx9mdN3tYn9Mdd3M49kY6jyF7rOvs
HN6XHT3D2t3h3M7aP0u/9Dcebkr/YIjwkDTSu8kDZl2eKO8jTelnPGIcfvy7
B5vSR3lQPYRXk5c7ucIf6Ze6Z+qX6yJrYuGXRbyrQNoR8sJDfEqTPrCYOH5h
4ZNLL/z0gD8Mg8fNIAPvoY6NfyzPBPMZYnkp932OpXb54P+7cxzNkD61KX3E
/5rS7zxMWn95PmnMe6UdDRfvP8Q7GeauhTuWsxrz3qZ4i9GYdy/c0ZzTmJj7
n3Mb8x3HZ40pP8XfjOW3Yz9vTDrp3A9x93K+fNDJi3zQe3Zj3sf10CfAd+D+
iXsgyn9/03Tfd4Dxf61np1/97wzhf4zT9uxZfrNPu9qPA9XxQFO+byp8m8aM
DzL9QcMPaAuHm9942xbaWPX/bh6E2Vuxj+POlb1VvSPrMrAj/yeGu67iLqtf
Yu64ZtWesWt8oBepe1P+Nwztgq9U+FEBzzel/4VvNl8/7++a8r0WPMNn4FtX
Gnzwz9sv+bjfQo7/2uA+7zzjG6iLe+V5vZt+Vn3DlUcPdO6l2UMzhteWb7hl
694vfUrq/bJ6aQfqtFpH0l6Rzn9f0QbFvXS/xMWdYb/Ehc/YL/Hp2h32dF6j
fmi/zI92W8+2u6cpx0XNcLFnbMrxUjON8cM4KvaIxgkzju9qyrHMeJ3WlGP2
V/t4f/Xdo66y/XyHvAfKf7s00or9qPmM9T0C94Z/yj/NvnrBOvDWgT7vfPsA
PsX0F+WhzvP3m05f1z4v9t+Wl/mQeW6oZTjQcjAPY2/Y3eCOrO+Qjmwj6laV
/y/bhL3TY+7NmDc+dh4BCHNPzbg9LcKncjbQkT49/v96jTmeRwRs2Jj3p68J
G0njLvbiwBc15j0q+MKAzQM2a8x3KsxFzENnNOabAO5UrpKn8z1L8ZZDWvFO
pTH52HMgd7plo0zNHTn/MPecZTlGWr5XxMTXt+wvWY+XjLNHoa6nNOZeBcy9
5LqN0/dDzGfkeZpzzPPOM+uKO/dZ7KW41+TOnjsp7o143wCmDu9aL+rHvfqm
jXm3zt31pYEvacz76csaM8599eWNGeftwhWNGX9T2U0CKh15193WkW9eOMPi
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
TdsbWHGOpd0C9gjYM+Db1lyXWOtYm1j3sFniX2nPuwVMrGR7HenYJgytaM/A
Q6VDmxSwmuN/qJj4o44p1oSjWSMMd1N2kuFJphHeL2zu14D9G1LHMPV06n3Y
sTbA8YYf8qO+yB+tOVceWEk7LGmL2GqT9socylxKv8D/uzLofci6Ic9aPU2e
Aw3/25o+weGVtOdmbZo27G87Npl2s/z/KMOcwVi6QbsYq20cadtik/gM9Am+
ypcBuwbs0ppjgvXjWuNfmM4aji/DOs6aDr5Dnp3l+0o98KOD+Yt1aLT9TH/j
E5HnFHm/Mg1e5jn4J2gLlHNwwINBe8A6Hq7t0SfY3VRp46VDG1RJ23xAGyU+
pJLtTbt31YaPqCTPIPOBPsF8j5BnvPQjTKMsQ9QzxDiyGzqe8ReYy5nT3w5Y
JNLOdjxfwtmb35lsWva8yPOmcz0n4szsB8/XivMz44T3ND65nLo467qCsz3P
16bwXUY5v+G4jPM2z/suVmYZ87/MMzv0/mhevOGf6Dv+PcO+vw/YqyHf6h/h
e/3BZd/wl/1Gx7TifX856YPkgQZGhjf3E8r5TUFX8yJ8pDqHyHOk9AnqnSD/
AR3JMzbwT+U8N/xR2MfyX25brOi5J3w/2zZXlfMcdIz8P0m7upxnn+PQHfBH
wK0Bt5XzHPQW4/2k3V7Oc1++ubqgnGex45SbFnCzMk3S0Pl7Ob+r+rac31Yh
d2E5z3qhfSe9vZzfLd2r/iXCXpZszfQ95fneMLSL7FfOC+vl/H6Dby++ivDX
5fz2iW+gOr9/ulAZzp6L76FML74tsyz/BBxazm/RRkvf3f46Uvs4OuCYcn4n
OtR8yb9/Ob8F4jugg9Xxl3G+paB+xXdIgQ8TDi/nN1/QDzMMjW9MCP+pruK7
DNuo+JbDtuIcbID5duZPfKo6/za/e82/v/WDTvnOKOe5Pd+t8n3qBuX8bvZ0
06B385trvq3mO9fTpfMNFOW4S7ni+9Zyfu+DjpG20+y2VfGNrPJ9Y1xdH3BD
Q45/5gHOijsivHo5vzcep00dqM3xfRdne7+bxjdBk8r5nfUs9gP9wXdE9NMk
6bPKc5TQzbTiG/DAw8r5jXOH+XbGHxUekW9W+774rlyeYdKPMo38V7MM4+1H
+rOL4fHWh++aKD/fr/EdWvG9Uznjt1tHxg71bLb+t1rvA6178X1YOe2D8DTj
zDtTnY8q9tMU7WKgttFq2p3KIIve82O8LVHJfeGd5ZxPi/KVM075rivnPV/x
TWA570e4J7lWGvFtA7Yr570Cc+l3zqfMD8wN3C9tX877Ie6XdjC8vbLFPWDg
G8t5v8h9xYEdqfPgwDdI416in23Efc310ijfTeazqmVvtfw7lfMbwP//llDa
FNsEvrtst4q8O5fz27+dje9keSk391uUd1vry9zyufPLHeZJ395qOSkvvvKA
1vSd/4vw+MBdAhaPdj8v8Ln6wPjMC1VyTWWP9qr0hSv6x5XkYW93pnHSXmvV
rxYT30i5RZTtTBtp+uvynNOa6/WiwbextNeNn+16vrG0N4RNWpP2puE31LNY
JetyjvKLCYtL30SZTVuzLXe0PaG9JR2bxB45B9hM+tvSz9Nel7Dd0LuZcp18
myt3i22P/dHvn9j3tzm+6Bvs5wZtqPg+NeA3aTdqc9D3myGN9Y33uMX9Wzn9
mHvKOT8zPxb3boG3VPY3+VmvWavxT7CrXbQx+LgTR+46y9TH/Mj3F8oSY6nB
+fNu86lq8zdr95RrrHkxj/5ZzjF+u3aJTeIL4QctZ/1ucrz8Yl77Oq6vK08f
79c6xq82ztj/WRn4xxjf1zwPMt9LzAef7TLrTd7jYjxvDl9H3nVuUc47S+79
NitnGms36zY+A2v40sbHKcP94NWWZSXr2FKe7qvgp3CXxJzCWOVdxFXy4hcV
bzBMv8B8im/FlcMvZY3CZ+XOcqty8vNW40p14H9uZd919uFW5envOd4zD/r1
HW3iCuWwA3yZZazbueZNvrTHqBna5E3bZbJtiQzl2syy9fb9Dm91FnS+YB+9
SGvurxnDvLPv8L6n+CayJd8gcAddfLPpuT2/p8DvQNzjnWDN+zy+dTrYO6W9
vUf4wfBe6njcPLjn4M6Bbxu4h+A+aiVpxb2E9xo/KMtdFN+kHG3ZivcWpfyG
ADr3Se2W5V7jxyj3uHXqUHaSdQOKb0Bb8jtMvhF81HpS1tXMZ3bzWm2GdN5d
IMf3hI9IR34f6/uj4R+9h/nJuwve8fPdEN8p8e0Q37rxXeV30orfdzFefItZ
yjsb7kb6qGNf9UDjvoXvBrhL5b50nDq/s/34fo1vpe7ynmRfdUyRRtpky7Ss
+ZEv33hebNoy1uUn873c/uPbFO4LuadaxT4kvrI0ys33CdzxcdezpmX73j69
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
0Edl3/iJiW9nH3W+ieOdQe+AVVrzLc4q1vlu+4D9Pm8C+si3nXo+dP//hTZ4
vf0P3+faI+nFe4WAcmu+VwC32Jf0KW8g7zK/qvxTlEHnDerl7cYBrfmOgr6+
zf7+Tfr+rfmmZt/WfE9Fn15t311pvJe0a6wj7zwODBgXsJ+yv2gjyPRUF3T8
pT/l73wrMk1ZysJYYvxgO+87b2H/2GKj+nqpk7FcvNNt1S9qzTcp+5k/74nG
msc4wwfYBrdY/37Sf5fvZtOw+xvNe1XbjzjjE5/hSf2G62zfPtrAdfYvby/w
wwrfrfMtRmu+s6Cc+Hb4gviUvO34yTaifaZKI+0+4/idB7X6/tX6DlbXX/b/
wfZ58W5X2iHS8eUoD+9mBlmOweLCX7Xtsa0W8/pT3QfZX3/atsX7M/ufOq8i
7Tfp6MD+sNHx1v8Iw118h/KA+Q6Uxvz8n/HONy/wH2568RvL5byb7uO3p9f6
vSffehIv3ksGHF/J8BzGebvIW8U1pJPOe8o1K/lG80lhDWnHKXtswCmVfEd8
csDqleRBV3fppK8TsG5l+jtjMPGRvKep5J0fssVbU/Hq6uEd8kkV3yabD+Hi
XfkMtPmkk1fxTlu8jvmeUMk34tTrGMvOu8zi3fEMtDmkU++1KvkWfC3j1J37
RMpLuc/gPrKS95K8Lx1pXdar5Pvy5wXqCo02ObWSb9BJH1HJN+enVfJ9+vym
n2a4eJ8feINK8q4v/wjl15PnRflOVw/yPQyfbr6nqHsDy4pcD9PPsF7UaaNK
3pNuXMm7z7Mqed96prCQ9V3YMOmdbf2McsU9rDykny2cU8l71UP8LVB+E3Sk
5dlA/rPl6SzHq5bzDPPFNk+wH+mXte2jU/j9K+oe+JJKvqfkLef5lbw35c6U
N85bV/Ld7+WVfDPJ28kbKvmWjrdpO1Z8jyomznvT89SFns403g7fWMk3eMgX
b4lNv7mS7/Z4J7hZwOaVvKtd0vJcICyh3uION/AWAm/LoG1ayXti7pq5Uz7P
MhT30ZVMh86987nyblaZfi/8lno3M21T+Ra1PxYzjt6bLC/1OTXacSfsI/At
lXx/SH22q/jOXEycN+XXVvJNIW9Pr6rku+FetslHtsvOlXyH+pl2sok2xlhm
bDKer1EH71iL7y+0r3Ms8yLyza0dXC0v+XWW6QNhG2nXVfKdYm/b7XXbjr7d
yf69tZJvL6nnPWGbdwfUGrIMT1uO67URdF1p/XgnjU1to13RHtvbJpdpX7zr
vUJebI6yvW/5ijkWGw64vZJvpnljuottRZsVb4EDfqzk+9wfpPEGd3Il3weP
Dti9km8v763k+1He5N5XyXek7erctZJvONG9i2H0LFON8RJwRyXfcFMO3neS
jkz/aIsBAfdFu9xZybehZctBuXhLzPtK3mU+EHCb9aBNZw29s1XzPujRSr7B
5e3trfIVb16N0/68K+ZOh7ud7yL8fSXfGROnftSzazXfavJuc2ol34n2l2d3
ddxveUi7q5JvUov3reJW60j9dqvkmKUc2HnxPjfgz0qOccbGqtLHmXaTMo3G
of9RybFwnfbGe3reW/9sGjzFO91Kvs/+VZ3kw/vgA6STfoN5N6gP++sjD+m/
B9xjP7dZB97ZUqe7pVWljdY2RhuHd5J9c5R2xLy5rPjSSs6hB5jPWPv5J/v6
d+szVtoY6ddb7r7q71bNPB6z3zv7nzjvsLF5bK5FjG1hV39X/J5JG4GvZPxg
2+oQw38rN8U+pa/vtu7/VvKtdPGtlfFDlf1b2t22Y5v4Xtv0P2WR4U0w9jZT
Nd8hH2Y64wv7w/YOl9almjTsb4B0aOPN9x/LcK/yjE3GzIOV6W+UBxm/37SB
5k0ZsP3Bpj+k7q7q5/uVLSu5Fk6xLSqWf+ZqvrdmLHa+nacfHrcv/rR9aduH
Ax6pTH+XXzeOjlnUM0S+Tp5H7N+/++b6zjpP//OefxblCB+pbUzUPuaspk9Z
+F/GCT9ZybkRn/IY06Cf0ZFlPjPwE5X0FTusI21EGR+2fA8JQ2xX9FD32av+
Ll019a5pPk9JO9p2wt+gbHNVszyFXyp+Upli/qzkHTd+CH7GCX5L9K798Xol
1zz8msLHCX2LBiwRsGQ1fYDCx4nwQgGvVvQnpUPD/yr8N+nQFpb+hvrJBxp+
15nyjVQOjN7/9/Pkf6uS/gG+QeFfWC7irJNvqv9N45QRv7GHdVismuvzxvLB
Aw2/4hx1nqvet83rLelLWHdopG0u37nq2NR837LNzrJ+tOFZ0jayTtSHuQab
OqqatohNrmYc+iRst5p2MkFbmUkadsKYGsJYquZYPryaQJh5YKI6sOVaQHs1
54z+gQdUHc/VjN/reCD/YQFDqxmmTJMsD3ru0ddob0hZ5NCJ7c1dTT/nVeu3
ofazqG2ObZxun3xTcZ6vpP0PNa+HrFPdMhRj1rpPtAwz2wYT5XtYOexmfW3u
JTHxeavph81T1R8O+DTgY8P4QL2ruRZeYxr+FryN1Vw7WduaqrmGEu9XzfWX
OG1xb99smx3Uh95Vqyl3g/o+q6QP95lx8ulbzXWINbOhmrzXy/O5/K3VXDNY
c4p103arVHPeJO2LSvpIO4u/rKSv8LXtjFy1mnPsFOO7qqtUzXULn6atmmsM
fFto4++o7ytlmqvJS/27aG/jHS/vKDN/Nfdx3Z2XmJOwD/ZBz1TSRyU+jzYD
rdjDGn62Mt2fXts4++cT7c/h0p6zX6GfYHwd5U6Sd75qhsHsv5+Xp5OX+LqW
lTLDs560F5TrPoPsC5Xp+2TCL1Zyv3qK9WaOZL90vmkj5F2gmvPQadKw0fWV
RY70l0zr1LmA/D2cxwizH8RHxz9nHA+s5ho+uJpj50H7qGQ/Ff5ahA+uZhjM
2tkSuFxNf+WQavoY0KFhc9hbsf5H+LBq4r/lRcch6oG3oo2Cq9olsn8rz3hp
dsxQrhZtbuXAq1Rzb0Q98CGoy6Bq+hL3W0dozFeFv11JX3uC8yH+BPuByQGX
WP8HbI/9Aw6opu8KxhclvFI182b/t1fgvavpu6N3T/Oh/NT7X9twmu0IED6w
mt8XspYupY2z/uITPK09s1ZfWEk+eNgrj6pM/9b7AtNHmcaYw59lH4ZPe3I1
bfikavq9+Lys30sqt5SyW6qzybZmXmI+WdU5ZVw1y4sfzFzXx/mOtifOvAeN
+Yi5CJ+ZthpLfRvy/IP/Q2EuYe7e3bTfbFfkGpzLyLPRue93+Trzp93+kD7O
8sDb5DzLWkQ/32sf7G5/fyMmPjx41qlOH//gdRzntBVtdqJtNo94XsP0C37T
Wtr04fZvW0Oua+ylnzEP9HYEXr2aPtya1ZRD/vhq9jd9DW8xpznHnWD+J8hz
vGN0kPbN+oovy3rL/HmENgyeYBjewY6BowMfU00fD5/haMMd6hlmvnOZZ7FP
ku9p67q2QDmhzW0ZaZPC3zf/x6wz9cXXxL88NuCXSu4L96smEN63mvusMdXc
V8Gzv2NtxcA9qzlX9armeOMcAhpx5i/OBvaZQce+6vlR+hjz3c9xzBhfznEA
Xr6a+z/wCtUcN2Dyvsz+Kvzeqv54wHHS1rQfj7WOtO95HdnX53dkfHbbeQ7l
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
KYvcWeJFDD8V8HRb1v9N6hnwRsDGAa8bXlSdyGwi36YBi0f8vMDnBixhGNr5
bRmGdk5byqJjY8uC3sVqyYvsZup7S91vGX9NXmT4Pyr+a6uBPgm5uWrZj8xV
xf9UtTknBfzblv93xX80ldvyv53436emtvw/J+KN6iO+qnr+VNftyreoE33s
r/j/p0PM6y/jB6ub/5Lq15b/A8Z/h7W3eXYb5exayzD4CGmcEf8nHK5+/puL
//OqBjwedtYR9rZ6Q46/p+yjN+yjjS3Xf8pSV/6XqtV8DzefKeqtWC7+H62/
+fB/ZW1iyl1ry/6irxaz7xazj/ApsGNs7piG/A8X/suFcj5mWT+q60/W0z9b
oS39teL/84zDw3/rfVzP/+jqaRpzxgtt6U/w/334eMvZLwfaN/x/4ebay5/S
p8m7vPzLKk94dstJeflOo09A77b8bqOv8W/q6at9Xff/8LQx6Px/3rf4RbX0
O/CbPqvn//d9Xs8w68GnztmTzfu7evp+yH5Q9z8F6/k/Yb2s8wfu5d6vp41h
V//YBrTF823OtZF394Bn23LNeqbN9SRo89QyDGZ+W6ct58Pn2pL/OeOkzysP
mDnxRPuTfn1Jncert/D7nJ/WVhd6oPdwvsIun+ib/Y8MsozJZyznWupF/wjr
9aL9O0L8ovVc17JTT9q609ftbniEvC9ZLvoCvms6cu66tiPLdqrpyJ5k261j
Ozxv/CTbANs4NmCOhvyfOcZ8qS3HMfHmgEntXbp0C5glYGDAoID7Q3bmwEcG
TAwYHDAk4MFaxifJP8i0B+SfKP2IgAkBXQMGqHdq8AwL/FjgR2u5h2W/emRA
LejtAfcEvYvyXaX1D7i3lmWZSb2/R3xc4D/4b7rAKwdcJe1A6b3aM+3KWvKP
bc/0poB+ATfzP3j83x3/n9ee5Z/JOk8w3NX8qcN9tZRrDrhFWeQOEw4P+Jf/
9AtcDrid/99rz/ht/G9e4Bv4nipg54CdAj7nv/7ak3ZdwGfSSGsM+k2Bbwz4
MmCXgC8MfxWwq+WhLDebtou6d5EPnlXbUwd5N1nvm+T7XLl60B8O/FAt/5Nx
TMDPtaxHa8AdzO2B/6tlPQ83TH1pD+p5q21ymO3wm21O21cDtwXcFeFKe8an
1NKmyPsh+328fQ8vNnG39P/Mn7Igf2fEjwk8e8Bs7dnXV2ID7Vl+yv6L6ydj
ljW0uK+L+GwBq0f4iYAnpUPDR1qtLf9f9rG2/K9o/itycJv3isEzSy1p/I/k
EOVZt9D3gDKD5J+gDEB4plr6g3O6phe+YS3jT6kHffera6Dlmt2yzaSe4i6x
lnHCU5UZYL6UkfOGx61jh+Fh1os88QtnVzfhoy3PMaYPU6bDunWoi7mbOfxv
24D/8azbhpNsX+ytUZtrdLzdpP2v6hg4pD3H3V8Bq0S4d8A1tRy702o5fhnT
pF0d4dXac854xDH3tzro4/202f0jfkDArxF+vJbzTEfED25PXvL6s5ZxwgeZ
F3k+ZvvQ/+zf8eXOsS272Z6kDW2b/v/DjxqnzsWdcOCtavnfu/xX8J/mQX6E
pxkv/is4YHIt690n4FrngQbnAmjEr5OHdNpndtd55nT+i3SltlxrZ9HOJtby
/1X5b2TKyP+e17VZeCZZn1nknWQ6Mg9rVxO0Lf4DlP9Sxbfiv9fRhX3jjx1e
S5+M/5Dl/2jvU/YI5VuVx18jnf/Pxk5JO1L9hc8VcF7AZjX9bTFx/OPFTF9c
ns2l87+p/Lcu69lJgU+u5Xp3pO0wk3nyH7SMjYnSSWedX6eW6yXp1I3xVrbc
d1jHw2pZT2C89T2xln7ACbX0Nwif6Phdq5br9DrmMVwe0k8yfJLlHC7PM84H
x9dyrlpLXWtap/nkvynW/rUD39zh/KHMCZahU3Zty9CZBp1+6WLf8H/B/I8v
vjCY/sMnpp/5n1186PHyU9/za7m/WVz5LrYFdnOUtsQcxRg4Wh3kcbdzDWNk
WC3//5b/wR3SkLYJ7dEZ+vsNYZNa0rAL/PNzaumL4e+cLhA+rabfFXiDmv5V
4PUE/DBop9iGJ8vznHwj5IH3rFruN8+s6YsFnGp4PuPdpeGPLSw/csW+NfBG
ASNrGWavis850vCZ8rPn/dc5FNti/0jb8j/hxKEfar1etG7oKPYjtgP1P8P8
2DeSfw9pC1qeVyzTBsqi7wzrB0+xZtXSxmgH8iG/02zb+S0TZbsg4MKAi2r5
X+ajAras5X+iY+e0JW3KnoVxyfhkvJ6vzdCnr9uvZ9uf7K+ZH9GxpbRFpS9m
mP7fuJZyyDNn8n/rFwtLW6aLDC8lf3EOIN5Y2YXtq7Pt8xHWd2Fpi9i3p81Q
9wvVuUUt/wOe+oFHWfclZ2ibUfJsIW0J6/+27QGd35ldJWDlthwvx9Ry7e2o
5TrLWGE/xX+Rf1/PvRtnAezf2Feyh1xRWoN09iVrxHh6MvBxgefUz+c/7bmz
43/nOW8r/qu+zb1qLf9H+vV63tO9Vs8w/2//hudzyKLjbc8N36rnOGeNYx0s
7jTa8r+pWVfwgwZLL/47XPyb4eO9E6B8rDF1ZboMzTuv/+oZ3ps1ZGiWkzqz
j97XvNA9VFnWtWENuRdnT85/ivP/4fzv+Lv1POd8x7pcaP2Bi20HeLYK/L96
tt+atiFr6nG2Iftczm8nC8soz/3Lk97BrOHekD3i1fYt6zF3wsXYDviinueo
7KMJ89/1X9bztxV6axPwn6fMq/W8h32lnjTups+1L5dUJzycD9B355u2hP21
ZVvW/WLLTH05B+JMiLOgc9S3qHgxw4sbJs8X63nH/UI9w5xRvcR9SD3vT58z
zPnMC55vsOdnv8+5fvGf6G1Zx+us5x/1/B/2afUMc4f0ez3XIc5jOJ/Bz+D8
hrOdP+v53/J/1XN9apcPHwI/l7Md1hT+35n/VYefe3L0TwzaLAEzN6Rf0l95
/ICByt9tnpxBcc7C3PW2fVCM7bYcl6vX0u89tpZ+MWN2dccsY5c1j7WPtbDw
IR3Td6mb+hyn7LHOvehbwzmQ+Q+fcU55jnNexgd40vzXsAzHqIMyzGbe0Ng/
T7S+7OvZ03NGx//MH+A4HGsYGn7j1drqb9L3tw9J62X6Ndr0WOX+EKbZv/hM
g2xT+pk5q49y12rb8B4oP77jYGX+jX7aqy3HPmHeJfxTz/8d5byN/x79qZ73
zT/W8/wS++Xc6hbrh03zf6fDnAe6rt6ly26UvSNld43wz/X05zgf5ZyTM4+S
bXS7NOK/1PNeG/47tUFk0Plr0GYNvGNbjt9P29I/xzfHL18xwj0DLmdedR3a
qHNtCfqi7RkGnyNezPCmrnFvBrxVSx8X2hvSNlHXa+p+Q/2EF2/PdRJdm86g
4zzXT9LJn7VvYfM81/UWPxx/jjMOzgo4J/iiLfdpjQGr1vKcoMn4bgFfRfqX
wq7SOHvoJx/7/2bj6EU/5ycbW27q8lHAdgHb1lLPF+rifKSk/Nmu15S98GEC
XhHwh6At255+wDKB3w+8teNosmnLtbsXq2X6B/J08hLfJmD54Ls08CXSPpSO
HnRcYlm3MW0F+ZG7rJZhaPTb27Vc79+2Hzv7gn5Yoj19sIXa0w8r/LX2jBM+
3ThAuId1X9/632ifNAS8aju8Yhjb2NC8yOd8bWZD00bKt6H5L2wZFtY2CBdn
QdEXn7Xl/px8+krbRdv4JGDHWto/e9FVAlau5bnbSgG9ajkeeptG+zAmVhCv
aPjDtrSBj9qyL9gv01fo3kn9tPty9KV9cYnhre2L95kH+K02bKcjzwhWthzo
3l79nCdydsie5PuIfxewVy1t9Tbt7ZCAg2t5poD9Y/eNlmtr80JHu3rIl7a4
oSPPFql3z4CP2zLfHQx/ZPwK06n/337XfmhD2tfy2tgHbZnPNtrUctb526Dt
Wctyc/7Y33LsYdo3phOGxnkZezD2c/dYXuKM3dGBv7Y/6Vf6/Naow+6Bb+/I
80r21YxDdO5lvqOVZ7xzZse+vtgn13LPjMyd0ohvax9/IGwjbXltYgX7CJ5O
+qWmLW/diX/mXItNMNf20bYoz+7W5XrtlLS7rHdFWeSoI789wrfAfBNM3zJn
NWlXzCHLOlewFjNfHOYboX/65n6d/fu87QmE5wn8TOBna7nfnrs9aey3n6vl
voj9PedIxT1TW77T59sivimaRz3wF9/hVDINmyBv8sVODjXM78Pw5p/fe2GP
/4z5Fn5CwNM1zxVC73zt7n8DXhTY70Dr4dzCPof2oF3us47IsUe+oyPrdWfg
udrTH5nT+q5lXk8bJv/jrf8JhpEhXnxjUMlvwc7qyO8T+GaB7w9og+L3QaqZ
zrdjfC9ZvDcWj/Jd8VbS3pP+nnHeGPPml284wfyGAmG+J7jOd2DFt5jV5OV3
dYrvBSr5jcHVvi2Dtp3fXMDLt5+8j0X2Amlb+IaZ8mxrP3yozHbS+PbgGt+u
fWA6fHy3cZVv2dhjLtCe7c+3HFf6Do72oY/57akLO99Sq7czn3dtky1sE9qB
Ni2+sa1k/YvzifbM4yX7/UVpxRlGe/qL+I2cm5MO3/qWq4dlIw0eztXxZfFp
OU+d1bP2wteVNkz7wE7wTZknmaeYo8hrjvakP6oMZz8dyj4R8D/HHGOPvfTS
7bmnL/bf7RlnPX2nlmvrku25xz5fngtm4FtG2S3kfcc8VjdP1sYlXR+3MP1d
yzDK8FLqh2+UaVuaNkq5ZfQ9LrL9XrYNyefJWvrrTxp/wnGyhmP1SfEats2c
tg9j5zjHD2Oxu+PxecfyuvYf/Qidvj7FvuVOjvuTwY7zdZVBtjjnFD9vGnd9
nIdyT4cc9z6c7XKmN9F0/MPi/q+Wd4Hc7w2Uh3RsYZI2gT08Yh8Ptd+xIeo3
VXnOgItz5fbU+7Ayde0Fvv6WiTIcaf6zWAbyp56c1+IncE/G/M7azbrdeY/H
Ov6XdnSxNoHvuWl7+sfntac/tpg2c5F8W7Xb12Li2CW+/RX694XvGnh7/Oj2
1IWey9vTB7ysPfkvVwa+j2spt4NhaJRlM8uzqeXbBLu0bOgt9gKBN7eM2OWF
+pGLy1vsNdpTdhP1QDunPX3ns9vdc1hedL6p3kWlLaae19S1qLLnWF7K/Ukt
79Z62Q7csa1kfNt2fWkxcfzky2wT/Jshnv3ylrnwqQMubc/wpfIgt52yrB+M
gxPap+vFb8eH3ag9y8qd4VDt6Czrij9b+PfKkQ9r+2T7eLL2QN9caV1WtJz0
GXXd0fpe3Z73T9Tz01rSdtRmlrJPKMvGludS+39581nWvOj7D7UbbGrr9ul7
kvcs63LyU95inmlPO9yiPcPvzGCXpH8f8EMt/TPu3x9wjO0tjTTuq6c6tri/
BjM3cw9/v+Ntb3l/DPgpYB/DxV4v4GtppI0xbR/laPtHnDu4/8Wfxq/iHhi/
+lb17Kou/L3C/mvpH29vm35s2keGPzGNvsFvZt/A+4IHnQPoD/Yb+N1TOrJv
7nYfgCzx4i64lvLwMF+wR6A/2Scgz70iexjiJ2hvx7fnffRDzjXU+2frzjzH
vHeUQJg3EIU/qx2xTm1hf12onSxpPxZ7Q8fvBdLpy3fsb+668dfx30m/UJ5i
P6fM5uphHM/kuwnOfLgrR67wf9sT46fjJ39TS1+ZNwj497dJG23/YkvF/qKW
by2wkXukfa89fS0//cndO7rx9++KNv0W/o58J8B+4HZ1Ic9+hPt6eO8w328t
zy3aCGcF+JOsiWsF75rtiZ+yv5nvB9ofg41z3kuf7Ntpw225t8OmWWdYR753
n7e3NgsPYdYofJChynNujL5HpNXlLcZCW9o3tCHm+6N5c+/MPfN+2hN2xN5z
/1q+ezhA+8MOexqH/rv0ns6f+FP4WqyhwyzbY/IXb1bUja2yv+VefJz0K827
l7x/SJ8mzx/WfYx1ech6DFYfe3X26aydvNfg7ul+23uAtlK8YanlOvuPPNxl
F/fntTwr4GyC84LrjfeVxl6aMwvuT4u3HcodrOx1yrB3O1C90LFf7LmqXFdl
oWGbbdoTdlVWP/dn/6lnmroOtB2mWdfiLr3m/rSWc85/yv5rXdHLfpY8Ob8a
b9ph1n2K5auYP/FWy/Cf5WVOKPyAWt5bFWdSAeu3p7+IT45fiA+8enu+UQAT
P7o937VgF/hPx7Wnj7hGe/qOTwirSzu2PX0tZB70OyHW21mdp9A3PGCd9tzX
zSE/cicGnNSe+1Hm89Wc08G802KsDLN82CS888q/dnvuCRm7c6trHufQuSxz
sU+Udz5lT1ZuuOUZbhyeWS0vdS/2lOqdw/IeZxus6fywpvE1TDvefE8POKM9
9zPgBQ3f25HtcF9HlmNe679ue/rG+MnrGe6kEceXPrU9fW188NMMQztF3N06
niwNuRHKLiA/cvQ9tBHyn6Lsi9KwkQWsA2VeyPKfKSxonTj7Y98xMsIbaFed
9kX8ZfFIw/gqxRmgOvGZ8JfwmxYxvJB5nGUZTrMcGyr7/2ew0tYr52+Gv9CS
vxvOf1u/KLzg74nPOjTGfP/o08DXBr4uoHfA7BE/WPqcAYdEeI7APwUeE7BP
QEvETw1cCvxS4PUDRgRsE/GVB8Q4Hpr6rg/oE/B5wE4Bn4mJ7xzwa++YT/vE
/Ns7w/v3yXhLwO0Rv00oSbshZG4MaAi4I+DOgHL/LOc/gecamnnC1zfgtJBZ
IGD+gNEBX4eurwLGRvj33pnvpJD5M3i7Bb6mf7bFKgF/BEwLGBewZsAaAU8F
jA34Pdr4t/bp9dkxYLuQv7p/1n0X6/dFwKiIXxF4i8CfBP40YAdldjBOHW+1
ntv3Tz7Sbglac59MAxPv1yfDJenwIvNxwH5B+yVoPwe8wDeDQXuJ328J/FXA
brb5L7b15lGmngOybJsGrBjhzQKXbX/afH91onsX64TeF9T7TEf25xfW+Vbq
E9BsHT+137cKvSuF/q0Db0c7BXwk/crAW1qGyyK8iTwfWa+PrSO07wP2Ctgz
oHvwHR54vqEZ7hL65w/8UNCGBAymTQJ+ib76WdhXGuGfjD8cUFcGG4dG2qOB
VwsYGvBYwDDjH0VbfBywXcAjpiO/v3ntZ/gA2rs9afsbXiDK1zXK2SPwtn1S
F3pWZLwFvWfgJ4L3yYDVxU9pf2tpi08HrBx8cwf/KkMzfHzQVgr8bOC16Rf5
nzbMmF0g+MtDM7626edF3ucHLB7QO9LmCZ4+gR+PtA7r/EDAoICBAQ/arsTn
Dr5/A88zNMfDAY6PJyw78jdjxwFNATcZb+yf45j4qv0z/wsClsDu+ufYbrHu
a6hrrUhbO+DpsMV5I7/DzPcWba5f/yzDr5bj6bDLvQM/25Fz1o9B/yHgngjX
Atq0o+/a05YIw/99e/KO0QbulreqXVO+knJ7yX9f4P4B7QH3204D+qeNbG//
TpUG373y1rQ38qOM+/bJccb4pUzfae8/WD7Ca0Sdl4w+WjPwqIi/G/C/gHUj
vkzQ1wu8R+jYM+Db0PN2pG0esBn9EWnn0adDM/5W/0wfHvELsYmhKfdd75T9
pnfqIvyOejr1Ed9C2aUj33WY84Ovb/BfH/iDSNsmYOv+qWf3PqnrvYi/H7BV
wIiQubh/lhn6ltYF/J48W4uR2SD4lou8RgbeMGD5CG80NHlIJ0/ypxx9+iT/
5KCtH/hDywPPKMv+rvV41/hawXdB/2zb73tnO+wVetpX69JlwizhWwZePWBi
txjzgW+O9JsCmpiTI/7BzLE2BW4MGB/hPoT7ZDp8ewfeJ+AH26nBthoT+Mfe
mfZT7wyPkZfwD/bF17bj7q5lrGlrRR6fRHmGBZ5jcPibg2INDzwk4jMHfUDg
+4P2QMDAQdPblzaYXf6jB6VtLBHtufrQbDva8NqAVZgXAq4xDiZ+rRje1SKP
7SOvQYF3c61lnR0Y8Y+i3dpWS3vbVJt7U0x8tcjv3MBDA38TePeA0cLX/ZP2
R+gaFzoP7JNh8LTeyfttwB7i3Wfg/12ZjUPvpf3TTqoRnxL0SuDn+A+2oD8f
+M6g3RHQ2if1fKfOu4N2V0Bbn1w/KQ9rKHqgkXZw4D8DH9Qn10103KFfM1bf
Zi/HMPML62pZHuwRu9zW9B/lOUid1HG0eZI3Za+aL21wkO2Ajo/Us6dlpw6s
G8z/rBnj9Hko0+Boi7ODNmho2jD2iV/RGvEeYQOVwC/3T78O/64a8dP7T6e/
wlgMGCkm3j/SFg7ZAYFrAQtFuH1o6sVvIR/oZwRvW+BXA2+ojpHqeNU8X1Yv
Y2Ff58PX5IenYj/SbxtH/PWAN/onD+GN+id9I+MDI7+z+mfZqPuiUbYhgesB
iw1I20N+E+U2VBfyd2oX5PmmPJ28b2rDPzleKWuv0HVc/1zHWWNZj4czL0X8
xP65tuIj4wtdHfC/iO8U+L2hGYd+1YDkuYb13fDVxj8cmv7WB4F3iPw+DdiR
8RhpveWfHPFLApbtkzLXSv84ZHYN/MnQDOOzfTQ0de4yIMPo+0yd1+ELqPfa
PjkXXIMfHvGGgL4BNwasavymgEbjX4au3QN/xbh2zmJegI4tfzE0y3hpwHLM
g+ojv1sC+gU0Dcg8r3UOujXizabdHtASUAq4TUzat0NzDH/DHB6wV9B+CHwv
9hhQC5h59RiXQZs98F0Rr2LzA5KfcfNd4Dsj3oq/FHCHmPzuC+ivLvoO//Zd
7CvKd3bAwtim+pD/IOLbBGwdcH/EBzJGAh7CBgMGB/wV8r+Enj8Dn9kndS2E
zyAv+T0QMEh56rjngCzng+og7fOhOU99NjTrOCZor8X8Ni3i+w1I/eS1f4T/
Hpr0n5kvAz8atNUYCwEPB9Qt3yPSiN9snzSa1+gB2Y/M+V/bv+BvDNNv19l3
v/XXBxYI7yf8Io396CGULfAx7iF3/L+mzjze6unr41EqQxSlgchYuvecDN3b
cM6955x77j0ZM8/KLEmUJM1zGiSpEIp+IZQxTchMZpnHSETmeUx6Pu+zPvfh
j/Vae6+91trz/u61v3tgzBAsk7u/v03trZd59BjBlhUhN9yyk2wHnue50Hee
DxHXAMfHvOtn+6+siLn0thVhCw6tiLRstBvdV+TDNjwHe0VwqGjjGBfzYYf2
c1y0829LIn/k+TLHU5xPpiPsQpfRopKYB5QYFpr2s9NI2n6W3v6K6xfha/Ix
N744H/ke67xPzce8+gLPx0eINlJwZT7m2L2FR1WEfbRZ/mn5mDNfmA++UaZf
5fl0H9pzRYzhswST82FT93Jdf+V6Jq6Rlh1t/aNcD9jjfzstuKHBv8m0evRD
ylBwXT7m5ZcKX5+P+fFA+oJgOWWXj7zWdX6p99Gu+3GmjzW9jsOm5MPGOJ+8
5GMeP0D46nzM4/sy78jH3P0y4en5mNtfhFz7mLcxZ6P8+Tb/RBo9fnQR7Cn/
RNH3EG4juELu3ZkLCxpUhBu7EvsQ2xBbEhuy2jT82I1zFc/Ngt1KIq+kE1tj
V8mPF94lH7YDdkWFMfYYNgbjP/bFZ4w7tAnRmuVDtr7S0Dof9hr2MDYb82Xm
z/8z4J5nwN1G8JpkzhB+PR9u5tWrhW8xHzzLncZO1k0+c04X8WEbYtt+UhL2
7fWC2YIWgtWFmOe8Xoj0f+ZvWFPFMToddjF9fbn1zymJMmot2F9hjRn/hZOC
HRiLhF8VX3fBK+mwI5HZtSTozPGOFBxI3adDlv5KHOWCI/x9ftnf6pftJ73Y
xi1LQver1kO8Vwkn8hFfd+s4wrLQWilsnHBLty/qD7uPNk7b7up6xo9tSd3R
hpuTF8HpFVHmLfLRT9Dzmev6U7cXvvG7l4Q+4sCexGbH9i64reHHfqetbi09
e1k/ttUr+aijM1xPN1eEHTeXMT8fc5sn8+E+WbSnhZ/Ph730XD7mTbMFNwhW
yn+C8KP034qYXzU3nXnUI8KP5WMuBg/2602COfT9ipCBf2f7a93X2k+8pwm/
QHssiW8q39O5TnNrwQcKO7civsXo38Vx3F4R86l9Bb/mo+0xln7ivKOLtJ2o
8MfzIYPsjc4buFVF6JzjuJ4R3ynCz+bjm0/7bl4SdOwayupG60F2hccM5hkt
rRd6z5LID3mZXhLrlaxVQu8h+Kgk1udud/r3dL+d7zy1/Q8d2l4VoWNGSax7
9rSOj63nNutinYD6pk/DO1OwU0nQb3EfpzxZW3w/H3KsDd5aEXr2tq4X82E7
Uy+4e4j2Uj7Kaa7Larbbw/XOewvTiJO5TlPHu5vT9E4+bJm38+E+W7R385G/
W53Ht+Q/qyJ4bnV6aunYQm/mPWetiDksNjy2PHOAZEmM73cLPuK+my5xB8JH
vruHsyfP+wzJc5w5Sca5zobJOIcy0bRuPueyKhH73J+1v47mXWexX7/g8/3i
3SYZ4avM86xlnrHeid5bjyx3OWwl/FVV3AfGmZTnnB7i3FH8OyXj/uMy4XLB
Erl/qIp72jij1CQZfNzHnBN+XDibDJ3sleeuCfjP7xJ7+H+rijvD2E9Pmknv
ZMe3yuXAfT9TfA4H/j5d4pzIZ1Vx7xD3aTRIRn6ucHqf9xke7gniDjLkDzXt
BUGjZNy5SdhuhbiXs5Xv0ST8xUScO6ifDN24G1j/lvm4D45zSTsk467Pq1ym
lG214O+quHORsyq4L+oSZxn41jCP4Fu5fTLkpjoNxNmmEGuMzGtYWyZdLyXi
ns/nnbZDXE7buqx2dJ1Q5ksTUSfUTRPXQ/GO2GRg0srYPjYdYz7rqMPT8f/i
CMfzsuN82X7WjUelY32bvPfvEnfiXSadgwS/JeKt7TK3B9aTJ6VjzO8sWhfB
ctFXCirlflR4sPAQwZ+JwH8lwr0sETLwHyh8UDLen8aOZmzOeJ4zIR1zDGz/
Wemw93mXnffZByYDcF8qvGch9OwlPEq4jmBzIuZODStiHvVYItKVUdgWgjGC
LZPRdmnDjzntGad/ZDJ0oYe1i2vSsb7NekXTilhn+Md8my1L/iuSsdZ9ZTrW
z+EZkQw+7PTtK+L7PiAZaf/ZeSAvuFm3ZIxkXZH1K8Zy1lT/UNjlySjXTsko
x6Wm/Z6IeupsOuFL3UZws/bIeMka7CDzU6d/uJ7+dN1Sxx2TsQ58YzrW6+D5
3fGwpnF9OtY3fnU90EZwX+Z2coDw/cL3JeL/FN8Q/r+wVsY4yv+X+1331Dtr
rfPSse7K3GaripiX8v/o1nT8M/opEeX1s9NHOhc7jv2TESc8lySD70CnATpr
13PTsYZMv33a/Zh/lEPS8W+ueIei28UN+bCDL8+HvYB9zBwe+wibG1tsbj5s
1mGUUz7s48HCN+fDnh3OdyofNu7QfMz/sfGxrbA3+VZjd2AvYPdjF9yUD1t7
SD7sPmx8bFJsQ9YtsFWxWfjWY2tgX2C/DxLeOxn3w3Lna/GOMME79O98rMny
3cR/osP3TcY9qreZp2dFzNneEJxZEd847BrsEewmbCjWJLCbTpXsacm4A65t
Mu4UQ1fxrrZE3A83wd9I7NlXEnHnNWMP/3AXpOM/XWOPX4xZZwh/LHx6Msbb
xh5zeyaD9pHH8+09pq9xGPSLhL9LxH2Z0Hsk/5VDJzx8Ixr5O3F1mepD0Fjw
ofmR295xM14vSsS9d6Xy/09pLSgvo/Jh97E+gc2LPcuaEHYu6wmsL7EmwL9a
1sPOzsdaAWtX2LbvuvypB2xk1pSwE7GvWXPCLp4v6Cb36HzY16yHYHffko/1
kxH5sJdZA8P2nCeokXtkPnQTB/e4rcrHvxTmkPsl474/7pzjrs8Kj4OMS4xb
IzxuP+qwB/OxLsvaNX1ipPnoIyPdTxgvn0jEvhP6VN796mHJHl8Rc3L2qXHP
T13iz8d/wTvysU8la/kn8rHeydy40ml4zHpYi31IeH0+/gmzrki8GfOwl4A1
APYPsC7K+gr/KGl7/Gun/In3cOZq+ZB73HFv4bGfe3KXOL/kG1rt3bqPOa5K
532L//AfI51L/U3J+BvylMuAsthK/vGJOJ/5sfh6VcSaKn3jFPeVtYlon8W2
n4//2KzTtktGXS1wfb6X+Pfe5JPsp35PrQhbqfiOTCL6Wftk3ClJfdOX+R+F
rV2SjPZMGPM73gxgPjHW9VPP6eds7ZOJ8JOHca6jkyrCXqvvfBF2r/xHin5f
PtzYpvfkYx4FD7zoe8pl8qT15xxvPeuv6zKn7N/Lx/945uS4z6kIGyHn9oKO
0f6+j/J4jRsa9vu0dNjse1WrXW+pub/wRs3Fh2le/nf7cPNPBX9K8BD/DYSH
Cza1Dx5ohD0svK/kP5KePYRzoj0uWpb1Avk3bSGbQ3gl/6JYfxX+RzBC7pEl
QSOsgrVEwWjBGMc93Ol5pH3Eky4J2U2Wh2+sYMuSiLdK8AT/7pS3fhWxXoS7
+P82HzLIorch/8NULFsJtxH0UPp3qY48pZ0v4iKNm50G6BWGlaaR15zjzTrv
j/F/XLrel/6thQeW6tsv+I178uRv2Vj81ZHfOs7zwzn1Ge6MFn5RYTeIZ5Xw
eNpYB7WTDtFuS9x2af/7uQ+Mtp5Rglck85dkn6+O7047f3suFP5auE8y0kc9
ZMT/nPgGi/+p6sjrKOe3CW1CahtVBz+8WdfRGJf5tgobIp4G1VEPdU1/sn2U
B/XRXGHD1AZ2qo66zrgNXCT/Vw31jaiOOOs43i05p8y3VeNqU4WdKtkdhFsJ
PpS7mXA9xzVOMIV0CLYRdBMcLFglPROpY0EDwfmS6a24zhZ+RmFPC2pEv8Lh
9QUTjLcSnCa+Xg30rRB+SrzVJSFzlPzn1tf8sDpoNaaPc3ooA+jI5F0OlAHu
8Y4D/X0kP1np6SW8JW8V0NZqYr0Tuxj7+AiFbaW4DqmO/+D8t+YfdBntpp6+
hcJ1CvH/egvhY+WfIP4jzY+9jcxZ8m9QXnqQdv5PK94z3d//cj9/vn3s7WBf
x+kKmyj+U6vj3yv/WOn7T8r/xw5q99WRH/JI/uq5Hshf3erYs7Wl8FT5Gwm2
M32w6rSe8FXyb++w59pHXVFnv+djbZ5/QpRHN9fjldZBHR/qtB4i/LX4+lbE
PybKsCBavULQ+f/MP69NgsvE808+9A+oiP8s08S7g9Mx2W1na+eTcY18P+M2
gt6Tle4GKpPj3fbGux5PkP9zlfnRwpOsgza3n/ybNZ7sI3y1/I0dX6n8p9dV
v6yOPJCX5wyUATTSzH8Y/g11Ft+ZquuDhL9JRP+lH/dxX/5KcK7c64U/E3wu
OE/+XoIhyGytsac6aOvNO400bat+I7yL/Lsm4x5xcOtkvMlzq8IGNNI8vTp0
ou8L4Q7JsCPuTQTvbsl42wGe9Y57gWRmSna+8Pnyb0iE7CD5r1R6BjD+id4q
GW8HjZK/7zZqh8JNRWuWjDfKhsvfSPTBwpcK+kj2YuFzkpEP8osO8sAbO22E
90jGuwSka/dk3D8NJuxm5+N856W/dG0rnX2rwyb6MRF20V3y/6L031Ydcw/m
HWdSRvJfs53m+MJDk2GnY6/PRV702cJd5X9I9BUG7H1ozCE3JcK+fUQ4nQz7
F2BO+Yj5l1uGdfImFbG3k/GQf4kNukX6SGd/4esVX3/FO4O+nIj0kC7cw4T/
pgyTES/ueeLbSfmaUx1pTCnsYeG75W+2veZC1ZG+TZabJP8Oaifjq0PfcOsk
rQ87D9co7AfxTK0OfWnr3Oi0IJdymVAOs8TXRGmeTlsQXCzZK4TPUtg68XyS
iLLGj5tvXannZF+Kb/ed1M6qw56lDdIWP5f/nx3Fz7gn2sWi9UtGW71H/qTw
N3zbJPsFPIJb5P5a+E3qskmdOq9WR5lStj8kQq6D2/lPjLNNZTe5D/ZNhg31
Gv1Hsi+bTr8k7AL3T/rmCoU115i5pDpsSb7H2IBL5f9NZX6/8GLBtXLfWx3p
Jh2k4UtBb+t7TGHXS8/Dwo8IBsm9THivZNi0881/geOFtk8ybF0wcWPDMl9g
DsG8l7Lq57juFiSSUVb3MV9RehYKt0hGX+VdqU8FZyej/+E+x31wgvi+Uz8d
zRyA8V3ukcI7K7x5Mt6AWut6pU6hofc6z7Hp8zOsmzZwlscA5Gc53nUOXyO9
rVXX71VHX98zGW+GUO4XuV7IyyLn5x3x3aQ6ekP4U8FcyX5cHW2K8EVuH/dY
jraDjYyu98X3t2TfYhwQDJfsB25j35m3t8c3xhTKf4PrjHRRN7wzUy8fe5j5
9vEv+vd0/I9mDwf7KtoJzq5UvgWfCtYZ498ro7oUzJf7NsG+ct8u/JngnMqQ
O9v80PZR+K2VIdNb+HzBl4L/CfbMhL4Npp1vnbdabj9Be8Gd8i8U3CUoyYTs
Xk4D/5x7C74UfCF/L8F5lSEHP7J3VIauOx2+wXFBb+d4NjjsC+djveBcp5v0
zHc5nCn4xHidy2S9ZT5z+kk75XKg4AH57xd8J/hecJHgINEXV0ZYb+f9K+ft
Lqcd/wUO/9ruWhr+PoKE+O4WXiRIyn1PZfhLMxG2yOWGXmjIfWPZDvLfWxky
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
SGXY6vgPFlxWGd9Ovpu16zLYjqwtzRPeQ7gmE3Ocp82LzG+CvOhPOU1VmcCk
sdbm5/tMn6znPF/ueP6wPHoGCqozofsply/lvJ3wZOFthadUxvee736hMsp7
UmXk/UnLVQm2MX1rpwud+crQM8nhjPGsMRzgcPJVbUwcNY5zO8c72XLQ+HZN
93rCdk7nFKeLMu1m3dj0BxrTJg5yG6it/zaZKNdbRPu4Muz0013up9u/h8sf
np7mI+xDwRrBaZXx/eM7SNt+T/C+4GTzIvORoJV4dhHcIHdr4d0Ec+Q+1brQ
c7Ngd6cLdxunDfdch/GN5rtLH+W7z7f+3cr4jtN/6cf0Xb59M00jjO878d9Y
GWlA5qTK0ME8gW82aezhtKwxvZXTTNykYTfzrHG+PnIeoZG2ph433rN+4jnF
5UG5sO7CulBFZay/4E9XxpoOazNdKmM9iP6WETSQvgnC9TPR1/A3tHuC/eMq
o9/RvtHBOk/XyujT6O3sONFbWRn88G5lWfB44/p213e8uG8S7JqJervJ9TfH
9Ub9fWCeG823q8uZ8j7JZXGy+U51eezm8pzj9FIWKYe9b17GScZExk3WimmH
jAeMJYwpzLeqbKM8YVt0gG3TvO0PwnoLzhd8mQp7B1vnHtvgYOz9DQ4/3/Y+
tv5C27zYu9jC7wneT8U9ftxlx911+6RjbQAdyHDPIHfOfSo4LxV3130u2Fc8
bdNx/906h8PXy3Gfb354v0jF3WUfpuKOst3Sce9d8W6zdPhxc/fdXum4/654
n186/Ogv3gdovM5xFdcZUnGP4FOFiOeZQrhJx2OFWKsg36xXYOuDyf/e6cjv
fMe5t+Pdx3T83KnTJB338jwhXa9Q/sI7pON+Hu782TEd99vA82oq7uvpbrw6
FXfxFO/mSYeu4v1G6VhbejkVOrlLCHfxLiPLHWl9hzsMHmSIm3hv1Vh5m2Dv
ktBNegjj7sH1ridw8d7FVNQV5XS76/RT0z8zz9munzWuo9tcFtTzetfjuc7L
NOfnNrcDdJ7k9kRbKt4xlQo7tZXCd0nHXZQ9rHuN4yrecZfyPXbpaAu0b+5k
5P482n7xzkDXMXXNvX2smRXvlDMurqF1jbUD7p7jDrzasO8c3t886CuuZXWN
NQjuNyzea2iMPDZ2pcO4o4P1Ld4Dq71ja5XTQ5nSBp81vcZpvjT177txYPys
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
1BX3co93/U8wjTqaYBp3vnHfW+38GIyfOTLzau7W5Ow19xkyJy7esWne4p6c
dMzj6P/3u7wfcP7J+w3Wg/xilxHlUpwjpWK8GpGKPS3s45htfuJiTn6i03ai
/Sc4bei90WMiYwVzquLaQjrugWztvrub/czDPnA9PuC6bGUdfLubO5/EW5x/
piOud10e5Ju5AnOGa81/nWVOcNqQ6+G4iJN8DXfeRjh/I90+73XbYy8W+32G
uf3f7XY41GHDTLvHbbT4nrzDlrktdnI7om/nzTPEfIxX7L2hv+IeZT9yK9yO
Fzpu+hj9mPVP3qygT7K/iX661PHR3pbYX+b6XOL2Rv7YTzTScYyy/x+Xwyb7
R7kcNpk+zPEMcVz3uZ72dx6GOPxeh3VwGkk3YwJny49PxPnz4r0cgqneN86e
cfa0T6+K9zwvFp5aFe/E9hGeUhXvjvYWvqoq3hS9UPiaqngDtJ/w1VXxDvJF
wtOq4j3kvsJ7Se/8UsUhGC//nrzBJ3ymYA/eHeSN0ap4W/gcwhPBO0/wZ05z
Ud6SFb6iKt5bPld4clW8lXq+8OOCVztrrBPeXbI3i3+u4BfJvCbcTGPgbomg
zSkN/qN4e0H4WcGxcq8S3kc8tyn8VsGVVfFW6gXCE6viHd3zuCOlKt5i7UVa
EsFL3jYpruN5I074IYW9pPSsEP5d/jdE/4PwqngT+ATuTpH/ENEbF+IN5sm8
dVwabzJPKQ1/I7mnkhbBJ7l443hdLtzd5F4r3DARbyNPLA2MDtxN5Z4pPEPw
sfgKwh9RhsINEiGHu6Flj1WaZivNx3BviviOEO0b4Wur4i3WS3mPuireLj5N
+GTBTeI/yXk8hnOmwqfzzrHoPanbRNThLa7HY10ObRJBo55mVMWbsf2FZ1XF
G7ADhGdWxXuylwg3F/914r22NNL2ivB3wi1Fny339aVR5kfwJqRwi0TQkLlD
/qd47014pWTKfNYVejVvZgrfQzsQz91VcVb2d8Flgge5D0j0xebpxluswpcr
bBB5KQ33n4LB9g+y/GLLzitEvEtFe1T4KUFnuZ/Mhdxfln1C/uWmfy/o7jyO
KI13DzcLNsr/ltsYPK/K/UMu2vnRcjdhn7jd0HC/7npBfyfafi7iHOJ4L3e6
/7T+49zXRjjOkaWR5hXCTwsPtexGwfO5eKvwBeHWiehbNwl+dr8jDbiP4j1w
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
I4RvyMV+zMuF5+ZiT+sw4ZtysYdzCN/wXOynOJ/yyMU+mQvJUy72412ci77Q
1O0E9zXuG6uFXxMcJTja+DX3pWNMgw/+HcvDXxv+kvs1fYu+3KTcb0S5D9IX
Xy0LG627gX4NbbXpr1oWGeSPdBjpmJWLvYUDqM9c7BvtRx3mYr/hJdRVLvYR
XUR4LvYxDszZ9nYaZ+Ri32l/ynsPlaFg7z0jvh2d5tm52Ic8KBc08gv9Lu/R
pi7Xd437ITi/wbeTb+hm/z/+y/+T62TjPzX/qy+rUX/bXfHW+I1EwURBt6Tf
phS+IRnvFnCv+gDxLd1N9SX8msKPFu0Y37HOfeefCdYm4w0C3ulqYH2879hT
Mju21tgtfIGgqfScK9xL8KDoZ9f47S/Bx0m/yZiMNJAu3h2a4LQdnPz3jUkw
/rzk72mlMaom3ljkDc3JgpPkn76rxhrhSaY3dBjuSc5rN+ss2E/8fSVTpnT2
rol8TLJsP/lnid6nJvbBX5WMd8hOlf8BxXWi8/Kxy+ETl8lal9friSi/q+We
nox30WZx97zvkm8k+X12VvqEP3XZcs98Y/nHi76tcD3B2Gaq32q15WTo4p2z
67j/vvYue/t3dt2gB30NJHurZOtSVuiSzq2EP+TO+mS8A9fDdUE+vk/G/fEX
OU9rnS/yTdy8sXam5A9SPfZwW6rvejtH/hmin17jd7KS8dYc99lzr/3dPkvQ
qIP0dIgw3qCDd2Ey3lTgDYBOkl/UUnEIFwTb76JpYk3U09NuK1nqQ20gJXxU
Mtrn6kSUQXOXA2XTwn7qYLXb8aJCvE96RyFkXxX9SOE7C7G39nbhmcm4/593
AJZzl7j624PcpckboOK5qxD12Mx81zrOZtZ3lNNzhHD3ZLzvNdt9izRxroLz
FbwPeqjgsGS8G4q7+C5qMt4ahXaYaYeaZ4niPlzpuU94inWhh3tOuH/loULc
h8ydLNx58rDgZc48FaINNnE7fMnpI23ct8M9Oo8Ir3PboR3yJhnh5GGGy4O3
TItvgdEXDbwRVvvuWPFdqGS8LQsP737xVufYZLwRBt8Tlq9Q/SVUj12Eq5NR
t9QxOiZYDzp5Y2ycoa51dZXMdpItqwne+uY/Xv4D1DePFj5G0FjuIzxWTHFZ
HeIyZVwpvmfrsCNdf68Yupv2gMrlG9X7PQW/t2sd1c47ZXCk4rhPbfWwGr+N
5rI4hPeTRK+pCd5q5/Fw+aeJ3q0m+hd9i7GFtjfL7Yq3KRhPGFewaVlv4Bvz
sWSea6v+I/xJadgsZzkcm4Zv7S8KW7if+rTwj4LD5P62JsKxh/iGbZL/iPay
2WpCHptmHf/m5X9J/D9b/1mmf1YathL2Ge7iPs7S0IddxbcNHZ+WBv8Tks/v
U6fOSuGnBfPlfqwm3pbBvsbOZh8AZyLY38m+XvZd8u1saRtotuP81LpfkPze
+2o8EF6FXul8qibsQ+SZSyGH/wan+VPrwE7mn/WG0oiHPcXM1f6SfKnK4Vfn
d63LlP2s7OVk3sN+z89LY//qo+LbU/GuEH5Y8OTedeosq/H+RsH9gunyp/R9
n1oT/7H5r/215dFDuWGvYs/NcHzEi712lWRaSXZSTZTxeS7nr+V/oV2dOl/U
RNpJH3OF7+Rvr/r6sib2m7IXnvnZF6XeN283ecDP/l34mOfxNiTvQo5wWO//
8H9umQ3Se6fi/bQm9t0iz5yPssHPPHidwtqJZ43wesEhcn8i/LKgRvX1vPDt
yXjzhfse3pO/m9rwW8JJ+qfG/P34HqqPHafwtsI3J+OdJN5NOj4Ze/LeJN3J
OJPGWysdJTNFsh2Ej02G7Bu0g2S8wcSc5pZkvLWErnbMD1oo/4wTghLJJoTn
JOPtKN6bujMZb9LwRl2Jwu4Sf1vhk5PxXeMNx3/0Pd5S39Y/eX/J42PxXe1k
+Bln/1DY6KbqR7yFJPif3L/z9ovjIX1bUGfSs6nab9EkYwzeWfT6zaWnJnTP
9PjL9/I9f18XJePbyrdzJ8pX3/cdakLPOo/hlAnzEOYjuyrsCulsXuP3ZEU7
SXCH88o7QHcl4ztM/m9Nxps9vBmzWjK3qR5fFH5bsK/q7jXhE5Khh72St7lu
kXlDYc+K/1XH9bbj+1D+BZJ9h/HAuqnLYfJfpznqIOHBgk5yDxTmLTneY9/o
uGgDtW3hBMc7z22BOm4pvrbKY7OayPexbg9z3Y6oY+qx+Naq8cmu030ks5/q
eg/S6PKgve4u/x3SuQv9XtBQPK1r/pUnf++zNin8QannOcn4xk/nfDW2ZsFv
K/M9MfDOMTTePP4lGe9I58V38v6a3wrfZ37ek/pR8FMy3mE6wDTCeGOIN56+
FfSTTLaj5jeF0Mm7XD/TlgqxVrxTIfyXWNedru/9HP+vTgPpWpyMN7kvk8wT
0tm/4HeZnBbi/S4Zc8UBCjtTPBcLXyB47CCNW4V4q+o+p/Unx0v6+ypsrXh6
FyLOgY53seOmbHop7HTxnO28/Ow0fuv8fuN2e6fbbstCnGXjLOfuvDvIN0B4
O+ZtJZqrUg/JeAuOd9oYH25yH+T9cd6jbl2IsWKe21In1js0Vz2oEGPXAreH
9cnQhZ6vnRbe1tog+DIZ7y6h439ul+dYBv6tuc+Ed/oKYXORDsao4lt21sG4
RzqKb8XZv5t5zjPfrpI/kO99If718G9nKPclClbzLmEh+Dc4PeSVMY5xp34h
3nLkfca63LWo/rXZY+Bc95EvHBf5ZJxh/s5YM6YQ/+/5R7/QYYw/Ryc8zhjj
Z95N3ljTZP2VPnucx/CTJJ8+UPUkfLzgwwMkwzqToIfoJxaCt9jfBb/ytpbG
zx+ro244a8G5k56cnxT/ybRBwUdy9yjEm9XFuX0ibADWfK81rbvnd9zjdHBF
3N10VCLm7KSZO50OqYg7l5izk3bWi5m7g69zHkjfsZYhv0cZjrQu7AHWbFm7
pZ2xrktZMLeDNsPpWW0ZbAjSiExX5WGZ2l5ZIcZIzpNw7oW2zXi2RyH2S7CH
YlDB74UJ7nUfxY7DnhvMnF59c2AhwuiT8PZzP+5vf8LyjAfUa3vzXGx9fd33
vnNbuMcy3zkexoFzFEel+uzpHrs6OD3M9Zjz8T417Y/1fMqiIL4VGutywocI
3pe7phDtj3M4N7ktveF2RV/ifE3tW4qc04GPfkJbwM8b0dge2BiHS1dXtatu
9DnaltyHCR+DXST3EQW/C50MG2VvbCv6eCH6OuNLW/fv/3/fshD3PvPW0hL5
y5Lxpj14qaCc8UhhDwrvJ3yZ8O+CQck4Y8KZkm8LwYsMOgYL/krGu41/CC43
/y/ie0f831vPb9a1XNBZ0Mmyf1r+O/GdwF514b8EJ/EPSXiTwv5JxluJjwhW
JuNNRMrpyWTYYoSPME/KfGnnaZnz1cl4mdPxh9P5eyHOqXB2ppPDlzttlzt9
f9qNDO8vbnJcDzs+3mHkrifuduLeV+x3bOYWxoyV9MUpCjtX39MrCmEHYg9i
VzLnYv7FvOsqhT0jnkmFsKOxoalX1jBYO8HWWiF4KBnvWs4UX6GTwgvRBrCN
2xRiraWxZbqaF5nrGFvFP6MQ5b7RdXeD/KtEn1WI8ks5f38n/Qam8/638z9H
fBvEP1u4XoewGcc6rocsu8J1XVvnK5yOYdaJrvmS791ZfaAQcQx1em6R/2DR
byzEPljOkv5ZiDov9pFktPu6HSLepNs07bZS+LFkvI++ZYfoI1t0CMDN+90l
hZiLMVc/QPC23AnhOuaDJ2sdjyf9NmMyvoWPmUbY+ELsUWCvwkRBNXsF3OYH
ut0zN6BPMSfhPUneM/zKbjDf4Y6SKVe8HYQrBO/K3YU5kaCzxpZUIfjh7eM0
kM9Hk/HdRiffSr7bzE2ZlzIHZl67t+PpbV7slDc9Ds83H+M0fZ/xYK9CyDFv
YE48UrA5GWXzXiHe/H2LMivEe/TcNbqV2wBtYbX8/dNqiwWvsQieNrCGAI31
Bd7fnmB/lfnGuM6oV3jQuZX99VzXT5oXmQ2FeNuD9zuecNug3l4oxHtZvKv1
ciHuUeMetpHOxyjna4Tzxjt03IX/ifDHgl+Urw8K8T4Ib4as4TvP90v0dwrx
zixjzErXAXVR4fqm3n+1XvT/4zQ97nZb8R858jvaef7A8/DTbFuzbsK/lpma
39wom3oaNnQ2zqFx5myj18zZC865pOIZas6nOfxg/98unhcTfjEb59aQfykb
59Dwv5KNs1ucMxtiXfS3Z7JxDrC69n+61+c3Zv7dh/5sNs5Jwvec4+wmWGVM
2IPZOKvGWTLON3LO8eJsnB8H4/+tEOcAOdf5vcP7eT2Cs2esTzyQjTNo+B/N
xtmqCqd5qPP+q89JsPfg4WycD+nq/QXQCGPMv9zjyePZOLtVPB9pjN7TxPeh
YI1grmB30W4W/kjQw/Q1dsO7m8LnCLfOBg2+npZr8x/Zj02faxnC58l9i2CP
bADuNpbDjWy1y5gzljUu12d81qNHNs57DMr6PKMx/t9rz4Z430JtGLSVLj/O
gd3r9Z8OgiezcX6Ms2hPu/7zWY/BmfhePmUafE+Yl3JkLw//29mXRPyXOw2c
u/m1NP5lJkW7x3EmjYn3BME7ghMFpwo+EHxoOM002jP7ODhP+I5l3hYcL3jL
7lcFq7NxTvFlt2/a9hrrQd9LDjvcvK9lY9/XK5bvbt41Lt81LuMeTscpTh/3
23CvDXuAXrRe+hR9kL5KP1ycjT5A+3/OYQc7ztcFRwveE5ycjXkP8593hTcy
r3Q8xPe+eWp53zedcnjX5Ya9fIBtq9Pd1mhzxzie111Wx7m8OGdU3HuT8Z6f
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
rf8HimaWNA==
          "]], Polygon3DBox[CompressedData["
1:eJxNnHf8zeX//4+99957vo+9zuEcnHNe59DSUFS0pGiRppWGEiENpJTQUEmD
oqmk0pBUNmlqb1E0/B737+Pq9vv88bi9Htfe63k9r1ezEWNPGlM8FovtLxWL
ldR3YyYWS8djsZTwrvgOISeeFbaLV8vHYqXqxGLThNri22T3mtzWB/cjsnuv
fSw2qCgWK1GIxV6VXS+59RReEf9L7o/LvYPcY3KPZRVObjuEYuJt5P5o3Vis
fb1YrEi8nVBO/Baho/g7iuMl+X055G+tsFp8TYi/juLs0iEWWyk0FC+uOE+V
29AQf6OC3bp1jMWai/8T6VsrFntAKKb49yqOgvzmhY/FDwtbxLcKf4n/LZwi
fnIwtyg4rmeEtuLfye5YuR0jfCteTnG2rB2LPSRUou6EEuI3CuXFf5Gf4+V3
kPCzeIm880KYMuLNhLZ1XSetxL+Rn3fld2OI/ydhk/j7IXyFvOOmjaqKH5Td
SXI7UTggvkd4Q/zNUL4W8jO9ruu4rfgBoai92+iweJW8895a8dUQb6AynqT6
+0hoIt6sYH6yyt9K/E3F2VtxJ4U3xF8Xnhd/IZg3C6+Ivyp8IF5DYZ6Ku81q
i38ou/4y9wvuR9Q+N9RynZVU+rXk54O481BP/HP5eUvmt4UvxPuqjeckYrFb
hbT4ubIrL7dywk3i1yuOZNNY7Lkmsdi14tcJXWR+SuYp4tcIdWW+S+bJ4hOF
J8U7N7X7VOHupvZzg/g04Wnxrs3UR8VnCPWb2c/0ED9h8XOj+Cyhm9xXNrX/
BUKP5uo/spsvfoewSrx7c5vxT9zY3Rbc8dstmCflXZZewgTxm4UXmrqMN4nP
ERY2c55uFb9TeEm8j3C7+Oy8OWFmUjYh3dx+7hKfJzRs7jjmiv8sLG+n8Sn8
FMpPWbqE8lEe8v6scK/4y0KuleaIlrHYi+IrhKbi97dQHyMu4VXxfsKj4kuE
xuL3Kfxi8UV5x9VTdkvFHxPWiCcUxxPiDwq9ZF7d3O73C2ubuwz34TfvtDPC
s+LPC82VnyUyPye+Gjvx3rJ7QbyN+tuZJWKxT4S4+Kq8/ZLnlSE/pNUjlG9h
3nmlju6hL+SdFmV6UvypvPNKGs8Ec5K0Wzj/L1H/pN3S6ZMfeDL4fyjvuqFM
D4h/m3fdP9pWc4H4D9SvzK/J/J34euH1Vq7zdSF+yvai8Cp1gV0rp4n5Dean
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
wtylsHWrai8oviZyXH8IL4k/Gzkt/DwvfgZ7mK7qa4rjHPFiWqsvVVrjhOI5
n4eHiQ8XdoifqzCjy2rdF0ZHXl8vVt3+GPa/l8iufDmXeVzk/fdGuR3Xx/vT
CyKHpY7HiI8SZpR1mIvEZ1PmCspDRe2dI6/vtC1prAz7k6OSblP2s18oT+ck
vV9m38yeibMZnL3UB/qeKrfThA/FPxJ2yn1Hwuadwp6Ez/yUr4TK/CttnXD5
J0Ruu9nCNeRdfkYqrvOE78Q/Fs4UP0vYK/4JUNi9CZu/F/aRn4T9sz+hL24M
55H1inO82uqQ8Jb4BvYX4vWraQ8jfpT6+GT19WuQCSLbYQ+k+ewf4VjGglBM
bjHGBHdzwrXi1wkniJ+YsduRIpsHcKcpflgoZHzfdIvcZwrTQvxT4o5jELLI
jNP6u8jpE35S3HkaGNK/XvwG7hjFTxNKipcQThU/JWO3qci8gvuN3G0Jp4uP
EGbEnQfuu85AhiZeShgufpZQJm67M8WHZRx2WnAfmnFaxUP8+L9ZfLpwNulx
RlL/Tqt/nyl+g+zaya2t8KD4A6rjOytp/tWYWyZ+n1C9ku2WiF+jMK/p7JvT
Ge0G8evpczKP7Onz8LrIY402e0P8rILTYkyOLPj8jN994bx/bsFjjTljlPjL
kccmfeC1yOf/1+U338vn4ftld5nysl94kLEt3F7ReVwovly4orLnjKfEJynM
iB7O47Xs9YVMD5dhcsH3y9xd76TOVP5HI5edOWgFfY85r6LTXCQ+ruC5ijiu
Ep9acF28HuQTVxY8F5HmBM5ain+b+vpWYaP4u8IpGhtDkjZz/j1fZfs6yCfW
yW6z/L4vvCr+qPC6+HrhEfFlQk5ho6TNNytPYyp4jpgVWd5BXKMTln+8Ij/H
y+8JScc3Qmgm3ly4CdmjwlRW2DnCDPE3ZHeS3AYLb4pvYI5gbkjY/CR2cOEJ
xrrQRH6bMubFhwuLSFsYxlyDjEpujZhzsj7/HdA8cpnOPyUGWB6HLAuZHfKx
F4X3qCvhBfFnhXcSlvFwBluBDA+/Saf/PDI68eOS9n++8BBnRWF61vJaZOXI
3JDfIl9F9oVMF/kb8lNkschMka8in/4tYRl5qSBvQ1aIjC8X5HHIBg8F+SPy
QmRz3BlUCvJBZPvIHJEHcl+AbJ87BOT/yPu5O0BmzH0B8nxkydwhID9GXo9s
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
ircSLpTbRUJrxq4wNu4yd2bsCj/J749FDt8m47DfFdl/C+GCuONoGczfFrkP
NQ/x/VzkODqG9C+OO0/txVtzv9nRd9rtw/32JvHjghl3+MYOip+7W+0Pz05r
vyZ8JH6K+kTpMto7CqeJb5Ld3pT6IPf34huFM+T3zLTNW4TP5PZpyuF3COfK
bST33+KNuMMWLyM0Rl4qvCK/a4WF4ruEL8W/SNn/q8JQ+T1VWCf+GnHKbXvK
5j+F/Snfl/8hfozyOLK01ijhBPFPZfe13L4SPhFvJkwXv1loKv6LMFZxXyr8
Kv6CcLL4KcKL3MPjR35/Ttn9LWG3+C5hg/ibwunyOyxt817hfPFRaafXQLhJ
fm8U6ovXEUrIraRQV7yNMFNutwitxUsJh8X/EkqLlxMmi08SylKXwqPijwgj
xM8iDsXVVjg7uLcTby9MEx8pPJZyGMznCctTtrtZ/MTIdXW+2ncI982yu1Zu
U4TK4hWEf8T/FSrmrD9zfMo6CehvdJJdFaVVVegs3oI8i5cXWorXEm6Q3+uF
muLdhNvFbxO6incQbhWfLcTJu1BRYStRhpz1aX7uo/ZJWd+jmuxicismVKev
CBekrS+A3sB3wsXil6CDgj6D8KPC/pCyOakyflZSdVdK82tk/ZAr+mrODvoH
wyL39bJlVbfc3yrMlYrrKuGfnPV5xvRxntDvQZ9jsMJuCfon50QOyx3FeeJD
I9ft18Jw8TR33kp7qpCJrP9A2uggol/RLbIuIHlM4Bd5v9KegDxQvKRwSGX5
M2XzUdip/W4Sjous77Spj9sI/aatBcsS9wf9E/RlyCs6huhf5BXmi1IeM0eL
d4msa3i90EO8V2ROnvtw/xO5LNzpjIisz8RdDnWCfhP6RdzdbAr6VpMZs4xV
YZH4NcL6lO3uF5+Us9urwn3iE3PmzAn3ik8RXk85zGLx8TnPFS8L99BXhTdS
9rMkZ50UdInoC+iSvKTvVpm3pDyeTxNaqi5aCaeLXy9skNubwgPiU4W3xd8S
HhJ/hDlFfo8VHhU/PnJdMycOFv9Xdgfl90DK/eO6nOMiT0sZe8yR4u+mHP4p
4X3xTcKT4quFD1PWiUIH54ac0yZPD4o/IQxS2sen7R99nRPFPwz6VGfI7mHy
Kgxn7hEeT3mMT8/5/uw7tdUF4f7tbKGY+HXK/5mR9U8/LaG+XsLvQU4XrpVb
rKzdB7E/UHn/FU6iL9Mf5Fa8nMZc5PnjK7mdF+bbk7lTF58S/F8slJDfG8ra
P/d3t4iXC+OD+HAjTyMjz9/E9WUp90f63w3qf8VCf2T8fi5+ThgftMc0+S8V
+v9Axmwp5/nYyPePlP2bMu6vlIe8/VPK7oxX8jK9jMc79UPZrw/56SlMUFqH
hd6R18MyZZzm4FBf1CVlPjWyztavKcvwkeX/ru+4tMfggTA//d9chM6b+Dc5
c/Spvg5mdOmYw3Bn/DPW/xCKif8ku59SntN+DPMbc92YtM0x+bk67TmjWOif
zF3YHQnuxEWfxcx4pm5GhfmJ+QpOmw4J7Unb0ycoH/MjdVUm7Ae4v61Qzm3K
fexhxXlF2nPmXznPn4yN31M24w5nzT6U8/qNbhxhMFPfE1XXh9Qfu4t3pvwl
3AaYmR9pe/os+tKjGSOKawVrqPiFjDHGljBLfKzwrPgzwu2sDcJK8aeFW6k7
YVXKdnMYLzmHJc6Z4v2Eu8TnC31Z6yLruuwWaopflHNcpDlbfEzOaRHnbbS9
sEZ8tXCn+KU5c/J0h/hlwnMp+5lLXQjPp2w3Tzwv3CN+txCxFgkvir8g3CV+
dc5z4Uv4oa1z5vhZQFvk7Jc45+esP8laSh9FnzEju7qq+3pCVryPUEu8tpBi
vRTmknchkfP4YuxMFgph/WHs3SjzgMjrCWP3XCESzwqTSnlMFsL6V6KUx3Sf
sN4wtq8rYf32lPBXSfeB3qH96QvjhY7i7enfJdwnMI/Kue2Z82bkHJ6xSpr9
Q/rklTgxD5afZipbc+Fk8ROFxaxFwgniPYTqcqsh9KT9I5eFOYf9wnGyayy3
JsIg8QFCA/GGwkDxocIDzP3CEPFc5LopEdb7Y2R3H2ubcHTO45mxyx7055Ae
e5MvQv0Rnr0Cazz1i34Sb4ufEEoXfD7kLImMpnE4X3JW5MzA+QB5DbJKZDrI
b5DnIrtFRot8F331MnX9Rpb3Z5zHONtwpuB8grwTWQ8y4brh/MNZjTMv5zf0
33g7uyzo2yHPaC23VuE8jXyFu/M24bzN+RveOsg7OG83EW8c5CmchzhLcUbq
GM5nzTj7hvMY57eW4i3+53zXPG4/94XzPGm3DOc7zoP4bR7Of8g7kJ0gM1nB
+bbgukSmUrHg8xxnMc5wnJ/ystvZWWO+i/o6XG3QsLrSEj6mPQt22y0cz36L
/ltN6cp9l/gnkf02rqE6FB8gP0n5fUE4Vnx3ZL//CJ+K95PdqZ2dZq7g8zdn
ac70pcP5+7S4z+ic79EfLVbLb4jRNzwnY10GdCRuzFgfkrbhjTXvDUsV/Hb9
faFcwedNzqacGf87r3L25IzZMsgPONsjw68azvvIEpBBVAznfWQDyCCQR3A/
wF0BMgbk/cinkOU8EeobHV3kS6sy1t1F3oRsqXOwq1Bw3ngjVaVg+VpD8QZx
yw+RJ8Lrxy0/RN7WKG4/yN+Qz9GXsEP+hrwRv/Xili8iP6wrXidueSLyRXjt
uOWVyCPxi5//5ItVyUvc8kTuryrRV4I8APkAvELc91vUf9m4dVDQJ0FfhbfZ
ZUN7IP+rLl4tbnkk8rPKccfJfRj6LOiqoJOC/gr3Z8TNG2/0bdBfQTcGnRj0
ZdBvQfcFHRr0Y5B3Ejd5/k8eSt5JA/kc8tWa4jXilkciz0K2hUwG+RX6QOj+
oDP0nz4PukTo+KA/hH4Ruj3oBKHPg7yEsckYRl6GvBTZJTLUZRnLU5G1Lg9m
5JHIHpEhPp+xPBFZYbdgzqjNn+vsMVIoWB8IXR10ltAXQl+WfzMwZ/G+Bvkq
ZaFOkacif6Yta8Utj0Y+DafMyJPRb0LXCR0k9J+QvyFrQ6aEfA75G7I4ZHjI
q5BHIXtChoe8CXkUsil0mtCHQj6ILBAZF/I+9P05a3Gm5L3BYKFPV+sUnSo+
VBje1Tp0wwp+7/p2W60F7fz+lfeobWR+JLyfRZ+yYwPtSYI+LO9pB7Z1mH1B
v7SS3G4N+rTon66o7zDoX6I/zL8mltez/jP6y/xrokJ96zejLxqv7zDoq/J+
l7TbtfP7a/RbZ9V3Guiv8v785eZaC1v4vTbvVxeJN2np9+7os85vonZq6v8L
8J7+sXb+5wLvb/m/wAK51Wvm/wfwPwL8Lgj/G+D/BQnx58P7ft57r2+ltbC1
3yfzfr5RC6fJe1nej5OXV1r4fT3625RtVtDH5T05ZXksvOfnffaGNq5D3iOj
j0zdVWlo/WLeU7eS+8Ph/TT6yZ3l9nRD66vynrvQxnHwvht9ZdoGP+gv896F
sxkyAd53oL9M3Lc1tH4177OJmzbeE/RdqzXS3BP0d3mPTVnfaO335ejLknbX
RtbX5b00feXd8D4Z/XbaljZE35f3y7ihE8v7Y96TP9jaZeJ9OPre5IU00a/l
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
Thjut4/K+e4VPwODmbvbRmnfx3K/uyjlO9pjOWvlfDeMHfe96PNx1kSHsWHO
98lLUr5DPomzTs53v9j9d7/cNO07Z9y5zyev3BkXQvzcJeOH++dhOevyPJiy
fhLxcVfdIu37ZPSXcOOO+dSc75txQ6cJM/MLc13Ziq5P7pspG3fWlIfzMrqI
nGHRP9ytOfXjhN+0s//BzF6IN+p7sn6fzlv1s4VPxT8TPk34zfp/Ztx4U/95
1u/becv+f3Fm/d6e9/WEwf1r7BL+X9FXwcy/s3gj/03W7+V5+44fzPyzireI
/POIfx8xXhkbf4f57EfZn5/0Pw9+yvr/B/x74auEzdQnul7IyNCP4n09b/EJ
84P4/qzj558Nv2UdH2F5g/+f+wVJ/zOCPPB/B/6tgB3+0Y+ombbORO/QX9EV
mZey/kSrnHUhK6St38l7yXEVvSbwvwLeZ98hc7WKft/Ie+rfKtoP7yl5X16j
kv3wfvteoYLMt8h8j/gjjC/NNbNk93Dk9NAlnZGy/uV82c2Q3/KV7J/w8JnC
4jD+6Cv4mRv5/fjllZwH3nPz3ruW4p9bye/d+f8Ec1ut8P6b9ZK9Dnl4POSn
YmWvoZh5b36l+O+V/J6R/JD3ciG9pZHzXiHkh/9ZMLdeGd6nI+/n30ixIB9H
3xP9PmSOyCu75Kx7Wi1tfdImOev2TktZvxh9Yzg6uIxX9H/Lpq2j2jxnfVXq
Cp1gzEU566LOSln/lPjQVSYM+sLop+KGzm7bnPV3aVt0VjHzXpW2ZE/Ce1fi
Q5e1ctr6rb1y1i2hzyRC/tGFnZOy/iz6sPhFp7ZjzvVDW1GntC//H6AtaoT/
DaB/S1h0aDuG+NHVuSNl/RX0WeDo3HbPWf+WukLHBTP6PvRVdHzov7w/pa0u
D/8P+H8GKvRE
          "]], 
         Polygon3DBox[{{18132, 15723, 17383, 17382, 18178}, {17933, 11311, 
          16817, 16818, 17938}, {18088, 14699, 17142, 17141, 18177}, {18087, 
          14691, 17126, 17125, 18176}, {18133, 15731, 17399, 17398, 18179}}]}],
       Lighting->{{"Ambient", 
          RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
         "Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{0, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl1mOQXVkUQOEVTWzbto3JxLZt23Ymtm3btm3bNiac1ZUfX92u7vcuzln7
Vids0LZCm0BA2MBQMCEcUKFEcEhFEsMRFUsCx1QiKZxQqWRwSmWSwxmVSwHn
VCElXFClVHBJVVLDFVVLA4H/hmsea6SFG6qVDm6pTnq4o3oZ4J4aZIQHapQJ
HqlJZniiZlngmVpkhRdqlQ1eqU12eKN2OeCdghSEDjnhgzrlgk/qkhu+qFse
+E9B/4EeeeG7euWDn+qTH36rXwEI5L2i3/78Sz/1Q9/1Tb+LeB6PX/VFn/VJ
H/VB7wO+52feeXyrN3qtV3qpF3quZ3qqJ3qsR3qoB7qve7qrO7qtW7qpG7qu
awH35HWueryiy7qki7qg8zqnszqj0zqlkzqh4zqmozqiwzqkgzqg/dqnvdqj
3dqlndqh7dqmrdqizdqkjdqg9VqntVqj1VqllVqh5VqmpVqixVqkhVqg+Zqn
uZqj2ZqlmZqh6ZqmqZqiyZqkiZqg8RqnsRqj0RqlkRqh4RqmfzVUQzRYgzRQ
A9RfqK9t/LKT3vphNz31zZYG21J3j1/tq6s+21tnfbS/jnpvk4Nssr3Ht3ba
Vq/ttrVe2nFLPbfr5npq50312O4b66Fz0FD3nYv6uuuc1NVt56a2bjpHNXXd
uaqugTZ71XmrqsvOX2VddB4r6rzzWV5nndeyOu38ltZJ57mkjjvfxXXUeS+q
w85/YR30ffCP9idwJLQ3PuTX7niQVzvjQm5tjwM5tTU2ZNfmWJBVG2NCZq2P
ARm1Njqk1+pokFYro0JqLY8CKbU0MiTX4kiQVAsjQmLNjwAJNTc8xNfscBBX
M8NCbE0PAzE1NTRE1+RQEFUTQ0JkjQ8BETU2OITX6L9852lkMAit4UEhpP4N
AsE1xPdhMA3y5RhEA8wg4D3pr/DP+FH8Gp4CT4enxsvgJfHyeCt4W3iLeLt4
6/gY+Ej4ePio+Ni4BLgcuDS4TLhkuHy4lLisuMS43Lj0uA24Jbg9uFW4bbiF
uJ24tbjNuOW4/ZgDpoGZYDKYD6aEWWFimBumhxlikpgn5orpYsaYNCaOuZP/
zwgEvBIxZUyeQiosXz8UVTEVVwmVVCmVVhmVVTmVVwVVVCVVVhVVVbWA9fSk
1T3WUE3VUm3VUV3VU301UEM1UmM1UVM1U3O1UEu1Umu1UVu1U/uAPfM6HTx2
VCd1Vhd1VTd1D9hTP9PDY0/1Um/1UV/1U38FNoiBCmoUg/WXYQxVCOMYplAG
MkJhjGSUwhnKGEUwlnGKZDATFMVoJima4UxRDOOZplgGNENxjGiW4hnSHCUw
pnlKZFALlMSoFimZYS1RCuNaplQGtkJpjGyV0hnaGmUwtnXKZHAblMXoNimb
4W1RDuPbplwGuEN5jHCX8hniHhUwxn0J/vy/8D/U4EkB
       "]]}, 
     {GrayLevel[0.2], Line3DBox[CompressedData["
1:eJwN0VtkFwAAhfFvl9ba2tZurd37t621trVba21rrTUzk5k1k8lkS5LZZjJJ
kqykJDOTZGaSJJNMkkkyySRJkpnMzCSZmSTJZN/Dz+E8nJcT6O4/3hcEXNMW
3VKkxW1FBcMdxYTAsGJDYUTxm2BUiWFwV0mb4Z6Sw+G+Uh0aU3oEjCszEiYU
2AoPlBUFD5UTDY+UGwOPlbcNnig/FiZVGAdPVRQPz1SSAFMqS4TnKt8OL1SR
BC9VuQOmVZ0Mr1STAq9VmwpvVJcGM6pPh7dqyIB3asyEWTXthPc6FoAPat4F
H9WSBZ/Umg2f1ZYDX9S+G77qRC7MqWMPzOtkHnxT515Y0Kl8WFRcHXQVwJJO
F8KyzuyD7zpbBD90rhh+qqcEVtRbCqvqL4M1DeyHXzpfDr81eAD+6EIF/NXF
g/5zFP6ZlyphXZer4L+uVHvuIbiqhHoIroEhhR6G6wqrhRsKPwI3tQE9BVMF

       "]], Line3DBox[CompressedData["
1:eJwN0VtkFgAAhuF3a21rW2trW2tta/37t3Zq7dTaubUmyWRWkiRTSZKaZCaZ
zDYzmVkmmZlkkpmZJEkmSTJJJskkM0lmkmQyM70Xz8179fEFzrcdvxYC9Che
d5VgGFZSKNxT8ga4r5QwGFHqRhhVejiMKSMCHigQCQ8V3ATjyo6CR8qJhsfK
i4EJFWyGSRXGwpSKtsC0SuLgicoc8lTlW+GZKhLguaoS4YVqkuCl6rbBjOqT
4ZUatsNrNabAGx3eAW91JBXe6WgazKopHd7r2E74oOYM+KiWXTCnEwH4pJOZ
8FmngvBFp7NgXmey4avO7oZvas2BBZ3LhUVdyIPvupgPP3SpAH4qswEu74El
XSmEZV3dC7/UVgS/db0Y/uhGCfxVeymsqKMM/unmPljVrXJYU+d+WNftCo+r
hC4FD0FoFXQrrBp6FV4DfYqshX5lNUJUHdxRzAEYUGw9DCruIAzpP4xSU0E=

       "]], Line3DBox[CompressedData["
1:eJwN0V1kFgAARuHTWmvtr7W/tra1vtba1rbW9m2tba21JpPMrJkkSc0kaTOZ
mcmkJskkmZRkJpPMzGSSzCSTycxkJkkmSZJMJpnZuXhuzt3rDVxsP9W2Abil
FD1WquGJ0kPgqTI2wqACoTCkzE3wTFlhMKzszfBcueHwQnlbYEQFETCqwkgY
U1EUjCsYDS9VGgMTKtsKr1QeC69VuQ3eqCoOJlUdD1OqSYC3qk2EdzqeBNOq
2w7vdSIZZnTSIR9UvwNm1ZAKc2pMg3k1pcNHNe+EBZ3OgEWd2QWfdDYAn3Vu
N3zR+Uz4qgt7YEktWfBNrXvhuy5lww9dzoGfupILv3R1H/xWex78UXENdOTD
sq4VwF917ocVdRXCP3UfgP/qKYJVXS+GNfUGPaYEbiikFG4q9CD0KawMbiv8
ENxR8BhElMNdRVVAv2Iq4Z5iD8N9ldRCXBU8UMIRGFBSNTxU8lF4pHVQK1N9

       "]], Line3DBox[CompressedData["
1:eJwN0FtkFgAAQOGzS2tbu7XWWmtbW7u3dmtta621tr9kZqZlkkwqk2RNZpIk
qczMZJLMTJpkkmQmSWYmkySTzGQyyWQyk0lm0nn4Xs7jyTjX2XI5CLijDI0o
0/BE2cHwVLkhMKr8UHimgg3wXIVh8ELFG+GlSsNhTGURMK7ySHilyk3wWlVR
8EbV0fBWNTEwodpYmFRdHEwpsBne6Wg8TOvYFnivhgT4oMat8FFNifBJzdtg
RseT4LNObIcvak2GWZ3cAXM6lQJfdToV5tWWBt90Zics6Gw6fNd5R/xQ+y5Y
1IVM+KmLWbCkS9nwSx05sKzOXFjRlTz4ra58WFX3bvijqwXwV/V1cG0PrOl6
IazrRhH8081ix5fALQWXwm2F7oW7CiuDHoXvg15FlkOfoiqgXzGVcE9x+2FA
gXqIr4L7SjgAD5RYDQ+VdBAGdSQAyTUwpJRDMKy0Wnik9MPwWP8BlHVTuQ==

       "]], Line3DBox[CompressedData["
1:eJwN0FtkEAAARuHT7ltrbWu3trVba62t3VprrbXWmkwms62ZSVJJJm1mJpNM
KkkmSZKZzEzKZDKZSZLJZJIkycxMZjKTmUmSnYfPz/94Ms93NnVsAm5pj14o
32NUBQHwUkWBMKaSIHil0mAYV1kIvFZ5KEyoIgwmVRkOb1QVAW9VvRneqSYS
3qt2C0zpeBR8UN1WmNaJaPio+hiY0clY+KSGbfBZjXHwRc3x8FUtCfBNrYnw
XW1J8EOnt8OsziTDnM6mwLzOpcKCLuyAn7qYBou6lA5Las+AX7qcCcu6kgUr
6twJv9WVDavq3gVr6smBdV3dDX/Umwt/dc2Q/3Q9D/6rL9+oe6GpBm64AQVw
U0GFcFshRXBHYcVwVxElcE+R+6BfUaVwX9H74YFiy+Ch4g7AIyWUw2MlHYQn
aj4GyRUwoNRDMKi0SniqjMMwpFO1kFUFw8o+AiPKqYZnyj0Kz7UBVUNT9Q==

       "]], Line3DBox[CompressedData["
1:eJwN0WlkEAAAxfF/21prrW2tXa21e2tXO1trV7skmZk1ySSpycy0SZKZyayV
TJJMkswkk0yaJElmMjMzSSbJZJIkySQzyf4ffh7v43upZ3uP9WwCrqpYUyq1
eK6yAHih8kB4qYogeKWqzfBaNcHwRrVbYFr1ITCjxq3wVodDYVZHtsGcjobB
vJq2w4Kaw2FRLRHwTq2R8F5tO+CDjkfBkk7shI9qj4ZPOhkDn3UqFpZ1Og6+
6Ew8rKhjF3zVuQT4ps7d8F1difBD3Xvgp84nwS/1JsNvXUiBVV1MhT+6lAZ/
dTkd1tSXAevqz4R/GsiC/7qy19GyYVABOTCkoFwYVnAeXFdIvhvXww0zdB+M
KKwAbiq8EG4psghuK8oj7ii6BEYVWwp3Fb8f7imhDO4r8QA8UFI5jCnlIIxr
uAHSKuChMirhkbKqYELZ1fBY1xohtwaeKP8QTKqgFp6qqA6eaQOwRlSX
       "]], 
      Line3DBox[CompressedData["
1:eJwN0WlkEAAAxfF/a1trrW2ttdZau9vW2n21drRLMplUkplJzSSpSTJJJmsm
7ZCZSZJMkkkmk2UySSYzSWYmyUwmmSSTSfb/8PN4H99LPtd+4vIG4LYO6rUq
LCZVFQBvVL0RplQbCG9VHwTvdDgY3uvIJphWQwh80NHNMKPGUJjVsS3wUcfD
4JNOboXPOhUOczodAfNqioQFNW+DL2qJgq86sx2+6Ww0LKp1ByypLQa+6/xO
WNaFWPihi7vgpy7FwYrad8MvXYmH37q6B/7oWgKsqiMR/up6EqzpRjL8080U
+K/OVEdJg1sK2AtdCkyHbgVnQI9CMuGOQvfBXYVlQZ/C98OAIrOhtxbumVE5
MKjoXBhSTB4MKzYf7iuuAB4ovhAeKqEIHimpGB4rpQRGlFYKT5R+AJ4qswye
qa8OsjxzVNnl8Fy5FfBC+ZUwpv56KKyClyo+BOMqrYZXKquBCa0DXTFUuw==

       "]], Line3DBox[CompressedData["
1:eJwN0FtkEAAAheG/tXZvrbV2a/d2a1trW2tbu7U1SSZpM0kmlcxMTTKTJLMy
M5PUSpKZyUwySZIkTWaSzMxMkmSSJJmZSWb/w+dw3s5JP9vZdHEDcEP1mlSD
xXsdCoApHd4I0zoSCB/UuAk+6mgQfNKxYJjR8RCYVXMozKklDOZ1IhwWdDIC
PuvUZvii1kj4qtNb4JvORMF3ndsKizofDT/Utg1+qj0GfqljO/zWhVj4o844
+KtL8bCkywmwrK5EWFH3DljVlST4p6vJ8F/XUmBN11MdnQY9CkiHXgVmwE0F
7YQ+hWRCv8KyYEAR2TCoyBy4pahcuK3oXXBHMXkwpNh8uK/4ArjrwQ/MxN3w
UEmF8Egpe2BYaUUwooxiGFVmCTxW9l4YU24pjCtvHzxRQRk8VWE5TKioAp5p
6CCU7IfnKq2EFyqrgpeqqIZXutcAlTXwWtW18Ea1B+Ct6urgndYBio1U3w==

       "]], Line3DBox[CompressedData["
1:eJwNz2tkFgAARuGztdZau/ft0lq7t9bXWttaa621rTXTzMzKJJNUkmTNzGRm
ksokmWSStmaSJEkmySSTmZJkkswkyWQyk8lM0vnxOLz/3qyTHYfOhwBX1KB3
anR4r6ZQ+KDmVfBRLWEwrcOr4ZNaw+GzjqyBLzoaATNqWwuzOhYJX3V8HXzT
iSj4rlPR8EOnY2BOZ2Lhp87GwbzOxcMvtSfAgjrWw6I6A/BbXYmwpO4k+KML
ybCsnhRYUe8G+Ku+VPinixs9lQaXFLoJLissHa4qPAP6FZEJ1xSZBdcVlQ03
FJMDA4rLhZtK2Ay3FMiDQSVtgdtKyYc7St0Kd5UWhGGlb4MRZRbA0H4Ytdnb
4b5yC+GB8nbAQ+UXwSMFi+GxCkrgiQp3wlMVlcIzleyCMZWWwXOV7YYXKi+H
lxquhYo9MK7KCnilqr3wWjWVMKF7B6B2H7xRXRVMqr4apnSwBt7qPzhpVQM=

       "]], Line3DBox[CompressedData["
1:eJwNzmtkFgAARuHTWmu3trV2a63d29bX2tZa21pr+7YlmZkukpnMmiRZk5nJ
JFmZmUySJElqTZJkkpmZTDKTNJnJJJkkSZJkMp0fj8P768060XX47Crgsg5p
Tkcc3utoCMzr2GpYUEsofFDrGljU8TD4qLa18Ent4fBZHRGwpJOR8EWnouCr
TkfDN51ZB9/VGQM/1BULP3UuDn6pez38Vk88/FHvBvir8wmwrL5E+KcLSbCi
i8meToFLCtkI/QpNhSsK2wQDCk+DQUVuhiFFp8NVxWTAsOIy4Zris+C6ErLh
hpJy4KZScuGWUrfAbaXlwR2l58NdZRbAPWVvhfvKDcCI8rbBqAoK4UEdPLKB
7fBYhUXwREXF8FQlJfBMpTtgTGWl8FzlO+GFKstgXFW7YELV5TCpmgqYUrAS
XmqkHup3w7T2VcEr7d8Dr3WgGmb0sAEa98KsmmrgjZpr4a0OBuGd/gNmtlUn

       "]], Line3DBox[CompressedData["
1:eJwN0GloyAEAxuH/NPd9rtjKtmIKK6zYCmNHsRVbYYXVUI7aUWzFVmzFFFth
xZSjHBky5syQIUOGsBVbsRVbMcVWbIXnw/P+vr+ROXkZuSFBEAwwA5OCYAhD
GcVoJjCRyUxhKpFMYzozmcUc5jKfBSxkEUkks4zlrGAlq1jNWtaRwwY2s4Vc
8tjODnayi93sYS/7OMBBDnGYoxzjBCc5w1lquEgtV7nJLeq5RwOPaOQZTbzi
He/5wEc+8ZkvfOUb3/nJL37zh7/8IzTZrwxjOGMYyyTCCCeCKKKJYQaziWUe
ccSTwGISSSGVNNLJIJM1ZLGebDayia1sI58CCimimBJKKaOc/VRQyRGqqOY4
pzjNOc5zictco47b3OE+D3jME57zgte8oZkWWmmjnQ466aKbH/TQSx/9BClB
EMIgBjOCkYwjNDUIxuskwggngiiiiWEGs4llHnHEk8BiEkkhlTTSySCTNWSx
nmw2somtbCOfAgopopgSSimjnP1UUMkRqqjmOKc4Td0S/+oFarhCLTe4yV3q
eUgDT2nkJU1cXxoEb7WZFlppo50OOumimx/00Esf/fwH8kXHkA==
       "]], 
      Line3DBox[CompressedData["
1:eJwNzW1EHgAAReGzavX2sWqtWmvVqrVWrVpr1Vpr1SqZzExmMjNbM5lZSWZm
ZrImk8xkZjJJJpPMzCTJzJZkMplJMtPMTGYmM5nMzo/H5brcjJb2prYNQLfO
64suWHzVxSD4ptZg+K5LIbCiyxvhh66Ewk+1h8EvdQRgVZ3h8FtXI+CPrkXC
mq5HwV/d2ATruhkN/3QrxtNY6FLQZritkDi4o9At0KNAPNxVRAL0KioR+hS9
Fe4pNgnuK24b9Cs+GR4ocTs8VFIKPFJyKgwoJQ0eK20HDCo9HYaUmQHDysqE
J8reCSPKyYKnytsFo8rPhjEV7oZnKsqB5yrOhRcqyYOXKtsD4yrPhzdHYMKs
KIBJVRbClKr2wivVFMFr1e5zq/pimFbDfpjR0RKYVWMpvNOxMpjT8QPwXifK
YV5va6HpIHzQyQr4qFOHYEHNlbCo6To4fRiWdKYKPulsNXzWuRpY1n9VZVWc

       "]], Line3DBox[CompressedData["
1:eJwNzF1EGAAAReGz1lqrVq211lpr1Vq11vqvVavWKslMJjMzk2RmM1sykyST
LclMZmZmkswkk8zMZGaSzGQmlUlmMjNLkslkJp2Hz+U+nKTmloabW4B7uqYl
XfdY1o0AWFHLVlhVayD80a1tsKbbQfBXbdthXe3B8E8dO+C/OkNgQ3dCjYZB
lwJ2wl0FhkO3giKgR8GR0KuQXXBfYVHwQOG7oU+R0fBQUXvgkaJj4LFi9sIT
xcbCU8Xtg2eKj4N+JeyHASXGw6CSD8BzpSTAC6UehCGlJ8KwMpLgpTKTYURZ
h2BUOSnwSnmH4bUKUuGNitLgrYrTYUylR+CdyjLgvSqOwgdVZsLMKRh3q47B
hGqyYFK12fBRdTnwSadzYUpn8uCz6vPhi84WwLQaCm3pXBHM6fxx+KoLxTCv
2Sq4WAILulQK39R4Ar6rqQwWNVcNzeXwQ5cr4KeunIRfuloJv7UJDgNV2A==

       "]], Line3DBox[CompressedData["
1:eJwV0mtE3QEYB+D/2taSJJlJ5miTTDLJJJNsaS2ZJMkkk0wyaZPMkUnmyCST
zJFJJtmyS3bJLtklu2SXbCuZI3NkkkkmmWSSPX143vf35f3y8x5quljTtisI
gt1GYlkQJJNCGukcIIODhDhMNkfI5Sj5HKOQ4xRzglLKqeAMVdRQy1nqOUcj
52nmAq1cop3LhLlCF1eJcI1ertPPDaLcZIhbjHCbMe4zzmMmeM4kr5niPdN8
ZobvzPGDGD+J84slfrPCH9b4ywb/2CI4FQQJJJJECqmks58MMgmRRTY55JJH
PgUUUkQxJZRSRgWVVFFNLXXU00AjTTTTQitttNNBmE666CZCD7300c8AUQYZ
YpgRRhnjLuM8ZIKnTPKSKd4yzUdm+Moc88RYIM4iSyyzwiprrLPBJlts73Ra
HgR7SCKZVNJYOqlXO4NMQmSRTQ655JFPAYUUUUwJpZRRQSVVVFNLHfU00EgT
zbTQShvtdBCmky66idBDL330M0CUQYYYZoRR9p72O9yR7/GARzzhGS94xRve
8YFPfOEbs+xzn8C8HGOBOIs7PbHMCqussc4Gm2yxzX9DuMfI
       "]], 
      Line3DBox[CompressedData["
1:eJwV0mtE3QEYB+B/srUkSWaSSSaZZJI5MklaSzJpk0wyLZPM2TFHJplkkknm
yCSTTLJll+ySXbJLdsku2VYyRyaZZJJJm2TSnn143vf35f3y8+aciZw4nxAE
QaKRdDQIUkglnQz2kcl+sjlALgfJ5xCFHCbEEUooo5xKqjhODSep4xQNnKaJ
s7RwjjAXiHKRdi7RyWW6uUIvV4lxjQGuM8QNRrjJGHcZ5yETPGWSl0zxlmk+
MsNX5vhGnO8s8oNlfrLKL9b5wyZ/2SahQqckkUwqaWSwl0yyyCaHXPLIp4BC
ighRTAmllFNBFdXUUEsd9TTQSBPNtNBKmAhR2ming0666KaHXvqI0c8Agwwx
zAijjHGbce4zwWMmec4Ur5nmPTN8Zo554iywyBLLrLDKGutssMkW2+z87/RY
EOwimRTSSOd3mV7tTLLIJodc8singEKKCFFMCaWUU0EV1dRQSx31NNBIE820
0EqYCFHaaKeDTrropode+ojRzwCDDDHMCKPsrvQ73JLvcI8HPOIJz3jBK97w
jg984guz7HGfyLwcZ4FFllhmhVXWWGeDTbbYZod/ZZ7I2g==
       "]]}, 
     {GrayLevel[0.2], Line3DBox[CompressedData["
1:eJwV0FVTlQEUBdCPGV5AQJAWEGmkQQEB6VBSupUw6HsJpUtK+Nes+7Bmv5yZ
fWbnrYbHQ1FBENwREx0EsbwgjngSeEkiSbwimRRSSSOdDDJ5TRbZ5PCGXN6S
Rz4FFFJEMSWU8o4yyqmgkiqqqaGWOt7zgXoaaOQjTTTTwidaaaOdDjrpopse
eunjM1/oZ4BBhhhmhK+MMsY4E0wyxTQzzDLHPAss8o3vLLEc+bsnCFbkKj/4
yS9+s8Y6G2yyxTY7hAizyx77HPCHvxxyxDEnkU30nMozzrngkiuu+RfZzM2N
vOWOex74zyNPPAP7Fypx
       "]], Line3DBox[CompressedData["
1:eJwVzkdTkwEUBdCPnVtAqooEAVFEQem9RBGkGapKDVVKQgcpUqWIKP5jThZn
7sybO3NfKBqPxJKCIDgn+UEQpJDKQ9JIJ4NMssjmEY95Qg5PySVEHs/Ip4BC
nlPEC15SzCtKeM0bSinjLe8op4JKqqimhlrqqKeBRppopoVW2gjzng+085EO
OvlEF9300Esfn4nQzwCDDDHMCF/4yjdGGWOcCSaZIso0M8wyxzwLiXs4CL7L
RZZYZoUYcVZZY50NNtlimx12+cEe+xxwyE+OOOYksWnnVJ5xzi8uuOSK68RP
Or/lDX+45S//uOM/949MMQ0=
       "]], Line3DBox[CompressedData["
1:eJwVztVSlgEUBdCPe14AJKRLOgQFpEE6JCUEaWlQQkFKupu3df0Xa/bMmX3m
nLixxc6FsCAIDokID4JI3hBFNDHE8pY44kkgkSSSSSGVNNLJ4B2ZZJFNDrnk
kU8BhRTxnmJK+MBHSimjnE9UUEkV1dRQSx31NPCZRppopoVW2ming066+EI3
PfTSRz8DfGWQIYYZ4RujjPGdcSaYZIppZpjlB3PMs8AiS9zXBMGyXGGVNX7y
i3U22GSL3/xhmx3+ssse+xxwyD+OOOaEU57cOZPnXHDJFdfccMuzzl3oJx54
DO2F5rzwyn8jgTep
       "]], Line3DBox[CompressedData["
1:eJwNzek21AEAxuG/O+gWhihrIkukopF9J0uWTFkKM6VC2Xdl33dyLc7RbXk+
POf35T3nDUVijdG4IAiWCD0IgngSeEgiSTziMcmkkEoa6WTwhEyekkU2z8gh
lzzyeU4BhbygiJe84jXFlPCGMKW8pYxyKqikimpqqKWOehpopIlmWnhHK220
08F7Oumimx4+0EuEj3yij34GGOQzXxhimBGixPjKN0b5zg9+MsY4E9yGg+CX
/maSKaaZYZY55llgkSWWWWGVNf7wl3U22GSLbXbY5c7Pnu5zwCFHHHPCKf9t
zvScCy654pp/3HAPt6c+RQ==
       "]], Line3DBox[CompressedData["
1:eJwNzVc30AEAxuG/79AXcEmZ2SPZZK9kZ1NZ2RTKDsnOyJ6fzznc9lw853fz
nvOGtg1U9ocEQbBA2IsgCOclr4ggkiiiiSGW18QRTwKJJJFMCqmkkc4bMnhL
Jllkk0MueeRTQCHvKKKYEkopo5wKKqmimhreU8sH6qingUaaaKaFj7TSRjsd
dNJFNz308onPfKGPfgYYZIivDDPCKGOMM8EkU0zzje/MMMscjzlB8EN/Ms8C
iyyxzAqr/GKNdTb4zSZ/2GKbHXbZY58D/nLIk58jPeaEf5xyxjkXPNtc6hXX
3HDLHfc88B9L3ETh
       "]], Line3DBox[CompressedData["
1:eJwNzcdOlAEAhdHft3BLTHANSBXpg6CoMHSUNnQQECtN6lBEQem9I0Wpb8hZ
nHybm9yYSG+450EQBFHiHgZBPAk8IZEkkkkhlTSeks4zMsgki2xyyCWPEPk8
p4BCXvCSIl7xmjcUU0KYUsoop4JKqqimhre8o5Y66mmgkQhNNNNCK22000En
Xbynmx56+UAfH/nEZ77wlW/0M8AgQwzznRFGGWOcCSaJMsU0M8zyKBQEP3SO
n/xingV+84dFllhmhVXWWGeDTbbYZodd9tjngENi/RzpMSf85ZQzzrngsc0/
/c8lV1xzwy133APFDEiA
       "]], Line3DBox[CompressedData["
1:eJwV0NVSlgEUBdCP9+CGx6AlflBBpEtApUUB6VZAQkK6S0IlpfPtWP/Fmn1z
ZvacHVXZnNsUEQTBCNGRQRBDLHHEk0AiL0gimRRSCZFGOi95xWsyyOQNWbwl
mxxyySOfAgopopgSSnlHGeVU8J4PfKSSKqqpoZY66vlEA5/5QiNNNPOVFlpp
o50OOumimx566aOfAb7xnUGGGOYHI4wyxjg/mWCSKab5xQyzzIX/DgXBvFxg
kSWWWWGVNdbZYJMtttnhN7vssc8Bf/jLPw454ji8qZ4TecoZ/znngkuuwpu7
uZY33HLHPQ888sQzWUFPHA==
       "]], Line3DBox[CompressedData["
1:eJwVz9VWlQEQBtCfN8FHQbpTuku6pDsONqnSLSigKF1Svhn7XOz13cz6ZuZF
ZWtWS0QQBCGiIoPgJdHEEEsc8SSQSBLJpJBKGulkkEkW2eTwilzyyKeAQooo
poRSyiingkqqqKaGWl5TRz0NNNJEMy200kY7Hbyhky666aGXPvoZYJAhhhlh
lDHGmSDEJG95x3s+8JFPfGaKaWaYZY55vvCVbyywyFK4NzYIluUKq6yxzgab
bLHNDt/ZZY8f/GSfAw75xW+O+MNfjjkJ32zPqTzjnAsuueKam/BPZm7lP+64
54FHnvjPM+1nVbg=
       "]], Line3DBox[CompressedData["
1:eJwVzdVSlgEUBdCPR2HGV+ECUEpCkUa6JKUFQelOBaWRkG6UUvKtWP/Fmj1n
Zs8+4TkVCeVhQRB08vQiCB554J47bvnPP04iguBGXnPFJRf85Q/nHOucydNQ
P3RzxCEH7LPHLjtss8VvNtlgnTV+scoKyyyxyEJoy595OcdPfjDLDN/5xjRT
TDLBOGOMMsIwQwwyQD999NJDN1185QuddPCZdtr4RCstNNNEIw3U85E6aqmh
mioq+UAF5ZRRSgnFFFFIAfnk8Z5ccsgmi0wySCeNd6TyljekkEwSibwmgXji
iCWGV7wkmigieQb1nVxU
       "]], Line3DBox[CompressedData["
1:eJwNzdkylwEAxuHPpThzIy4gO9kVEn979iRrSPayU9n3nbIVIRFdQzPchufg
md/JO/OGZxZGhcKCIGjiX0QQ3HHLX2645g9XPEQGwW+95IJzfnHGKT+5t/mh
JxxzxCEHfOcb++yxyw7bbLHJBuusscoKyyyxyALz/Pczp7PMMM1XvvCZKSaZ
YJwxRhlhmCE+8ZFBBuinj1566OYDXbynkw7aeUcbrbTQTBONvKWBN9Tzmjpq
qaGaKiqp4BXllFFKCcUUUUiIAvJ5SR4vyCWHbJ7zjCwyySCdNFJJIZmnJJFI
AvHEEUsM0UTxhEcacWLw
       "]], Line3DBox[CompressedData["
1:eJwNx2V4kAUAhdFvMKSlU2p0N6j0RowUHF0Co1tCSpAwCKW7pKS7UUC6u7sb
BaUFRTg/znufGxbdNapLSBAEMSRGOBFBEELAO/9/3vIf//KG1/zDK17yguc8
4ylP+Ju/eMwj/uQPHvKA+9zjLne4zS1ucoPrXOMqV7jMJS5ygfOc4yxnOM0p
TnKC4xzjKEc4zCEOcoD97GMve9jNLnayg+1s43e2soXN/MavbGIjG1jPOtYS
GhkEa+xqVrGSFSxnGUtZwmIWsZAFzGcIvzCYeQxiLgOZwzfMZgCz6M/PfM1M
+jGDvkynD9PozVR6MYWvmExPJtGDiXRnAt0Yz5eMoytj6cIYOjOaToyiIyPp
wE+050faMYK2DKcNw2jNUFrxAy35nmi+owXNacYXNKUJjWlEQxpQn3rUpQ61
ieJzalGTz6hBdapRlSpUJpJKVKQC5YkgnHKUpQylKUVJSvApn/AxxSlGUYpQ
mEIUpAD5yUde8pCbXOQkB9nJRlaykJkwMpGRDKQnHR+RljSkJhUpSUFykpGU
JCQmER+SkATEJx5xiUNsPiAWocTkW94DsIvCyA==
       "]], Line3DBox[CompressedData["
1:eJwNzVVSkAEAhdGfpbADtsAMuAB2QHcIqHRIg9IlJUqXCkq3SjeKgAriTjgP
Z76XO3NDYzKjMkKCIKjkf1gQPPCPe+74yx9+E/kkCG71hmt+ccVPfnBJhM2F
nnPGKSccc8QhB+yzxy47fOcbX9lmi002WGeNVVZYJtzPki6ywDxf+Mwcs3zi
Ix+YYZopJplgnDFGGWGYId7zjkHeMkA/ffTSwxu66aKTDtppo5UWmmmikde8
ooF66qilhmqqqKSCl5RTRiklFFNEIQXkk8cLnvOMXHLI5ilZZJJBOmmkkkIy
SSSSQDxxxBJDNI8+jW0l
       "]], Line3DBox[CompressedData["
1:eJwV0UdSVAEUBdDvUtgDa2ABLoEZqQEJkmNLBpGgSAYFRHJGwUgGEZQcRAmC
7oLTg1N38qpu1btRsckPQw+CIAjzPzoI/nHHLX+54ZorMmKC4FL+4TcX/OKc
M05Jd3MijznikAP22eMnP9hlh+9s840tNtlgnTVWWWGZJb7yhVQ9n+UnPvKB
RRZ4zzvmmWOWGaaZYpIJxhljlBGGGeItg7xhgH76eM0reumhmy466aCdNlp5
SQsveE4zTTTSwDPqeUodtdRQTRWVVFBOGU8IU0oJxRRRSAH55JFLDtlk8ZjM
yHaRbUjjUeR/pJBMiCQSSSCeOO4BY1JzwQ==
       "]], Line3DBox[CompressedData["
1:eJwNzGV0FgQABdBvjo2WThEYLd0GKrABo2PSzejaBFREpLu7uxHp7u7u7kYF
RUKUkPvjvnfO+/HComOjYoICgUCwCA4nIhD4gCAC/G97x1ve8Jr/+JdX/MNL
XhAaGQg818/4m6f8xZ884TF/8Du/8YiHPOA+9wjxcVff4Ta3uMkNrnONq1zh
Mpe4yAXOc46znOE0pzjJCY5zjKMc4TCHOMgB9rOPvexhN7vYyQ62s42tbGEz
m9jIBtazjrWsYTWrWMkKlrOMpfzKEn5hMYtYSD8W0Jf59GEevZlLL+bQk9n0
YBY/M5PuzOAnptONafzIVLoyhR+YzPdM4jsm0oUJdGY8nRjHt4wlljHEMJqO
jKIDI2nPCNoxnLYMow1Dac0QWjGYlgyiBQNpzgCiaUZTmtCYRjSkAfWpR13q
UJta1OQboqhBdapRlSpUphIVqUB5IilHWcoQQTilKUVJvuYrvqQEX/A5n/Ep
xSlGUYpQmEIUpAD5yUde8pCbT8hFTnKQnWxkJQthZCYTGfmYDHxEetKRljSk
JhUpSUFykpGUJHxIYhKRkATEJx5xCSWEOPTnPaMJxBo=
       "]], 
      Line3DBox[CompressedData["
1:eJwNzGO8FwYYBeB/rboZy7atZd/sltbCusu42Ta2bBvLWLVci8t2y7aN58Nz
zvt7P5yUIe1qhIYJBAI/iHClCHYTljAE+Ob/lS985hMf+cB73vGWiGUDgTf6
Na94yQue84ynPOExj3jIA+5zj7sE2bijb3OLm9zgOtf4n6tc4TKXuMgFznOO
s5zhNKc4yQmOc4yjHOEwh/iPgxxgP/vYyx7+ZTe72MkOtrONrWxhM/+wiY1s
4G/Ws461rGE1q1jJCpazjL9YyhIGs5hBLGIgCxnAAvozn37Moy9z6cMcejOb
XsyiJzPpwQy6M51uTKMrU+nCFDozmU5MoiMT6cAE2jOedowjlLG0ZQxtGE1r
RtGKP2nJH7RgJM0ZQTOG05RhNGEovxNCY36jEQ1pQH1+pR6/UJc61KYWNfmZ
GlSnGlWpQmUqUZEKlKccZSlDaYIpRUlKUJxiFKUIhSlEQQqQn3z8RF7ykJtc
5CQH2clGVrKQmUxkJAPpSUda0pCaVKQkBclJRlKSkJhEJCQB8YlHXOIQmx+J
RUxiEJ1oRCUKkYlERIKIQHiG8B3KL8Uh
       "]]}, {}, {}}},
   VertexNormals->CompressedData["
1:eJzt3c+LVWUYB/ChFsVUEHWVCDeBKEgbNy2suG2qdYGLFkqM907LwUUklX+H
QhBthPkLQtQcf1CTtajFhEIytMmSuaQG0U7D8d5hOPc8dI7Hn8/7ceHiw+Gi
m/e53/s8z3lfmVt4f/jEzMzM0+/OzDw5E/253uc8o++/vnXtyuzlpYODo9tO
nx9t+Ja11eNHFq8tfbJ4c/nWsXMbvm/9+VF/6/benr0rqw/938855/zu/MPx
+b8QnP9zlfN///j87zn/Oec8pc///dTrvzx/ZenTrxfPrL36x/8+P7zzfP/z
hs9zzjl/ND06//+6dPidf3b/+Eb1+cn537RecM45f7xcLuCc8zJdLuCccy4X
cM45lws455zLBZxzzuUCzjnncgHnnPO7zQXOf845z+lyAeecl+nR+X9Dv4Bz
zov0oVzAOedFepQLRvoFnHNepOsXcM55ma5fwDnnvOaclws457ww1y/gnHPe
pC5Ezx9QFzjnPIVHvwtdDHLBwPnPOeepPaoL392pC6eqz8+pC5xznsKj839F
LuCc8yK97RyRfgHnnOfw6Pz/SS7gnPMiPaoLZ4N+gVzAOec5XC7gnHPepC5E
z8sFnHOew80Rcc45b1IX7Bdwznlulws455w3qQvR8/oFnHOew80Rcc45b1IX
7Bdwznlulws455w3qQvR83IB55zncHNEnHPOm9QF+wWcc57b5QLOOedN6kL0
vLrAOec5vG0uGDr/Oec8tc8HdeFn/QLOOU/tbfcL5ALOOc/tcgHnnJfp0fk/
CnLB+Pl+0/4y55zzx8ujuhA9b46Ic85zeNQviHLBUC7gnPPUrl/AOedlujki
zjnnTXLBn+4v4Jzz1B7lgt/lAs45L9KjXPCtfgHnnKf26Pz/zX4B55wX6e41
45zzMn1y/lfP8ygX2C/gnPPcbo6Ic87LdHNEnHPOm+QCe8ecc57b7R1zzjlv
kgv0CzjnPLfrF3DOOW+SC+wdc855brd3zDnnfLPbO+ac8zLd3jHnnPPNbo6I
c87LdHNEnHPOm+QCe8ecc57b7R1zzjmXCzjnnEfn/8h+AeecF+lRXYieH8gF
nHOewqN+QZQL7Bdwznlu1y/gnPMy3RwR55zzJrnA3jHnnOd2e8ecc86b5AL3
F3DOeW53fwHnnPPN3vb+Ar8Xcc55Do/O/1/lAs45L9LlAs45L9PlAs45511y
gfcRcc55Do/miG4EueAjuYBzzlP7JBc0/Z6vX8A55zk8Ov+j9xHpF3DOeW43
R8Q552V62/cR6RdwznluN0fEOedlujkizjnnXXKBfgHnnOfwtv0Cc0Scc57b
9Qs457xMb3vfsVzAOee53d4x55yX6faOOeec19UFc0Scc16W2zvmnHPeJReY
I+Kc8xxu75hzznmXXKBfwDnnOdzeMeec8y65QL+Ac85zuL1jzjnncgHnnHNz
RJxzzutygfcRcc55We59RJxzzuvqgv0Czjkvy72PiHPOuVzAOefc3jHnnPMu
ucB+Aeec53B7x5xzzuUCzjnn9o4555zX5QJ7x5xzXpbbO+acc15XF+wXcM55
WW7vmHPOuVzAOefc3jHnnPMuucB+Aeec53B7x5xzzuUCzjnn9o4555zX5QJ7
x5xzXpbbO+acc15XF+wXcM55WW7vmHPOeZdcYI6Ic85zuDkizjnnXXKBfgHn
nOdw7yPinHPeJRfoF3DOeQ73PiLOOed1dcHeMeecl+X2jjnnnNfVBXNEnHNe
lts75pxz3iUXmCPinPMcbu+Yc855l1ygX8A55znc3jHnnPMuuUC/gHPOc7i9
Y84553IB55xzc0Scc87rcoH3EXHOeVnufUScc87r6oL9As45L8u9j4hzzrlc
wDnn3N4x55zzLrnAfgHnnOdwe8ecc87lAs455/aOOeec1+UCe8ecc16W2zvm
nHNec8633i9QFzjn/PH2qF98SS7gnPMi3RwR55yX6fYLOOecywWcc87tF3DO
OZcLOOecywWcc87lAs4553IB55xzuYBzzrlcwDnnvElduBrUhYG6wDnnKTw6
//8Nzn/vo+Oc89w+COrCifW6cPJU9fk5/QLOOU/hUS644H1EnHNepJsj4pzz
Mt0cEeecc7mAc865XMA551wu4JxzLhdwzjmvywVNv+fbO+Oc8xwenf/j/YKp
/TLvneCc89zetl8w1C/gnPMU3vZ9RJN+wSHnP+ecp3RzRJxzXqabI+Kccy4X
cM45lws455zLBZxzzuUCzjnnTeqC+4455zy3u++Yc855zfd89x1zznlh7r5j
zjnnm90cEeecl+nmiDjnnMsFnHPO5QLOOedyAeecc7mAc855XS5w3zHnnJfl
7jvmnHNeVxfcd8w552W5+44555x3yQXmiDjnPIebI+Kccy4XcM45lws455zL
BZxzzuUCzjnncgHnnHO5gHPOeZO6cDWoC95HwTnnObzt3rH30XHOeW4fBHXh
xHpdODn1nro5/QLOOU/hUS64EOSCebmAc85Tuzkizjkv080Rcc45lws455zL
BZxzzuUCzjnncgHnnPO6XND0e769M845z+HR+T/eL5jaL/PeCc45z+1t+wVD
/QLOOU/hbd9HNOkXHHL+c855SjdHxDnnZbo5Is4553IB55xzuYBzzrlcwDnn
XC7gnHPepC6475hzznO7+44555zXfM933zHnnBfm7jvmnHO+2c0Rcc55mW6O
iHPOuVzAOedcLuCccy4XcM45lws455zX5QL3HXPOeVnuvmPOOed1dcF9x5xz
Xpa775hzznmXXGCOiHPOc7g5Is4553IB55xzuYBzzrlcwDnnXC7gnHO+2fdd
37p2ZXa01Nve27N3ZXXDe2urx48sXut/sXhz+daxc5XnL/cPDo5uO31+9ND/
/Zxzzu/Oo/N/y/j8/7hy/u8fn/8Lzn/OOeecP+K+c/3vZ7+p+qQv9lnld87e
2L+v+MsX6+/73nH7r7eeebPqB8a/ox6ufM4LY//B76ucc84555w/MI9yQTQv
sSXIBReCOYpdt/8689xULpgP5ivGn9+vfv69+v9yzjnnnHNeske/888HfYGd
vbNvv/fSdF6IPv/F4Hf+aL9m/PlTeeFe/X8555xzzjnn0x79zh/1Bb587YMb
u4ezU7ng8sX6vsDkd/7lyudEe5c75ALOOeecc87vmz9qfQHf/znnnHPOOX/w
3rYv8FXQF4jeu9i2L7BLLuCcc84555xzzjnnnHPOOeecc84555xzzjnnnHPO
Oeecc84555xzzjnnnHPOOeec84fi/wEM0iv4
    "]],
  Axes->True,
  AxesLabel->{
    FormBox["\"Theta 1\"", TraditionalForm], 
    FormBox["\"Theta 2\"", TraditionalForm], 
    FormBox["\"Test\"", TraditionalForm]},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->{{0., 6.283185307179586}, {0., 6.283185307179586}, {0., 1.}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.72589014095398*^9, 3.725890215009488*^9}, 
   3.725890498577757*^9, {3.725890543351614*^9, 3.725890604048903*^9}, {
   3.725890792619174*^9, 3.725890851758326*^9}, 3.725890981780882*^9, 
   3.725891031883033*^9, 3.725891084378167*^9, 3.725891190945977*^9, {
   3.725891271819495*^9, 3.725891344715444*^9}, 3.725891416567266*^9, 
   3.7258914739438133`*^9, 3.7258915624898977`*^9, 3.7258919171393003`*^9, 
   3.7258919501426773`*^9, 3.725892621213643*^9, 3.725892661243884*^9, 
   3.725892890538969*^9, {3.725893454832999*^9, 3.725893480069188*^9}, 
   3.725893519857514*^9, {3.7258983200062513`*^9, 3.72589832564835*^9}, 
   3.7259006317737007`*^9, 3.7259007746068277`*^9, {3.725901128430512*^9, 
   3.725901146864896*^9}, 3.725901642616374*^9, 3.72623184665215*^9, 
   3.72640801473507*^9, {3.726408244993416*^9, 3.726408296178927*^9}, 
   3.726418400722756*^9, 
   3.727449738380212*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
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\
\>"]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Off", "[", 
  RowBox[{"Power", "::", "infy"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"table1", " ", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"testDmatUnitary", "[", 
        RowBox[{"params", ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", 
           RowBox[{"Pi", "/", "2"}]}], "}"}]}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "0", ",", 
       RowBox[{"2", "Pi"}], ",", 
       RowBox[{"Pi", "/", "16"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{"table1", ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<Theta 1 Unitary Test\>\""}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"table2", " ", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"testDmatUnitary", "[", 
        RowBox[{"params", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Pi", "/", "2"}], ",", "i"}], "}"}]}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "0", ",", 
       RowBox[{"2", "Pi"}], ",", 
       RowBox[{"Pi", "/", "16"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{"table2", ",", 
   RowBox[{"PlotLabel", "\[Rule]", " ", "\"\<Theta 2 Unitary Test\>\""}]}], 
  " ", "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.725893573003379*^9, 3.725893592443122*^9}, {
  3.726407908057732*^9, 3.7264080025668087`*^9}, {3.726408034293651*^9, 
  3.7264081923066263`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGBQBGIQjQo+2EvouoT8Vjxpj8q/CedfUjSur7n5CE3+JZwf
ZxGqWZX1Hk39Jzi/dPnul7v/fkXT/xPO373pzD4rtz9o5v2H8xnvvzsZ487o
gGo+E5y/JKXcZE42iwOqfaxwvvur//Nu97PD+RD7OeH8V/kdnNJbuOB8iHt4
4PzerwIlUTd44XyI+/jh/Bl7fd771AnA+RD3CsL5mQwTl+QICKG5H8G3dr4a
2bNIGM0/InA+T5sk/xoTUTT/Ifj3TsQeOX1MDM2/4nD+Bu5Fla8jJND8Lwnn
AwAeUJjr
      "]]}, {}}, {}, {}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox["\"Theta 1 Unitary Test\"", TraditionalForm],
  PlotRange->{{0, 6.283185307179586}, {0, 2.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.725893588101088*^9, 3.7258935926998672`*^9}, {
   3.726407995641203*^9, 3.7264080642268476`*^9}, {3.7264081079324017`*^9, 
   3.726408153036701*^9}, 3.7264081939237537`*^9, 3.726418422217502*^9, 
   3.7274497459992437`*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGBQBGIQjQ4kdF1CfiuetEfl34TzLyka19fcfIQm/xLOj7MI
1azKeo+m/hOcX7p898vdf7+i6f8J5X+w373pzD4rtz9o5v2H8xnvvzsZ487o
gGo+E5y/JKXcZE42C5wPsY8Vznd/9X/e7X52OB9iPyec/yq/g1N6CxecD3EP
D5zf+1WgJOoGL5wPcR8/nD9jr897nzoBOB/iXkE4P5Nh4pIcASE098P4H+yt
na9G9iwSRvOPCJzP0ybJv8ZEFM1/CP69E7FHTh8TQ/OvOJy/gXtR5esICTT/
S8L5AClkdDo=
      "]]}, {}}, {}, {}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox["\"Theta 2 Unitary Test\"", TraditionalForm],
  PlotRange->{{0, 6.283185307179586}, {0, 1.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.725893588101088*^9, 3.7258935926998672`*^9}, {
   3.726407995641203*^9, 3.7264080642268476`*^9}, {3.7264081079324017`*^9, 
   3.726408153036701*^9}, 3.7264081939237537`*^9, 3.726418422217502*^9, 
   3.727449746078599*^9}]
}, Open  ]],

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{3.726237068997362*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{
   "alpha", ",", "theta1", ",", "theta2", ",", "theta3", ",", "AtU", ",", 
    "UtB", ",", "Dmat", ",", "A", ",", "B", ",", "a1", ",", "a2", ",", "b1", 
    ",", "b2", ",", "psi", ",", "psi0", ",", "psi1", ",", "Dmat", ",", "d1", 
    ",", "d2", ",", "d3", ",", "d4", ",", "params", ",", "AtUtU", ",", 
    "UtUtB"}], "]"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", "\[IndentingNewLine]", 
   RowBox[{
   "THIS", " ", "IS", " ", "3", " ", "QUBIT", " ", "VERSION", " ", "OF", " ", 
    "ANALYTIC", " ", "EQUATION", " ", "SOLVING"}], "\[IndentingNewLine]", 
   "*)"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"U", " ", "=", " ", 
   RowBox[{"buildU", "[", 
    RowBox[{
     RowBox[{"Pi", "/", "2"}], ",", "theta1", ",", "theta2", ",", 
     RowBox[{"Pi", "/", "2"}]}], "]"}]}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"A", " ", "=", " ", 
     RowBox[{"DiagonalMatrix", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Exp", "[", 
         RowBox[{"I", "*", 
          RowBox[{"RandomReal", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "Pi"}], "/", "2"}], ",", 
             RowBox[{"Pi", "/", "2"}]}], "}"}], "]"}]}], "]"}], ",", 
        RowBox[{"Exp", "[", 
         RowBox[{"I", "*", 
          RowBox[{"RandomReal", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "Pi"}], "/", "2"}], ",", 
             RowBox[{"Pi", "/", "2"}]}], "}"}], "]"}]}], "]"}]}], "}"}], 
      "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"B", " ", "=", " ", 
     RowBox[{"DiagonalMatrix", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Exp", "[", 
         RowBox[{"I", "*", 
          RowBox[{"RandomReal", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "Pi"}], "/", "2"}], ",", 
             RowBox[{"Pi", "/", "2"}]}], "}"}], "]"}]}], "]"}], ",", 
        RowBox[{"Exp", "[", 
         RowBox[{"I", "*", 
          RowBox[{"RandomReal", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "Pi"}], "/", "2"}], ",", 
             RowBox[{"Pi", "/", "2"}]}], "}"}], "]"}]}], "]"}]}], "}"}], 
      "]"}]}], ";"}], "*)"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"A", " ", "=", " ", 
   RowBox[{"IdentityMatrix", "[", "2", "]"}]}], ";"}], "\[IndentingNewLine]", 

 RowBox[{
  RowBox[{
   RowBox[{"B", " ", "=", " ", 
    RowBox[{"IdentityMatrix", "[", "2", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AtU", "=", " ", 
   RowBox[{"ArrayFlatten", "[", 
    RowBox[{"TensorProduct", "[", 
     RowBox[{"A", ",", "U"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"UtB", " ", "=", 
    RowBox[{"ArrayFlatten", "[", 
     RowBox[{"TensorProduct", "[", 
      RowBox[{
       RowBox[{"ConjugateTranspose", "[", "U", "]"}], ",", "B"}], "]"}], 
     "]"}]}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"AtUtU", " ", "=", " ", 
    RowBox[{"ArrayFlatten", "[", 
     RowBox[{"TensorProduct", "[", 
      RowBox[{"AtU", ",", "U"}], "]"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"UtUtB", " ", "=", " ", 
    RowBox[{"ArrayFlatten", "[", 
     RowBox[{"TensorProduct", "[", 
      RowBox[{
       RowBox[{"ConjugateTranspose", "[", "U", "]"}], ",", "UtB"}], "]"}], 
     "]"}]}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"params", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
    "d1", ",", "d2", ",", "d3", ",", "d4", ",", "d5", ",", "d6", ",", "d7", 
     ",", "d8"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Dmat", " ", "=", " ", 
    RowBox[{"DiagonalMatrix", "[", 
     RowBox[{"Exp", "[", 
      RowBox[{"I", "*", "params"}], "]"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"psi", " ", "=", " ", 
   RowBox[{"Flatten", "[", 
    RowBox[{"TensorProduct", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"psi0", ",", "psi1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "0"}], "}"}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"finalMat", " ", "=", " ", 
   RowBox[{"FullSimplify", "[", " ", 
    RowBox[{
     RowBox[{"UtUtB", ".", "Dmat", ".", "AtUtU"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Element", "[", 
        RowBox[{"theta1", ",", "Reals"}], "]"}], ",", 
       RowBox[{"Element", "[", 
        RowBox[{"theta2", ",", "Reals"}], "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"phi", " ", "=", " ", 
    RowBox[{"finalMat", ".", "psi"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", "Postselection", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", "\"\<Phi\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{"phi", " ", "=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"phi", "[", 
     RowBox[{"[", 
      RowBox[{"1", ";;", "2"}], "]"}], "]"}], "//", "Normalize"}], "//", 
   "Simplify"}]}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", "\"\<psi\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{"psi", " ", "=", " ", 
  RowBox[{"B", ".", "H", ".", "A", ".", 
   RowBox[{"{", 
    RowBox[{"psi0", ",", "psi1"}], "}"}], "\[IndentingNewLine]"}]}]}], "Input",\

 CellChangeTimes->{{3.726237083713469*^9, 3.726237594539803*^9}, {
   3.7262376484203577`*^9, 3.726237699919613*^9}, {3.72623779660252*^9, 
   3.726237813941383*^9}, {3.726237861996611*^9, 3.726237912985224*^9}, {
   3.726238012548543*^9, 3.726238033186521*^9}, 3.726238442736364*^9, {
   3.726407587701083*^9, 3.726407606056418*^9}, {3.726577682260621*^9, 
   3.726577691404756*^9}, {3.726577733297814*^9, 3.726577795913623*^9}, {
   3.726577860359499*^9, 3.726577884032878*^9}, {3.7265795918103657`*^9, 
   3.7265796042805967`*^9}, {3.726579803084708*^9, 3.7265798050356073`*^9}, {
   3.7272095659774*^9, 3.727209568760086*^9}, {3.72744730601017*^9, 
   3.727447325706708*^9}, {3.7274475611065187`*^9, 3.727447598211719*^9}, {
   3.7274476614373913`*^9, 3.727447667402602*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], " ", 
       RowBox[{"Cos", "[", 
        FractionBox["theta2", "2"], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Cos", "[", 
          FractionBox["theta1", "2"], "]"}], "-", 
         RowBox[{"\[ImaginaryI]", " ", 
          RowBox[{"Sin", "[", 
           FractionBox["theta1", "2"], "]"}]}]}], ")"}]}], 
      SqrtBox["2"]], ",", 
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Cos", "[", 
          FractionBox["theta1", "2"], "]"}], "-", 
         RowBox[{"\[ImaginaryI]", " ", 
          RowBox[{"Sin", "[", 
           FractionBox["theta1", "2"], "]"}]}]}], ")"}], " ", 
       RowBox[{"Sin", "[", 
        FractionBox["theta2", "2"], "]"}]}], 
      SqrtBox["2"]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Cos", "[", 
          FractionBox["theta1", "2"], "]"}], "+", 
         RowBox[{"\[ImaginaryI]", " ", 
          RowBox[{"Sin", "[", 
           FractionBox["theta1", "2"], "]"}]}]}], ")"}], " ", 
       RowBox[{"Sin", "[", 
        FractionBox["theta2", "2"], "]"}]}], 
      SqrtBox["2"]], ",", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], " ", 
        RowBox[{"Cos", "[", 
         FractionBox["theta2", "2"], "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Cos", "[", 
           FractionBox["theta1", "2"], "]"}], "+", 
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"Sin", "[", 
            FractionBox["theta1", "2"], "]"}]}]}], ")"}]}], 
       SqrtBox["2"]]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.726579813230028*^9, {3.7272093499706573`*^9, 3.727209362999342*^9}, 
   3.727209569912609*^9, 3.727445974227255*^9, 3.7274473275383863`*^9, {
   3.727447561822329*^9, 3.727447598682715*^9}, 3.727447667803916*^9, 
   3.7274487259016438`*^9, 3.727449750961095*^9}],

Cell[BoxData["\<\"Phi\"\>"], "Print",
 CellChangeTimes->{
  3.726579813220138*^9, {3.727209349961658*^9, 3.727209362990492*^9}, 
   3.7272095699041233`*^9, 3.7274459742149878`*^9, 3.727447331657466*^9, {
   3.7274475660188313`*^9, 3.727447599189021*^9}, 3.727447687266452*^9, 
   3.727448735932434*^9, 3.727449761922364*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"2", " ", "psi0", " ", 
       SuperscriptBox[
        RowBox[{"Cos", "[", 
         FractionBox["theta2", "2"], "]"}], "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"\[ImaginaryI]", " ", "d3"}]]}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            RowBox[{"Cos", "[", "theta2", "]"}]}], ")"}]}], "+", 
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"\[ImaginaryI]", " ", "d1"}]], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"Cos", "[", "theta2", "]"}]}], ")"}]}]}], ")"}]}], "+", 
      RowBox[{"psi1", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"\[ImaginaryI]", " ", "d7"}]]}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            RowBox[{"Cos", "[", "theta2", "]"}]}], ")"}]}], "+", 
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"\[ImaginaryI]", " ", "d5"}]], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"Cos", "[", "theta2", "]"}]}], ")"}]}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"\[ImaginaryI]", " ", 
          RowBox[{"Cos", "[", "theta1", "]"}]}], "+", 
         RowBox[{"Sin", "[", "theta1", "]"}]}], ")"}], " ", 
       RowBox[{"Sin", "[", "theta2", "]"}]}]}], ")"}], "/", 
    RowBox[{"(", 
     RowBox[{"\[Sqrt]", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"Abs", "[", 
          RowBox[{
           RowBox[{"2", " ", "psi1", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", 
                SuperscriptBox["\[ExponentialE]", 
                 RowBox[{"\[ImaginaryI]", " ", "d8"}]]}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", 
                 RowBox[{"Cos", "[", "theta2", "]"}]}], ")"}]}], "+", 
              RowBox[{
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"\[ImaginaryI]", " ", "d6"}]], " ", 
               RowBox[{"(", 
                RowBox[{"1", "+", 
                 RowBox[{"Cos", "[", "theta2", "]"}]}], ")"}]}]}], ")"}], " ", 
            SuperscriptBox[
             RowBox[{"Sin", "[", 
              FractionBox["theta2", "2"], "]"}], "2"]}], "+", 
           RowBox[{"psi0", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", 
                SuperscriptBox["\[ExponentialE]", 
                 RowBox[{"\[ImaginaryI]", " ", "d4"}]]}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", 
                 RowBox[{"Cos", "[", "theta2", "]"}]}], ")"}]}], "+", 
              RowBox[{
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"\[ImaginaryI]", " ", "d2"}]], " ", 
               RowBox[{"(", 
                RowBox[{"1", "+", 
                 RowBox[{"Cos", "[", "theta2", "]"}]}], ")"}]}]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "\[ImaginaryI]"}], " ", 
               RowBox[{"Cos", "[", "theta1", "]"}]}], "+", 
              RowBox[{"Sin", "[", "theta1", "]"}]}], ")"}], " ", 
            RowBox[{"Sin", "[", "theta2", "]"}]}]}], "]"}], "2"], "+", 
        SuperscriptBox[
         RowBox[{"Abs", "[", 
          RowBox[{
           RowBox[{"2", " ", "psi0", " ", 
            SuperscriptBox[
             RowBox[{"Cos", "[", 
              FractionBox["theta2", "2"], "]"}], "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", 
                SuperscriptBox["\[ExponentialE]", 
                 RowBox[{"\[ImaginaryI]", " ", "d3"}]]}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", 
                 RowBox[{"Cos", "[", "theta2", "]"}]}], ")"}]}], "+", 
              RowBox[{
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"\[ImaginaryI]", " ", "d1"}]], " ", 
               RowBox[{"(", 
                RowBox[{"1", "+", 
                 RowBox[{"Cos", "[", "theta2", "]"}]}], ")"}]}]}], ")"}]}], 
           "+", 
           RowBox[{"psi1", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", 
                SuperscriptBox["\[ExponentialE]", 
                 RowBox[{"\[ImaginaryI]", " ", "d7"}]]}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", 
                 RowBox[{"Cos", "[", "theta2", "]"}]}], ")"}]}], "+", 
              RowBox[{
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"\[ImaginaryI]", " ", "d5"}]], " ", 
               RowBox[{"(", 
                RowBox[{"1", "+", 
                 RowBox[{"Cos", "[", "theta2", "]"}]}], ")"}]}]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[ImaginaryI]", " ", 
               RowBox[{"Cos", "[", "theta1", "]"}]}], "+", 
              RowBox[{"Sin", "[", "theta1", "]"}]}], ")"}], " ", 
            RowBox[{"Sin", "[", "theta2", "]"}]}]}], "]"}], "2"]}], ")"}]}], 
     ")"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"2", " ", "psi1", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"\[ImaginaryI]", " ", "d8"}]]}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            RowBox[{"Cos", "[", "theta2", "]"}]}], ")"}]}], "+", 
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"\[ImaginaryI]", " ", "d6"}]], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"Cos", "[", "theta2", "]"}]}], ")"}]}]}], ")"}], " ", 
       SuperscriptBox[
        RowBox[{"Sin", "[", 
         FractionBox["theta2", "2"], "]"}], "2"]}], "+", 
      RowBox[{"psi0", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"\[ImaginaryI]", " ", "d4"}]]}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            RowBox[{"Cos", "[", "theta2", "]"}]}], ")"}]}], "+", 
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"\[ImaginaryI]", " ", "d2"}]], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"Cos", "[", "theta2", "]"}]}], ")"}]}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "\[ImaginaryI]"}], " ", 
          RowBox[{"Cos", "[", "theta1", "]"}]}], "+", 
         RowBox[{"Sin", "[", "theta1", "]"}]}], ")"}], " ", 
       RowBox[{"Sin", "[", "theta2", "]"}]}]}], ")"}], "/", 
    RowBox[{"(", 
     RowBox[{"\[Sqrt]", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"Abs", "[", 
          RowBox[{
           RowBox[{"2", " ", "psi1", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", 
                SuperscriptBox["\[ExponentialE]", 
                 RowBox[{"\[ImaginaryI]", " ", "d8"}]]}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", 
                 RowBox[{"Cos", "[", "theta2", "]"}]}], ")"}]}], "+", 
              RowBox[{
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"\[ImaginaryI]", " ", "d6"}]], " ", 
               RowBox[{"(", 
                RowBox[{"1", "+", 
                 RowBox[{"Cos", "[", "theta2", "]"}]}], ")"}]}]}], ")"}], " ", 
            SuperscriptBox[
             RowBox[{"Sin", "[", 
              FractionBox["theta2", "2"], "]"}], "2"]}], "+", 
           RowBox[{"psi0", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", 
                SuperscriptBox["\[ExponentialE]", 
                 RowBox[{"\[ImaginaryI]", " ", "d4"}]]}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", 
                 RowBox[{"Cos", "[", "theta2", "]"}]}], ")"}]}], "+", 
              RowBox[{
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"\[ImaginaryI]", " ", "d2"}]], " ", 
               RowBox[{"(", 
                RowBox[{"1", "+", 
                 RowBox[{"Cos", "[", "theta2", "]"}]}], ")"}]}]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "\[ImaginaryI]"}], " ", 
               RowBox[{"Cos", "[", "theta1", "]"}]}], "+", 
              RowBox[{"Sin", "[", "theta1", "]"}]}], ")"}], " ", 
            RowBox[{"Sin", "[", "theta2", "]"}]}]}], "]"}], "2"], "+", 
        SuperscriptBox[
         RowBox[{"Abs", "[", 
          RowBox[{
           RowBox[{"2", " ", "psi0", " ", 
            SuperscriptBox[
             RowBox[{"Cos", "[", 
              FractionBox["theta2", "2"], "]"}], "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", 
                SuperscriptBox["\[ExponentialE]", 
                 RowBox[{"\[ImaginaryI]", " ", "d3"}]]}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", 
                 RowBox[{"Cos", "[", "theta2", "]"}]}], ")"}]}], "+", 
              RowBox[{
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"\[ImaginaryI]", " ", "d1"}]], " ", 
               RowBox[{"(", 
                RowBox[{"1", "+", 
                 RowBox[{"Cos", "[", "theta2", "]"}]}], ")"}]}]}], ")"}]}], 
           "+", 
           RowBox[{"psi1", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", 
                SuperscriptBox["\[ExponentialE]", 
                 RowBox[{"\[ImaginaryI]", " ", "d7"}]]}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", 
                 RowBox[{"Cos", "[", "theta2", "]"}]}], ")"}]}], "+", 
              RowBox[{
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"\[ImaginaryI]", " ", "d5"}]], " ", 
               RowBox[{"(", 
                RowBox[{"1", "+", 
                 RowBox[{"Cos", "[", "theta2", "]"}]}], ")"}]}]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[ImaginaryI]", " ", 
               RowBox[{"Cos", "[", "theta1", "]"}]}], "+", 
              RowBox[{"Sin", "[", "theta1", "]"}]}], ")"}], " ", 
            RowBox[{"Sin", "[", "theta2", "]"}]}]}], "]"}], "2"]}], ")"}]}], 
     ")"}]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.726579813230028*^9, {3.7272093499706573`*^9, 3.727209362999342*^9}, 
   3.727209569912609*^9, 3.727445974227255*^9, 3.7274473275383863`*^9, {
   3.727447561822329*^9, 3.727447598682715*^9}, 3.727447667803916*^9, 
   3.7274487259016438`*^9, 3.727449763083706*^9}],

Cell[BoxData["\<\"psi\"\>"], "Print",
 CellChangeTimes->{
  3.726579813220138*^9, {3.727209349961658*^9, 3.727209362990492*^9}, 
   3.7272095699041233`*^9, 3.7274459742149878`*^9, 3.727447331657466*^9, {
   3.7274475660188313`*^9, 3.727447599189021*^9}, 3.727447687266452*^9, 
   3.727448735932434*^9, 3.727449763096036*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    FractionBox["psi0", 
     SqrtBox["2"]], "+", 
    FractionBox["psi1", 
     SqrtBox["2"]]}], ",", 
   RowBox[{
    FractionBox["psi0", 
     SqrtBox["2"]], "-", 
    FractionBox["psi1", 
     SqrtBox["2"]]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.726579813230028*^9, {3.7272093499706573`*^9, 3.727209362999342*^9}, 
   3.727209569912609*^9, 3.727445974227255*^9, 3.7274473275383863`*^9, {
   3.727447561822329*^9, 3.727447598682715*^9}, 3.727447667803916*^9, 
   3.7274487259016438`*^9, 3.727449763108923*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{"Clear", "[", "Dmat", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"params", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
     "d1", ",", "d2", ",", "d3", ",", "d4", ",", "d5", ",", "d6", ",", "d7", 
      ",", "d8"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"eq1", " ", "=", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"Assuming", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Element", "[", 
           RowBox[{"theta1", ",", "Reals"}], "]"}], ",", 
          RowBox[{"Element", "[", 
           RowBox[{"theta2", ",", "Reals"}], "]"}]}], "}"}], ",", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"phi", "[", 
            RowBox[{"[", "1", "]"}], "]"}], " ", "\[Equal]", " ", 
           RowBox[{"psi", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], ")"}], "/.", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"psi0", "\[Rule]", "0"}], ",", 
           RowBox[{"psi1", "\[Rule]", " ", "1"}]}], "}"}]}]}], "]"}], "//", 
      RowBox[{"Simplify", "\[IndentingNewLine]", "eq2"}]}], " ", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"Assuming", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Element", "[", 
            RowBox[{"theta1", ",", "Reals"}], "]"}], ",", 
           RowBox[{"Element", "[", 
            RowBox[{"theta2", ",", "Reals"}], "]"}]}], "}"}], ",", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"phi", "[", 
             RowBox[{"[", "1", "]"}], "]"}], " ", "==", " ", 
            RowBox[{"psi", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], ")"}], "/.", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"psi0", "\[Rule]", "1"}], ",", 
            RowBox[{"psi1", "\[Rule]", "0"}]}], "}"}]}]}], "]"}], "//", 
       RowBox[{"Simplify", "\[IndentingNewLine]", "eq3"}]}], " ", "=", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"Assuming", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Element", "[", 
             RowBox[{"theta1", ",", "Reals"}], "]"}], ",", 
            RowBox[{"Element", "[", 
             RowBox[{"theta2", ",", "Reals"}], "]"}]}], "}"}], ",", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"phi", "[", 
              RowBox[{"[", "2", "]"}], "]"}], " ", "\[Equal]", " ", 
             RowBox[{"psi", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}], ")"}], "/.", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"psi0", "\[Rule]", "0"}], ",", 
             RowBox[{"psi1", "\[Rule]", " ", "1"}]}], "}"}]}]}], "]"}], "//", 
        
        RowBox[{"Simplify", "\[IndentingNewLine]", "eq4"}]}], " ", "=", " ", 
       RowBox[{
        RowBox[{"Assuming", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Element", "[", 
             RowBox[{"theta1", ",", "Reals"}], "]"}], ",", 
            RowBox[{"Element", "[", 
             RowBox[{"theta2", ",", "Reals"}], "]"}]}], "}"}], ",", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"phi", "[", 
              RowBox[{"[", "2", "]"}], "]"}], " ", "==", 
             RowBox[{"psi", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}], ")"}], "/.", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"psi0", "\[Rule]", "1"}], ",", 
             RowBox[{"psi1", "\[Rule]", "0"}]}], "}"}]}]}], "]"}], "//", 
        "Simplify"}]}]}]}]}], "*)"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"newGetArgMins", "[", 
    RowBox[{"phi_", ",", "psi_", ",", "params_"}], "]"}], " ", ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"eq1", ",", "eq2", ",", "eq3", ",", "eq4"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"eq1", " ", "=", " ", 
       RowBox[{
        RowBox[{"Assuming", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Element", "[", 
             RowBox[{"theta1", ",", "Reals"}], "]"}], ",", 
            RowBox[{"Element", "[", 
             RowBox[{"theta2", ",", "Reals"}], "]"}]}], "}"}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"Abs", "[", 
             RowBox[{
              RowBox[{"phi", "[", 
               RowBox[{"[", "1", "]"}], "]"}], "-", " ", 
              RowBox[{"psi", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "^", "2"}], "/.", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"psi0", "\[Rule]", "0"}], ",", 
             RowBox[{"psi1", "\[Rule]", " ", "1"}]}], "}"}]}]}], "]"}], "//", 
        "Simplify"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"eq2", " ", "=", 
       RowBox[{
        RowBox[{"Assuming", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Element", "[", 
             RowBox[{"theta1", ",", "Reals"}], "]"}], ",", 
            RowBox[{"Element", "[", 
             RowBox[{"theta2", ",", "Reals"}], "]"}]}], "}"}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"Abs", "[", 
             RowBox[{
              RowBox[{"phi", "[", 
               RowBox[{"[", "1", "]"}], "]"}], " ", "-", " ", 
              RowBox[{"psi", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "^", "2"}], "/.", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"psi0", "\[Rule]", "1"}], ",", 
             RowBox[{"psi1", "\[Rule]", "0"}]}], "}"}]}]}], "]"}], "//", 
        "Simplify"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"eq3", " ", "=", " ", 
       RowBox[{
        RowBox[{"Assuming", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Element", "[", 
             RowBox[{"theta1", ",", "Reals"}], "]"}], ",", 
            RowBox[{"Element", "[", 
             RowBox[{"theta2", ",", "Reals"}], "]"}]}], "}"}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"Abs", "[", 
             RowBox[{
              RowBox[{"phi", "[", 
               RowBox[{"[", "2", "]"}], "]"}], "-", " ", 
              RowBox[{"psi", "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "^", "2"}], "/.", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"psi0", "\[Rule]", "0"}], ",", 
             RowBox[{"psi1", "\[Rule]", " ", "1"}]}], "}"}]}]}], "]"}], "//", 
        "Simplify"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"eq4", " ", "=", " ", 
       RowBox[{
        RowBox[{"Assuming", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Element", "[", 
             RowBox[{"theta1", ",", "Reals"}], "]"}], ",", 
            RowBox[{"Element", "[", 
             RowBox[{"theta2", ",", "Reals"}], "]"}]}], "}"}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"Abs", "[", 
             RowBox[{
              RowBox[{"phi", "[", 
               RowBox[{"[", "2", "]"}], "]"}], " ", "-", 
              RowBox[{"psi", "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "^", "2"}], "/.", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"psi0", "\[Rule]", "1"}], ",", 
             RowBox[{"psi1", "\[Rule]", "0"}]}], "}"}]}]}], "]"}], "//", 
        "Simplify"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", 
       RowBox[{"NArgMin", "[", 
        RowBox[{
         RowBox[{
         "eq1", " ", "+", " ", "eq2", " ", "+", " ", "eq3", " ", "+", " ", 
          "eq4"}], " ", ",", " ", "params"}], "]"}], "]"}], ";"}]}], 
    "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"params", " ", "=", " ", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"params", "/.", 
        RowBox[{"Flatten", "[", 
         RowBox[{"Normal", "/@", 
          RowBox[{"Solve", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"eq1", ",", "eq2", ",", "eq3", ",", "eq4"}], "}"}], ",", 
            
            RowBox[{"{", 
             RowBox[{"d1", ",", "d2", ",", "d3", ",", "d4"}], "}"}]}], 
           "]"}]}], "]"}]}], ")"}], "//", "Simplify"}]}], ";"}], "*)"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"testAngles", "[", 
    RowBox[{"thetaZ_", ",", "thetaX_", ",", "phi_", ",", "psi_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "Dmat", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"phi", " ", "=", " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"phi", "/.", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"theta1", "\[Rule]", " ", "thetaZ"}], ",", 
            RowBox[{"theta2", "\[Rule]", " ", "thetaX"}]}], "}"}]}], ")"}], "//",
         "Simplify"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Print", "[", 
       RowBox[{"StringForm", "[", 
        RowBox[{"\"\<Phi: ``\>\"", ",", "phi"}], "]"}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Dmat", " ", "=", " ", 
       RowBox[{"DiagonalMatrix", "[", 
        RowBox[{"Exp", "[", 
         RowBox[{"I", "*", 
          RowBox[{"newGetArgMins", "[", 
           RowBox[{"phi", ",", "psi", ",", "params"}], "]"}]}], "]"}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Mean", "[", 
        RowBox[{"Abs", "[", 
         RowBox[{"testOptMat3Q", "[", 
          RowBox[{"Dmat", ",", "U", ",", "10"}], "]"}], "]"}], "]"}], "//", 
       "Return"}], ";"}]}], "\[IndentingNewLine]", "]"}]}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"Solve", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"eq1", ",", "eq2", ",", "eq3", ",", "eq4"}], "}"}], ",", 
       "params"}], "]"}], "\[IndentingNewLine]", "Dmat"}], " ", "=", " ", 
    RowBox[{
     RowBox[{"DiagonalMatrix", "[", 
      RowBox[{"Exp", "[", 
       RowBox[{"I", "*", 
        RowBox[{"newGetArgMins", "[", 
         RowBox[{"phi", ",", "psi", ",", "params"}], "]"}]}], "]"}], "]"}], 
     "\[IndentingNewLine]", 
     RowBox[{"Mean", "[", 
      RowBox[{"Abs", "[", 
       RowBox[{"testOptMat3Q", "[", 
        RowBox[{"Dmat", ",", "H", ",", "50"}], "]"}], "]"}], "]"}]}]}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"testAngles", "[", 
    RowBox[{
     RowBox[{"Pi", "/", "2"}], ",", 
     RowBox[{"Pi", "/", "2"}], ",", "phi", ",", "psi"}], "]"}], 
   "*)"}]}]}], "Input",
 CellChangeTimes->{{3.726237083713469*^9, 3.726237594539803*^9}, {
   3.7262376484203577`*^9, 3.726237699919613*^9}, {3.72623779660252*^9, 
   3.726237813941383*^9}, {3.726237861996611*^9, 3.726237912985224*^9}, {
   3.726238012548543*^9, 3.726238033186521*^9}, {3.726238065643731*^9, 
   3.726238123295876*^9}, {3.7262385588860693`*^9, 3.726238664321314*^9}, {
   3.726238758698594*^9, 3.726238759634266*^9}, {3.7262393065760803`*^9, 
   3.726239310381542*^9}, {3.727446369517453*^9, 3.7274464344360743`*^9}, {
   3.7274465382870913`*^9, 3.727446614788828*^9}, {3.727446754352131*^9, 
   3.727446835532304*^9}, {3.727446904491542*^9, 3.727446960775614*^9}, {
   3.727446999022221*^9, 3.72744701226252*^9}, {3.727447043524803*^9, 
   3.727447046942361*^9}, {3.727447219805912*^9, 3.7274472808207197`*^9}, {
   3.727447742241107*^9, 3.727447840860759*^9}, {3.727448262086053*^9, 
   3.727448368121058*^9}, 3.727448702087809*^9, {3.72744875202466*^9, 
   3.727448770551177*^9}, 3.727449772182585*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"f", "[", 
   RowBox[{"theta1_", ",", "theta2_"}], "]"}], ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "U", ",", "AtU", ",", "UtB", ",", "AtUtU", ",", "UtUtB", ",", "params", 
      ",", "Dmat", ",", "d1", ",", "d2", ",", "d3", ",", "d4", ",", "d5", ",",
       "d6", ",", "d7", ",", "d8", ",", "psi", ",", "finalMat", ",", "phi", 
      ",", "psi0", ",", "psi1", ",", "eq1", ",", "eq2", ",", "eq3", ",", 
      "eq4"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"U", " ", "=", " ", 
      RowBox[{"buildU", "[", 
       RowBox[{
        RowBox[{"Pi", "/", "2"}], ",", "theta1", ",", "theta2", ",", 
        RowBox[{"Pi", "/", "2"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"AtU", "=", " ", 
      RowBox[{"ArrayFlatten", "[", 
       RowBox[{"TensorProduct", "[", 
        RowBox[{
         RowBox[{"IdentityMatrix", "[", "2", "]"}], ",", "U"}], "]"}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"UtB", " ", "=", 
      RowBox[{"ArrayFlatten", "[", 
       RowBox[{"TensorProduct", "[", 
        RowBox[{
         RowBox[{"ConjugateTranspose", "[", "U", "]"}], ",", 
         RowBox[{"IdentityMatrix", "[", "2", "]"}]}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"AtUtU", " ", "=", " ", 
      RowBox[{"ArrayFlatten", "[", 
       RowBox[{"TensorProduct", "[", 
        RowBox[{"AtU", ",", "U"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"UtUtB", " ", "=", " ", 
      RowBox[{"ArrayFlatten", "[", 
       RowBox[{"TensorProduct", "[", 
        RowBox[{
         RowBox[{"ConjugateTranspose", "[", "U", "]"}], ",", "UtB"}], "]"}], 
       "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"params", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{
       "d1", ",", "d2", ",", "d3", ",", "d4", ",", "d5", ",", "d6", ",", "d7",
         ",", "d8"}], "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Dmat", " ", "=", " ", 
      RowBox[{"DiagonalMatrix", "[", 
       RowBox[{"Exp", "[", 
        RowBox[{"I", "*", "params"}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"psi", " ", "=", " ", 
      RowBox[{"Flatten", "[", 
       RowBox[{"TensorProduct", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"psi0", ",", "psi1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "0"}], "}"}]}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"finalMat", " ", "=", " ", 
      RowBox[{"FullSimplify", "[", " ", 
       RowBox[{
        RowBox[{"UtUtB", ".", "Dmat", ".", "AtUtU"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Element", "[", 
           RowBox[{"theta1", ",", "Reals"}], "]"}], ",", 
          RowBox[{"Element", "[", 
           RowBox[{"theta2", ",", "Reals"}], "]"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"phi", " ", "=", " ", 
      RowBox[{"finalMat", ".", "psi"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", "Postselection", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"phi", " ", "=", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"phi", "[", 
         RowBox[{"[", 
          RowBox[{"1", ";;", "2"}], "]"}], "]"}], "//", "Normalize"}], "//", 
       "Simplify"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"psi", " ", "=", " ", 
      RowBox[{"H", ".", 
       RowBox[{"{", 
        RowBox[{"psi0", ",", "psi1"}], "}"}]}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"eq1", " ", "=", " ", 
      RowBox[{
       RowBox[{"Assuming", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Element", "[", 
            RowBox[{"theta1", ",", "Reals"}], "]"}], ",", 
           RowBox[{"Element", "[", 
            RowBox[{"theta2", ",", "Reals"}], "]"}]}], "}"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"Abs", "[", 
            RowBox[{
             RowBox[{"phi", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "-", " ", 
             RowBox[{"psi", "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "^", "2"}], "/.", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"psi0", "\[Rule]", "0"}], ",", 
            RowBox[{"psi1", "\[Rule]", " ", "1"}]}], "}"}]}]}], "]"}], "//", 
       "Simplify"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"eq2", " ", "=", 
      RowBox[{
       RowBox[{"Assuming", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Element", "[", 
            RowBox[{"theta1", ",", "Reals"}], "]"}], ",", 
           RowBox[{"Element", "[", 
            RowBox[{"theta2", ",", "Reals"}], "]"}]}], "}"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"Abs", "[", 
            RowBox[{
             RowBox[{"phi", "[", 
              RowBox[{"[", "1", "]"}], "]"}], " ", "-", " ", 
             RowBox[{"psi", "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "^", "2"}], "/.", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"psi0", "\[Rule]", "1"}], ",", 
            RowBox[{"psi1", "\[Rule]", "0"}]}], "}"}]}]}], "]"}], "//", 
       "Simplify"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"eq3", " ", "=", " ", 
      RowBox[{
       RowBox[{"Assuming", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Element", "[", 
            RowBox[{"theta1", ",", "Reals"}], "]"}], ",", 
           RowBox[{"Element", "[", 
            RowBox[{"theta2", ",", "Reals"}], "]"}]}], "}"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"Abs", "[", 
            RowBox[{
             RowBox[{"phi", "[", 
              RowBox[{"[", "2", "]"}], "]"}], "-", " ", 
             RowBox[{"psi", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "^", "2"}], "/.", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"psi0", "\[Rule]", "0"}], ",", 
            RowBox[{"psi1", "\[Rule]", " ", "1"}]}], "}"}]}]}], "]"}], "//", 
       "Simplify"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"eq4", " ", "=", " ", 
      RowBox[{
       RowBox[{"Assuming", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Element", "[", 
            RowBox[{"theta1", ",", "Reals"}], "]"}], ",", 
           RowBox[{"Element", "[", 
            RowBox[{"theta2", ",", "Reals"}], "]"}]}], "}"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"Abs", "[", 
            RowBox[{
             RowBox[{"phi", "[", 
              RowBox[{"[", "2", "]"}], "]"}], " ", "-", 
             RowBox[{"psi", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "^", "2"}], "/.", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"psi0", "\[Rule]", "1"}], ",", 
            RowBox[{"psi1", "\[Rule]", "0"}]}], "}"}]}]}], "]"}], "//", 
       "Simplify"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Dmat", " ", "=", " ", 
      RowBox[{"DiagonalMatrix", "[", 
       RowBox[{"Exp", "[", 
        RowBox[{"I", "*", 
         RowBox[{"NArgMin", "[", 
          RowBox[{
           RowBox[{"eq1", "+", "eq2", "+", "eq3", "+", "eq4"}], ",", 
           "params"}], "]"}]}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"Return", "[", 
      RowBox[{"Mean", "[", 
       RowBox[{"Abs", "[", 
        RowBox[{"testOptMat3Q", "[", 
         RowBox[{"Dmat", ",", "U", ",", "50"}], "]"}], "]"}], "]"}], "]"}], 
     ";"}]}], "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"g", "[", "list_", "]"}], ":=", 
   RowBox[{"f", "[", 
    RowBox[{
     RowBox[{"list", "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{"list", "[", 
      RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Clear", "[", 
  RowBox[{"i", ",", "j"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"tab", " ", "=", " ", 
  RowBox[{"Flatten", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"i", ",", "j"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", 
        RowBox[{"Pi", "/", "4"}], ",", 
        RowBox[{"3", 
         RowBox[{"Pi", "/", "4"}]}], ",", 
        RowBox[{"Pi", "/", "8"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", 
        RowBox[{"Pi", "/", "4"}], ",", 
        RowBox[{"3", 
         RowBox[{"Pi", "/", "4"}]}], ",", 
        RowBox[{"Pi", "/", "8"}]}], "}"}]}], "]"}], ",", "1"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"plotter", " ", "=", " ", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"Append", "[", 
     RowBox[{
      RowBox[{"tab", "[", 
       RowBox[{"[", "i", "]"}], "]"}], ",", 
      RowBox[{"g", "[", 
       RowBox[{"tab", "[", 
        RowBox[{"[", "i", "]"}], "]"}], "]"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", 
      RowBox[{"Length", "[", "tab", "]"}]}], "}"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.7264187383108*^9, 3.726418775930904*^9}, {
   3.727449237806766*^9, 3.7274493061140413`*^9}, {3.727449548033236*^9, 
   3.727449684875413*^9}, {3.727449780481138*^9, 3.7274497848228483`*^9}, {
   3.727449844606278*^9, 3.7274499413538027`*^9}, {3.727449978905792*^9, 
   3.727450007127473*^9}, 3.727450039686018*^9, {3.727450123075075*^9, 
   3.727450190608213*^9}, {3.7274507678438873`*^9, 3.727450784615844*^9}, {
   3.727450932253491*^9, 3.727450945785778*^9}, {3.727451028574658*^9, 
   3.727451144109263*^9}, {3.727451260231545*^9, 3.727451265125383*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FractionBox["\[Pi]", "4"], ",", 
     FractionBox["\[Pi]", "4"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["\[Pi]", "4"], ",", 
     FractionBox[
      RowBox[{"3", " ", "\[Pi]"}], "8"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["\[Pi]", "4"], ",", 
     FractionBox["\[Pi]", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["\[Pi]", "4"], ",", 
     FractionBox[
      RowBox[{"5", " ", "\[Pi]"}], "8"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["\[Pi]", "4"], ",", 
     FractionBox[
      RowBox[{"3", " ", "\[Pi]"}], "4"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{"3", " ", "\[Pi]"}], "8"], ",", 
     FractionBox["\[Pi]", "4"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{"3", " ", "\[Pi]"}], "8"], ",", 
     FractionBox[
      RowBox[{"3", " ", "\[Pi]"}], "8"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{"3", " ", "\[Pi]"}], "8"], ",", 
     FractionBox["\[Pi]", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{"3", " ", "\[Pi]"}], "8"], ",", 
     FractionBox[
      RowBox[{"5", " ", "\[Pi]"}], "8"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{"3", " ", "\[Pi]"}], "8"], ",", 
     FractionBox[
      RowBox[{"3", " ", "\[Pi]"}], "4"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["\[Pi]", "2"], ",", 
     FractionBox["\[Pi]", "4"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["\[Pi]", "2"], ",", 
     FractionBox[
      RowBox[{"3", " ", "\[Pi]"}], "8"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["\[Pi]", "2"], ",", 
     FractionBox["\[Pi]", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["\[Pi]", "2"], ",", 
     FractionBox[
      RowBox[{"5", " ", "\[Pi]"}], "8"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["\[Pi]", "2"], ",", 
     FractionBox[
      RowBox[{"3", " ", "\[Pi]"}], "4"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{"5", " ", "\[Pi]"}], "8"], ",", 
     FractionBox["\[Pi]", "4"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{"5", " ", "\[Pi]"}], "8"], ",", 
     FractionBox[
      RowBox[{"3", " ", "\[Pi]"}], "8"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{"5", " ", "\[Pi]"}], "8"], ",", 
     FractionBox["\[Pi]", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{"5", " ", "\[Pi]"}], "8"], ",", 
     FractionBox[
      RowBox[{"5", " ", "\[Pi]"}], "8"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{"5", " ", "\[Pi]"}], "8"], ",", 
     FractionBox[
      RowBox[{"3", " ", "\[Pi]"}], "4"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{"3", " ", "\[Pi]"}], "4"], ",", 
     FractionBox["\[Pi]", "4"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{"3", " ", "\[Pi]"}], "4"], ",", 
     FractionBox[
      RowBox[{"3", " ", "\[Pi]"}], "8"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{"3", " ", "\[Pi]"}], "4"], ",", 
     FractionBox["\[Pi]", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{"3", " ", "\[Pi]"}], "4"], ",", 
     FractionBox[
      RowBox[{"5", " ", "\[Pi]"}], "8"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{"3", " ", "\[Pi]"}], "4"], ",", 
     FractionBox[
      RowBox[{"3", " ", "\[Pi]"}], "4"]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.7274497862220507`*^9, 3.7274499450564327`*^9, {3.727449981370318*^9, 
   3.727450015190688*^9}, 3.727450125620326*^9, 3.727450198134573*^9, 
   3.727450787522299*^9, 3.727450948397924*^9, 3.727451042531538*^9, 
   3.727451110000059*^9, 3.727451145384161*^9, 3.7274512679763927`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FractionBox["\[Pi]", "4"], ",", 
     FractionBox["\[Pi]", "4"], ",", "0.820215376645525`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["\[Pi]", "4"], ",", 
     FractionBox[
      RowBox[{"3", " ", "\[Pi]"}], "8"], ",", "0.9348280123890216`"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["\[Pi]", "4"], ",", 
     FractionBox["\[Pi]", "2"], ",", "0.9861585059786439`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["\[Pi]", "4"], ",", 
     FractionBox[
      RowBox[{"5", " ", "\[Pi]"}], "8"], ",", "0.9703036777731279`"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["\[Pi]", "4"], ",", 
     FractionBox[
      RowBox[{"3", " ", "\[Pi]"}], "4"], ",", "0.8318260845397185`"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{"3", " ", "\[Pi]"}], "8"], ",", 
     FractionBox["\[Pi]", "4"], ",", "0.8104328191649677`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{"3", " ", "\[Pi]"}], "8"], ",", 
     FractionBox[
      RowBox[{"3", " ", "\[Pi]"}], "8"], ",", "0.9162489750378262`"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{"3", " ", "\[Pi]"}], "8"], ",", 
     FractionBox["\[Pi]", "2"], ",", "0.9667986616810406`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{"3", " ", "\[Pi]"}], "8"], ",", 
     FractionBox[
      RowBox[{"5", " ", "\[Pi]"}], "8"], ",", "0.9915372188082509`"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{"3", " ", "\[Pi]"}], "8"], ",", 
     FractionBox[
      RowBox[{"3", " ", "\[Pi]"}], "4"], ",", "0.8165525304242667`"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["\[Pi]", "2"], ",", 
     FractionBox["\[Pi]", "4"], ",", "0.8421886888920508`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["\[Pi]", "2"], ",", 
     FractionBox[
      RowBox[{"3", " ", "\[Pi]"}], "8"], ",", "0.9690569802136436`"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["\[Pi]", "2"], ",", 
     FractionBox["\[Pi]", "2"], ",", "0.9999998471320919`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["\[Pi]", "2"], ",", 
     FractionBox[
      RowBox[{"5", " ", "\[Pi]"}], "8"], ",", "0.9772993870547626`"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["\[Pi]", "2"], ",", 
     FractionBox[
      RowBox[{"3", " ", "\[Pi]"}], "4"], ",", "0.8293124206264784`"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{"5", " ", "\[Pi]"}], "8"], ",", 
     FractionBox["\[Pi]", "4"], ",", "0.8189783943044446`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{"5", " ", "\[Pi]"}], "8"], ",", 
     FractionBox[
      RowBox[{"3", " ", "\[Pi]"}], "8"], ",", "0.9646705006612692`"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{"5", " ", "\[Pi]"}], "8"], ",", 
     FractionBox["\[Pi]", "2"], ",", "0.9993248244754125`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{"5", " ", "\[Pi]"}], "8"], ",", 
     FractionBox[
      RowBox[{"5", " ", "\[Pi]"}], "8"], ",", "0.9747565724861994`"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{"5", " ", "\[Pi]"}], "8"], ",", 
     FractionBox[
      RowBox[{"3", " ", "\[Pi]"}], "4"], ",", "0.8207021566864242`"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{"3", " ", "\[Pi]"}], "4"], ",", 
     FractionBox["\[Pi]", "4"], ",", "0.8415178149419853`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{"3", " ", "\[Pi]"}], "4"], ",", 
     FractionBox[
      RowBox[{"3", " ", "\[Pi]"}], "8"], ",", "0.9826206158748326`"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{"3", " ", "\[Pi]"}], "4"], ",", 
     FractionBox["\[Pi]", "2"], ",", "0.7959298880018322`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{"3", " ", "\[Pi]"}], "4"], ",", 
     FractionBox[
      RowBox[{"5", " ", "\[Pi]"}], "8"], ",", "0.9999611891698376`"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{"3", " ", "\[Pi]"}], "4"], ",", 
     FractionBox[
      RowBox[{"3", " ", "\[Pi]"}], "4"], ",", "0.8281415870018028`"}], 
    "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.7274497862220507`*^9, 3.7274499450564327`*^9, {3.727449981370318*^9, 
   3.727450015190688*^9}, 3.727450125620326*^9, 3.727450198134573*^9, 
   3.727450787522299*^9, 3.727450948397924*^9, 3.727451042531538*^9, 
   3.727451110000059*^9, 3.727451145384161*^9, 3.727451608957818*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListDensityPlot", "[", 
  RowBox[{"plotter", ",", 
   RowBox[{"InterpolationOrder", "\[Rule]", "0"}], ",", 
   RowBox[{"ColorFunction", "\[Rule]", "\"\<TemperatureMap\>\""}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Rx Angle\>\"", ",", "\"\<Rz Angle\>\""}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.727451205381542*^9, 3.727451245198324*^9}}],

Cell[BoxData[
 GraphicsBox[GraphicsComplexBox[CompressedData["
1:eJyNkyFvAlEQhK/8iKb2JAJV09QUQagn1F0IaVKDwdwzhASDr+I34LGQ+iZV
dVXVmFZVtSSF5BbxJZN5gkx2d9682blH+TgdPLWKolgefycc3Ty0Z5PvO4VV
g/V6u98efiQvYb7bvL3c9v/k+ZhHXXx+vVb3F93cedS812H4oC/6S4Ln9qZe
IPdxdRI61AueysflS73a6PE++ma+6l2MhY9crEyOCXu5fZUPxSNGHsyPeTkd
p8e5+q7M170L9a7U/uNMPfrORZWby4F9VTue66v8c/Nw/zPnj+cdqj2uOr3h
b7k/v4+oQ1/NQ0/xqU9+zN/L68X8o9W9bPRV/dzoq3rV6EdNfTXnXiPcy3nC
njV88Dz5zGEHX9RTuakcqef40SfGnDz2/wFvfDii
   "], {
    {GrayLevel[0.8], EdgeForm[None], 
     GraphicsGroupBox[{PolygonBox[{{113, 1, 97, 129}, {128, 96, 112, 132}}], 
       PolygonBox[{{126, 83, 84, 82, 125}, {99, 4, 2, 3, 98}, {101, 7, 5, 6, 
        100}, {110, 93, 94, 95, 111}, {103, 10, 8, 9, 102}, {120, 37, 38, 39, 
        119}, {131, 105, 85, 86, 127}, {124, 61, 62, 63, 123}, {122, 59, 60, 
        58, 121}, {109, 90, 91, 92, 108}, {107, 87, 88, 89, 106}, {116, 13, 
        14, 15, 115}, {118, 35, 36, 34, 117}, {130, 104, 12, 11, 114}}], 
       PolygonBox[{{76, 77, 78, 79, 80, 81}, {70, 71, 72, 73, 74, 75}, {64, 
        65, 66, 67, 68, 69}, {22, 23, 24, 25, 26, 27}, {46, 47, 48, 49, 50, 
        51}, {52, 53, 54, 55, 56, 57}, {40, 41, 42, 43, 44, 45}, {28, 29, 30, 
        31, 32, 33}, {16, 17, 18, 19, 20, 21}}]}]}, {}, {}, {}, {}},
   VertexColors->CompressedData["
1:eJxTTMoPSmViYGBoAWJmII6rtrAv2nHd3qP42oz4rfftH0q0TpK2eWff3XV4
SsqE9/ZsG5bq8j9/Zy+8Z9bV5M03SRavjLWyyLF8ba9s/PzlXY6b9hF3L9zN
kjtJsrjBw0ObtSe8sRc6PvPhydjH9lp6TZ+ct54lWXxaZsy95Kh79s9LhO22
bHhkH+ld73685B1O8SsKVYuLOy/ZJ6eX98n8u2W/6onxtcdCpItfeNg+YfH1
9/brn+yblrb3vb1J6vEXAROeDZj4RBavNZ1339hHTrTVltj7xD7whIpP3fZz
Aybes0n35vdzr+wPuTJMiVpyyd4ncYXT8rbjAya+0lt9s/Ouq/abrpgdrfp9
1/68Q0bjLe13JIvzMb7ZcfvOI/u69Z4/z697ap+1762W4H7SxYMaplRtWP3G
3tSEd+K+W4/tlRSue8gKnhswcdETb3Sq1F/Zi0Q7XhbSPmjvyL81V4L16ICJ
u4ZLbTrw9bW93D/nC3MWPLDXmBOSdHfj6QETV3y+aVHH6jv2Cv+OGeb9f2i/
5b35/8qUdySLf1nxmkWd57p9xQUZJRWF+/avbz4PnWdGurj55qQkF4G39rMy
/k5om/DU3mPJjQdPY84PmPg0tqmB10xe2esHn9989egh+483Hn51sTg6YOIv
s9oaH+q+sdf/NcWyav5D+2ef/ZRMcs8MmLhQ3Y1s+z/X7W3Y/JskP9y3f2NZ
NMHF7h3J4nIa9gxH5j+yv1HS9NGs9qm96YLpnx134RZ/Hj//kHfDa/t1v47N
7BS7a3+rJyr6iuYpksWPda4vE3l+zL7Vcabb5O7L9ocFLGtt778lWfz2Mm9u
O41X9ixn9b/McDpoH6zsup6N4yjJ4u02c0VKOO7Yz+479vHsjof2HYt4XrjH
v7OnVvuH1u0ZXO0TasUjreOF1PCnVnuM1vU1rctzauV3aoU/qeYDAKGWXhU=

    "]],
  AspectRatio->1,
  DisplayFunction->Identity,
  Frame->True,
  FrameLabel->{{
     FormBox["\"Rz Angle\"", TraditionalForm], None}, {
     FormBox["\"Rx Angle\"", TraditionalForm], None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultColorFunction" -> 
    "M10DefaultDensityGradient"},
  PlotRange->{{0.7853981633974483, 2.356194490192345}, {0.7853981633974483, 
   2.356194490192345}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.727451222886984*^9, 3.727451246367956*^9}, 
   3.7274516336826067`*^9}]
}, Open  ]]
},
WindowSize->{1680, 930},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
FrontEndVersion->"11.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (September \
21, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 25466, 587, 1923, "Input"],
Cell[26027, 609, 13132, 304, 1020, "Input"],
Cell[39162, 915, 76, 1, 32, "Input"],
Cell[39241, 918, 12412, 303, 1020, "Input"],
Cell[CellGroupData[{
Cell[51678, 1225, 516, 13, 54, "Input"],
Cell[52197, 1240, 1435, 31, 149, "Output"],
Cell[53635, 1273, 1715, 28, 142, "Print"],
Cell[55353, 1303, 313, 5, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[55703, 1313, 2282, 60, 117, "Input"],
Cell[57988, 1375, 22434, 450, 246, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[80459, 1830, 1128, 27, 180, "Input"],
Cell[CellGroupData[{
Cell[81612, 1861, 661, 17, 24, "Print"],
Cell[82276, 1880, 11305, 205, 101, "Print"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[93630, 2091, 151, 3, 54, "Input"],
Cell[93784, 2096, 98, 1, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[93919, 2102, 8649, 166, 285, "Input"],
Cell[102571, 2270, 77, 1, 32, "Output"],
Cell[102651, 2273, 387, 6, 24, "Print"]
}, Closed]],
Cell[CellGroupData[{
Cell[103075, 2284, 6274, 97, 48, "Input"],
Cell[109352, 2383, 14365, 282, 231, "Output"],
Cell[123720, 2667, 10172, 207, 176, "Output"]
}, Open  ]],
Cell[133907, 2877, 137, 2, 54, "Input"],
Cell[CellGroupData[{
Cell[134069, 2883, 7398, 150, 306, "Input"],
Cell[141470, 3035, 464, 8, 24, "Print"]
}, Open  ]],
Cell[141949, 3046, 1793, 38, 54, "Input"],
Cell[CellGroupData[{
Cell[143767, 3088, 12723, 321, 789, "Input"],
Cell[156493, 3411, 621, 9, 24, "Print"],
Cell[157117, 3422, 797, 15, 24, "Message"]
}, Open  ]],
Cell[CellGroupData[{
Cell[157951, 3442, 5790, 114, 159, "Input"],
Cell[163744, 3558, 2710, 65, 47, "Output"],
Cell[166457, 3625, 259, 6, 40, "Message"],
Cell[166719, 3633, 259, 6, 40, "Message"],
Cell[166981, 3641, 259, 6, 40, "Message"],
Cell[167243, 3649, 337, 7, 24, "Message"],
Cell[167583, 3658, 445499, 7350, 289, 329062, 5442, "CachedBoxData", \
"BoxData", "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[613119, 11013, 1594, 45, 138, "Input"],
Cell[614716, 11060, 1962, 44, 260, "Output"],
Cell[616681, 11106, 1964, 44, 260, "Output"]
}, Open  ]],
Cell[618660, 11153, 87, 1, 54, "Input"],
Cell[CellGroupData[{
Cell[618772, 11158, 6469, 170, 726, "Input"],
Cell[625244, 11330, 2317, 68, 54, "Output"],
Cell[627564, 11400, 324, 5, 24, "Print"],
Cell[627891, 11407, 11484, 298, 226, "Output"],
Cell[639378, 11707, 324, 5, 24, "Print"],
Cell[639705, 11714, 572, 17, 49, "Output"]
}, Open  ]],
Cell[640292, 11734, 11645, 301, 600, "Input"],
Cell[CellGroupData[{
Cell[651962, 12039, 9704, 248, 642, "Input"],
Cell[661669, 12289, 4045, 137, 79, "Output"],
Cell[665717, 12428, 4803, 152, 113, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[670557, 12585, 416, 9, 32, "Input"],
Cell[670976, 12596, 3055, 60, 408, "Output"]
}, Open  ]]
}
]
*)

